!function(r,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/core"),require("@angular/forms"),require("@angular/common")):"function"==typeof define&&define.amd?define("optimum-components",["exports","@angular/core","@angular/forms","@angular/common"],o):o((r=r||self)["optimum-components"]={},r.ng.core,r.ng.forms,r.ng.common)}(this,function(r,o,n,t){"use strict";var e=function(){function r(){}return r.decorators=[{type:o.Injectable,args:[{providedIn:"root"}]}],r.ctorParameters=function(){return[]},r.ngInjectableDef=o.ɵɵdefineInjectable({factory:function(){return new r},token:r,providedIn:"root"}),r}(),i=function(){function r(){}return r.prototype.ngOnInit=function(){},r.decorators=[{type:o.Component,args:[{selector:"optimum-optimum-components",template:"\n    <p>\n      optimum-components works!\n    </p>\n  "}]}],r.ctorParameters=function(){return[]},r}(),u=function(){function r(){this.debug=!1,this.submitted=!1}return r.prototype.ngOnInit=function(){},r.prototype.onSubmit=function(){this.submitted=!0},r.decorators=[{type:o.Component,args:[{selector:"optimum-text-area-input",template:'<div class="container">\r\n    <div *ngIf="debug==true">\r\n      <h4> Optimum-text-area-input component</h4>\r\n    </div>\r\n    <form [formGroup]="profileForm" novalidate>\r\n      <div class="form-group">\r\n        <label for="textAreaInput"> {{labelName}}:\r\n          <textarea class="form-control" id="textAreaInput" [(ngModel)]="userProfileModel.textAreaInput"\r\n            formControlName="textAreaInput"> </textarea>\r\n        </label>\r\n        <div *ngIf="debug==true">\r\n          <br>\r\n          DEBUG: model.textInput content: {{userProfileModel.textInput}}\r\n          <br>\r\n          DEBUG: profileForm status: {{profileForm.status}}\r\n          <br>\r\n          DEBUG: profileForm dirty: {{profileForm.dirty}}\r\n          <br>\r\n          DEBUG: profileForm touched: {{profileForm.touched}}\r\n          <br>\r\n          DEBUG: model content: {{ userProfileModel | json }}\r\n          <br>\r\n        </div>\r\n        <div\r\n          *ngIf="profileForm.controls[\'textAreaInput\'].invalid && (profileForm.controls[\'textAreaInput\'].dirty || profileForm.controls[\'textAreaInput\'].touched)"\r\n          class="alert alert-danger">\r\n          <div *ngIf="profileForm.controls[\'textAreaInput\'].errors.required">\r\n            This is required.\r\n          </div>\r\n          <div *ngIf="profileForm.controls[\'textAreaInput\'].invalid">\r\n            Error in input.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button type="submit" class="btn btn-success" onclick="onSubmit()">Submit</button>\r\n  \r\n    </form>\r\n  </div>',styles:["input.ng-invalid.ng-touched  {border: 2px solid #a94442; /* red */ }"]}]}],r.ctorParameters=function(){return[]},r.propDecorators={labelName:[{type:o.Input}],userProfileModel:[{type:o.Input}],profileForm:[{type:o.Input}]},r}(),l=function(){function r(){this.debug=!1,this.submitted=!1}return r.prototype.ngOnInit=function(){},r.prototype.onSubmit=function(){this.submitted=!0},r.decorators=[{type:o.Component,args:[{selector:"optimum-text-input",template:'<div class="container">\r\n  <div *ngIf="debug==true">\r\n    <h4> Optimum-text-input component</h4>\r\n  </div>\r\n  <form [formGroup]="profileForm" novalidate>\r\n    <div class="form-group">\r\n      <label for="textInput"> {{labelName}}:\r\n        <input type="text" class="form-control" id="textInput" [(ngModel)]="userProfileModel.textInput"\r\n          formControlName="textInput">\r\n      </label>\r\n      <div *ngIf="debug==true">\r\n        <br>\r\n        DEBUG: model.textInput content: {{userProfileModel.textInput}}\r\n        <br>\r\n        DEBUG: profileForm status: {{profileForm.status}}\r\n        <br>\r\n        DEBUG: profileForm dirty: {{profileForm.dirty}}\r\n        <br>\r\n        DEBUG: profileForm touched: {{profileForm.touched}}\r\n        <br>\r\n        DEBUG: model content: {{ userProfileModel | json }}\r\n        <br>\r\n      </div>\r\n      <div\r\n        *ngIf="profileForm.controls[\'textInput\'].invalid && (profileForm.controls[\'textInput\'].dirty || profileForm.controls[\'textInput\'].touched)"\r\n        class="alert alert-danger">\r\n        <div *ngIf="profileForm.controls[\'textInput\'].errors.required">\r\n          This is required.\r\n        </div>\r\n        <div *ngIf="profileForm.controls[\'textInput\'].invalid">\r\n          Error in input.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button type="submit" class="btn btn-success" onclick="onSubmit()">Submit</button>\r\n\r\n  </form>\r\n</div>',styles:["input.ng-invalid.ng-touched  {border: 2px solid #a94442; /* red */ }"]}]}],r.ctorParameters=function(){return[]},r.propDecorators={labelName:[{type:o.Input}],userProfileModel:[{type:o.Input}],profileForm:[{type:o.Input}]},r}(),p=function(){function r(){this.debug=!1,this.submitted=!1}return r.prototype.ngOnInit=function(){},r.prototype.onSubmit=function(){this.submitted=!0},r.decorators=[{type:o.Component,args:[{selector:"optimum-phone-input",template:'<div class="container">\r\n    <div *ngIf="debug==true">\r\n      <h4> Optimum-phone-input component</h4>\r\n    </div>\r\n    <form [formGroup]="profileForm" novalidate>\r\n      <div class="form-group">\r\n        <label for="phone"> {{labelName}}: XXX-XXX-XXXX\r\n          <input  type="tel" class="form-control" id="phone" [(ngModel)]="userProfileModel.phone"\r\n            formControlName="phone" pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}" >\r\n        </label>\r\n        <div *ngIf="debug==true">\r\n          <br>\r\n          DEBUG: model.textInput content: {{userProfileModel.textInput}}\r\n          <br>\r\n          DEBUG: profileForm status: {{profileForm.status}}\r\n          <br>\r\n          DEBUG: profileForm dirty: {{profileForm.dirty}}\r\n          <br>\r\n          DEBUG: profileForm touched: {{profileForm.touched}}\r\n          <br>\r\n          DEBUG: model content: {{ userProfileModel | json }}\r\n          <br>\r\n        </div>\r\n        <div\r\n          *ngIf="profileForm.controls[\'phone\'].invalid && (profileForm.controls[\'phone\'].dirty || profileForm.controls[\'phone\'].touched)"\r\n          class="alert alert-danger">\r\n          <div *ngIf="profileForm.controls[\'phone\'].errors.required">\r\n            This is required.\r\n          </div>\r\n          <div *ngIf="profileForm.controls[\'phone\'].invalid">\r\n            Error in input.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button type="submit" class="btn btn-success" onclick="onSubmit()">Submit</button>\r\n  \r\n    </form>\r\n  </div>',styles:["input.ng-invalid.ng-touched  {border: 2px solid #a94442; /* red */ }"]}]}],r.ctorParameters=function(){return[]},r.propDecorators={labelName:[{type:o.Input}],userProfileModel:[{type:o.Input}],profileForm:[{type:o.Input}]},r}(),d=function(){function r(){this.debug=!1,this.submitted=!1}return r.prototype.ngOnInit=function(){},r.prototype.onSubmit=function(){this.submitted=!0},r.decorators=[{type:o.Component,args:[{selector:"optimum-radio-input",template:'<div class="container">\r\n  <div *ngIf="debug==true">\r\n    <h4> Optimum-radio-input component</h4>\r\n  </div>\r\n  <form [formGroup]="profileForm" #f="ngForm" (ngSubmit)="onSubmit()"  novalidate>\r\n    <div class="form-group">\r\n      <label for="radio"> {{labelName}}:\r\n      </label>\r\n\r\n      <div *ngFor="let choice of radioChoices" >\r\n      <input type="radio" class="form-control" id="radio"\r\n        [(ngModel)]="userProfileModel.radio" formControlName="radio" [value]="choice"> {{choice}}\r\n      </div>\r\n      <div *ngIf="debug==true">\r\n        <br>\r\n        DEBUG: model.textInput content: {{userProfileModel.textInput}}\r\n        <br>\r\n        DEBUG: profileForm status: {{profileForm.status}}\r\n        <br>\r\n        DEBUG: profileForm dirty: {{profileForm.dirty}}\r\n        <br>\r\n        DEBUG: profileForm touched: {{profileForm.touched}}\r\n        <br>\r\n        DEBUG: model content: {{ userProfileModel | json }}\r\n        <br>\r\n      </div>\r\n      <div\r\n        *ngIf="profileForm.controls[\'radio\'].invalid && (profileForm.controls[\'radio\'].dirty || profileForm.controls[\'radio\'].touched)"\r\n        class="alert alert-danger">\r\n        <div *ngIf="profileForm.controls[\'radio\'].errors.required">\r\n          This is required.\r\n        </div>\r\n        <div *ngIf="profileForm.controls[\'radio\'].invalid">\r\n          Error in input.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button type="submit" class="btn btn-success">Submit</button>\r\n  </form >\r\n\r\n</div>',styles:["input.ng-invalid.ng-touched  {border: 2px solid #a94442; /* red */ }"]}]}],r.ctorParameters=function(){return[]},r.propDecorators={labelName:[{type:o.Input}],radioChoices:[{type:o.Input}],userProfileModel:[{type:o.Input}],profileForm:[{type:o.Input}]},r}(),s=function(){function r(){this.debug=!0,this.submitted=!1}return r.prototype.ngOnInit=function(){},r.prototype.onSubmit=function(){this.submitted=!0},r.decorators=[{type:o.Component,args:[{selector:"optimum-dropdown-input",template:'<div class="container">\r\n    <div *ngIf="debug==true">\r\n      <h4> Optimum-dropdown-input component</h4>\r\n    </div>\r\n    <form [formGroup]="profileForm" #f="ngForm" (ngSubmit)="onSubmit()"  novalidate>\r\n      <div class="form-group">\r\n        <label for="dropdown"> {{labelName}}:\r\n        </label>\r\n        <select  id="dropdown" class="form-control" [(ngModel)]="userProfileModel.dropdown" formControlName="dropdown" >\r\n        <option *ngFor="let choice of dropdownChoices; let i=index" [ngValue]="choice"> {{choice}}</option>\r\n        </select>\r\n        <div *ngIf="debug==true">\r\n          <br>\r\n          DEBUG: model.textInput content: {{userProfileModel.textInput}}\r\n          <br>\r\n          DEBUG: profileForm status: {{profileForm.status}}\r\n          <br>\r\n          DEBUG: profileForm dirty: {{profileForm.dirty}}\r\n          <br>\r\n          DEBUG: profileForm touched: {{profileForm.touched}}\r\n          <br>\r\n          DEBUG: model content: {{ userProfileModel | json }}\r\n          <br>\r\n        </div>\r\n        <div\r\n          *ngIf="profileForm.controls[\'dropdown\'].invalid && (profileForm.controls[\'dropdown\'].dirty || profileForm.controls[\'dropdown\'].touched)"\r\n          class="alert alert-danger">\r\n          <div *ngIf="profileForm.controls[\'dropdown\'].errors.required">\r\n            This is required.\r\n          </div>\r\n          <div *ngIf="profileForm.controls[\'dropdown\'].invalid">\r\n            Error in input.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button type="submit" class="btn btn-success">Submit</button>\r\n    </form >\r\n  \r\n  </div>',styles:["input.ng-invalid.ng-touched  {border: 2px solid #a94442; /* red */ }"]}]}],r.ctorParameters=function(){return[]},r.propDecorators={labelName:[{type:o.Input}],dropdownChoices:[{type:o.Input}],userProfileModel:[{type:o.Input}],profileForm:[{type:o.Input}]},r}(),m=function(){function r(){}return r.decorators=[{type:o.NgModule,args:[{declarations:[i,u,l,p,d,s],imports:[n.FormsModule,t.CommonModule,n.ReactiveFormsModule],exports:[i,u,l,p,d,s]}]}],r}();r.OptimumComponentsComponent=i,r.OptimumComponentsModule=m,r.OptimumComponentsService=e,r.ɵa=u,r.ɵb=l,r.ɵc=p,r.ɵd=d,r.ɵe=s,Object.defineProperty(r,"__esModule",{value:!0})});
//# sourceMappingURL=optimum-components.umd.min.js.map