{"version":3,"sources":["ng://optimum-components/lib/optimum-components.service.ts","ng://optimum-components/lib/optimum-components.component.ts","ng://optimum-components/lib/user-profile-model.ts","ng://optimum-components/lib/text-area-input/text-area-input.component.ts","ng://optimum-components/lib/text-input/text-input.component.ts","ng://optimum-components/lib/phone-input/phone-input.component.ts","ng://optimum-components/lib/radio-input/radio-input.component.ts","ng://optimum-components/lib/dropdown-input/dropdown-input.component.ts","ng://optimum-components/lib/optimum-components.module.ts"],"names":["OptimumComponentsService","Injectable","args","providedIn","OptimumComponentsComponent","prototype","ngOnInit","Component","selector","template","UserProfileModel","textInput","textAreaInput","phone","select","radio","dropdown","this","TextAreaInputComponent","fb","userProfileModel","profileForm","group","Validators","compose","required","updateOn","debug","submitted","onSubmit","FormBuilder","Input","TextInputComponent","PhoneInputComponent","RadioInputComponent","DropdownInputComponent","OptimumComponentsModule","NgModule","declarations","imports","FormsModule","CommonModule","ReactiveFormsModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OptimumComponentsService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'optimum-optimum-components',\n  template: `\n    <p>\n      optimum-components works!\n    </p>\n  `,\n  styles: []\n})\nexport class OptimumComponentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class UserProfileModel {\r\n    constructor(public textInput  : string,\r\n      public textAreaInput  : string,\r\n       public phone: string,\r\n       public select: string,\r\n       public radio: string,\r\n       public dropdown: string,\r\n  ){}\r\n  }\r\n  ","import { Component, OnInit, Input } from '@angular/core';\nimport { UserProfileModel } from '../user-profile-model';\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { Validators } from '@angular/forms';\n\n@Component({\n  selector: 'optimum-text-area-input',\n  templateUrl: './text-area-input.component.html',\n  styles: ['input.ng-invalid.ng-touched  {border: 2px solid #a94442; /* red */ }']\n})\nexport class TextAreaInputComponent implements OnInit {\n  @Input() labelName: string;\n  userProfileModel = new UserProfileModel('default', 'default', 'default', 'default', 'default', 'default')\n  profileForm = this.fb.group({\n    //textInput: ['', Validators.compose([Validators.required])],\n    textAreaInput: ['', Validators.compose([Validators.required])],\n    //phone: ['', Validators.compose([Validators.required])],\n    //select: ['', Validators.compose([Validators.required])],\n    //radio: ['', Validators.compose([Validators.required])],\n    //dropdown: ['', Validators.compose([Validators.required])],\n  },{updateOn: 'blur'});\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n  }\n\n  debug = true;\n  submitted = false;\n\n  onSubmit() { this.submitted = true; }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserProfileModel } from '../user-profile-model';\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { Validators } from '@angular/forms';\n\n@Component({\n  selector: 'optimum-text-input',\n  templateUrl: './text-input.component.html',\n  styles: ['input.ng-invalid.ng-touched  {border: 2px solid #a94442; /* red */ }']\n})\nexport class TextInputComponent implements OnInit {\n\n  @Input() labelName: string;\n\n  userProfileModel = new UserProfileModel('default', 'default', 'default', 'default', 'default', 'default')\n  profileForm = this.fb.group({\n    textInput: ['', Validators.compose([Validators.required])],\n    //textAreaInput: ['', Validators.compose([Validators.required])],\n    //phone: ['', Validators.compose([Validators.required])],\n    //select: ['', Validators.compose([Validators.required])],\n    //radio: ['', Validators.compose([Validators.required])],\n    //dropdown: ['', Validators.compose([Validators.required])],\n  },{updateOn: 'blur'});\n\n  constructor(private fb: FormBuilder) { }\n\n  \n\n  ngOnInit() {\n  }\n  debug = true;\n  submitted = false;\n\n  onSubmit() { this.submitted = true; }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserProfileModel } from '../user-profile-model';\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { Validators } from '@angular/forms';\n\n\n\n@Component({\n  selector: 'optimum-phone-input',\n  templateUrl: './phone-input.component.html',\n  styles: ['input.ng-invalid.ng-touched  {border: 2px solid #a94442; /* red */ }']\n})\nexport class PhoneInputComponent implements OnInit {\n  @Input() labelName: string;\n  userProfileModel = new UserProfileModel('default', 'default', 'default', 'default', 'default', 'default')\n  profileForm = this.fb.group({\n    //textInput: ['', Validators.compose([Validators.required])],\n    //textAreaInput: ['', Validators.compose([Validators.required])],\n    phone: ['', Validators.compose([Validators.required])],\n    //select: ['', Validators.compose([Validators.required])],\n    //radio: ['', Validators.compose([Validators.required])],\n    //dropdown: ['', Validators.compose([Validators.required])],\n  },{updateOn: 'blur'});\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n  }\n\n  debug = false;\n  submitted = false;\n\n  onSubmit() { this.submitted = true; }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserProfileModel } from '../user-profile-model';\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'optimum-radio-input',\n  templateUrl: './radio-input.component.html',\n  styles: ['input.ng-invalid.ng-touched  {border: 2px solid #a94442; /* red */ }']\n})\n\nexport class RadioInputComponent implements OnInit {\n  @Input() labelName: string;\n  @Input() radioChoices: string[];\n\n  userProfileModel = new UserProfileModel('default', 'default', 'default', 'default', 'default', 'default')\n  profileForm = this.fb.group({\n    //textInput: ['', Validators.compose([Validators.required])],\n    //textAreaInput: ['', Validators.compose([Validators.required])],\n    //phone: ['', Validators.compose([Validators.required])],\n    //select: ['', Validators.compose([Validators.required])],\n    radio: ['', Validators.compose([Validators.required])],\n    //dropdown: ['', Validators.compose([Validators.required])],\n  },{updateOn: 'blur'});\n\n  //radioChoices = ['yes', 'no', 'unsure'];\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n  }\n\n  debug = true;\n  submitted = false;\n\n  onSubmit() { this.submitted = true; }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserProfileModel } from '../user-profile-model';\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { Validators } from '@angular/forms';\n\n@Component({\n  selector: 'optimum-dropdown-input',\n  templateUrl: './dropdown-input.component.html',\n  styles: ['input.ng-invalid.ng-touched  {border: 2px solid #a94442; /* red */ }']\n})\nexport class DropdownInputComponent implements OnInit {\n  @Input() labelName: string;\n  @Input() dropdownChoices: string[];\n  userProfileModel = new UserProfileModel('default', 'default', 'default', 'default', 'default', 'default')\n  profileForm = this.fb.group({\n    //textInput: ['', Validators.compose([Validators.required])],\n    //textAreaInput: ['', Validators.compose([Validators.required])],\n    //phone: ['', Validators.compose([Validators.required])],\n    //select: ['', Validators.compose([Validators.required])],\n    //radio: ['', Validators.compose([Validators.required])],\n    dropdown: ['', Validators.compose([Validators.required])],\n  },{updateOn: 'blur'});\n\n  //dropdownChoices = ['male', 'female', 'pride'];\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n  }\n\n  debug = true;\n  submitted = false;\n\n  onSubmit() { this.submitted = true; }\n}\n","import { NgModule } from '@angular/core';\nimport { OptimumComponentsComponent } from './optimum-components.component';\nimport { TextAreaInputComponent } from './text-area-input/text-area-input.component';\nimport { TextInputComponent } from './text-input/text-input.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from \"@angular/common\";\nimport { PhoneInputComponent } from './phone-input/phone-input.component';\nimport { RadioInputComponent } from './radio-input/radio-input.component';\nimport { DropdownInputComponent } from './dropdown-input/dropdown-input.component'\n\n@NgModule({\n  declarations: [OptimumComponentsComponent, TextAreaInputComponent, TextInputComponent, PhoneInputComponent, RadioInputComponent, DropdownInputComponent],\n  imports: [FormsModule, CommonModule,ReactiveFormsModule\n  ],\n  exports: [OptimumComponentsComponent, TextAreaInputComponent, TextInputComponent, PhoneInputComponent,RadioInputComponent, DropdownInputComponent]\n})\nexport class OptimumComponentsModule { }\n"]}