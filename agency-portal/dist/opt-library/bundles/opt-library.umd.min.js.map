{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://opt-library/lib/opt-library.service.ts","ng://opt-library/lib/opt-library.component.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/util/util.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/accordion/accordion-config.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/accordion/accordion.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/accordion/accordion.module.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/alert/alert-config.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/alert/alert.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/alert/alert.module.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/buttons/label.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/buttons/checkbox.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/buttons/radio.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/buttons/buttons.module.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/carousel/carousel-config.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/carousel/carousel.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/carousel/carousel.module.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/collapse/collapse.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/collapse/collapse.module.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/ngb-date.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-tools.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-service.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/util/key.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-keymap-service.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-adapter.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month-view.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/util/autoclose.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/util/focus-trap.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/util/positioning.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-hijri.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-civil.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-umalqura.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/jalali/jalali.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/jalali/ngb-calendar-persian.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/hebrew/hebrew.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/hebrew/ngb-calendar-hebrew.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/hebrew/datepicker-i18n-hebrew.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-utc-adapter.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-adapter.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/dropdown/dropdown.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/modal/modal-config.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/util/popup.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/util/scrollbar.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/modal/modal-backdrop.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/modal/modal-ref.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/modal/modal-dismiss-reasons.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/modal/modal-window.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/modal/modal-stack.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/modal/modal.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/modal/modal.module.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/pagination/pagination-config.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/pagination/pagination.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/pagination/pagination.module.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/util/triggers.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/popover/popover-config.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/popover/popover.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/popover/popover.module.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/progressbar/progressbar.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/progressbar/progressbar.module.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/rating/rating-config.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/rating/rating.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/rating/rating.module.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/tabset/tabset-config.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/tabset/tabset.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/tabset/tabset.module.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/timepicker/ngb-time.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/timepicker/ngb-time-adapter.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/timepicker/timepicker.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/tooltip/tooltip.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/tooltip/tooltip.module.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/typeahead/highlight.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/typeahead/typeahead-window.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/util/accessibility/live.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/typeahead/typeahead-config.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/typeahead/typeahead.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/index.ts","../../../node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng:/@ng-bootstrap/ng-bootstrap/typeahead/typeahead.module.ts","ng://opt-library/choices/choices.ts","ng://opt-library/service-objects/address.ts","ng://opt-library/service-objects/claimant-so.ts","ng://opt-library/service-objects/update-claimant-so.ts","ng://opt-library/portal-services/toaster.service.ts","ng://opt-library/portal-services/claimant.service.ts","ng://opt-library/portal-services/portal.service.ts","ng://opt-library/lib/edit-claimant-address/edit-claimant-address.component.ts","ng://opt-library/lib/edit-claimant-details/edit-claimant-details.component.ts","ng://opt-library/custom-pipes/opt-ssn.pipe.ts","ng://opt-library/custom-pipes/opt-phone.pipe.ts","ng://opt-library/custom-pipes/opt-address.pipe.ts","ng://opt-library/custom-pipes/opt-date.pipe.ts","ng://opt-library/lib/opt-library.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","OptLibraryService","Injectable","args","providedIn","OptLibraryComponent","ngOnInit","Component","selector","template","toInteger","parseInt","toString","undefined","getValueInRange","max","min","Math","isString","isNumber","isNaN","isInteger","isFinite","floor","isDefined","padNumber","slice","hasClassName","element","className","split","indexOf","Element","closest","matches","msMatchesSelector","webkitMatchesSelector","el","document","documentElement","contains","parentElement","parentNode","nodeType","NgbAccordionConfig","closeOthers","nextId","NgbPanelToggle","accordion","panel","defineProperty","Directive","host","type","[disabled]","[class.collapsed]","[attr.aria-expanded]","[attr.aria-controls]","(click)","NgbAccordion","decorators","Inject","forwardRef","NgbPanel","Optional","Host","Input","NgbPanelHeader","templateRef","TemplateRef","NgbPanelTitle","NgbPanelContent","disabled","id","isOpen","ngAfterContentChecked","titleTpl","titleTpls","first","headerTpl","headerTpls","contentTpl","contentTpls","ContentChildren","descendants","config","activeIds","destroyOnHide","panelChange","EventEmitter","closeOtherPanels","isExpanded","panelId","expand","_changeOpenState","_findPanelById","expandAll","_this","panels","forEach","collapse","collapseAll","toggle","_closeOthers","_updateActiveIds","nextState","defaultPrevented_1","emit","preventDefault","find","filter","map","exportAs","class","role","[attr.aria-multiselectable]","Output","NGB_ACCORDION_DIRECTIVES","NgbAccordionModule","forRoot","ngModule","NgModule","declarations","exports","imports","CommonModule","NgbAlertConfig","dismissible","NgbAlert","_renderer","_element","close","closeHandler","ngOnChanges","changes","typeChange","firstChange","removeClass","nativeElement","previousValue","addClass","currentValue","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","[class.alert-dismissible]","Renderer2","ElementRef","NgbAlertModule","entryComponents","NgbButtonLabel","[class.btn]","[class.active]","[class.disabled]","[class.focus]","NGB_CHECKBOX_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","NgbCheckBox","multi","_label","_cd","valueChecked","valueUnChecked","onChange","_","onTouched","isFocused","focused","onInputChange","$event","modelToPropagate","target","checked","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","active","markForCheck","autocomplete","[checked]","(change)","(focus)","(blur)","providers","ChangeDetectorRef","NGB_RADIO_VALUE_ACCESSOR","NgbRadioGroup","_radios","Set","_value","name","_disabled","onRadioChange","radio","onRadioValueUpdate","_updateRadiosValue","register","add","_updateRadiosDisabled","unregister","delete","updateValue","updateDisabled","NgbRadio","_group","stringValue","setProperty","_checked","ngOnDestroy","[name]","NGB_BUTTON_DIRECTIVES","NgbButtonsModule","NgbCarouselConfig","interval","wrap","keyboard","pauseOnHover","showNavigationArrows","showNavigationIndicators","NgbSlide","tplRef","NgbCarousel","_platformId","_ngZone","_destroy$","Subject","_start$","_stop$","slide","ngAfterContentInit","isPlatformBrowser","runOutsideAngular","pipe","slides","switchMap","timer","takeUntil","merge","subscribe","run","activeSlide","_getSlideById","activeId","isFirstChange","select","slideId","_cycleToSelected","_getSlideEventDirection","prev","_getPrevSlide","NgbSlideEventDirection","RIGHT","_getNextSlide","LEFT","pause","cycle","slideIdx","direction","selectedSlide","current","currentActiveSlideId","nextActiveSlideId","_getSlideIdxById","toArray","currentSlideId","slideArr","currentSlideIdx","[style.display]","tabIndex","(mouseenter)","(mouseleave)","(keydown.arrowLeft)","(keydown.arrowRight)","PLATFORM_ID","NgZone","NGB_CAROUSEL_DIRECTIVES","NgbCarouselModule","NgbCollapse","collapsed","[class.collapse]","[class.show]","NgbCollapseModule","NgbDate","year","month","day","from","date","equals","other","before","after","fromJSDate","jsDate","getFullYear","getMonth","getDate","toJSDate","Date","getTime","setFullYear","NGB_DATEPICKER_CALENDAR_FACTORY","NgbCalendarGregorian","NgbCalendar","useFactory","tslib_1.__extends","getDaysPerWeek","getMonths","getWeeksPerMonth","getNext","period","number","setDate","getPrev","getWeekday","getDay","getWeekNumber","week","firstDayOfWeek","time","setMonth","round","getToday","isValid","isChangedDate","dateComparator","isChangedMonth","checkDateInRange","minDate","maxDate","isDateSelectable","state","markDisabled","buildMonths","calendar","i18n","force","displayMonths","months","monthsToReuse","splice","firstDate","reusedIndex","findIndex","dayTemplateData","outsideDays","calendarToday","lastDate","weeks","weekdays","daysPerWeek","firstMonthDate","dayOfWeek","getFirstViewDate","weekObject","days","newDate","nextDate","ariaLabel","getDayAriaLabel","today","contextUserData","dayObject","context","$implicit","data","currentMonth","selected","tabindex","hidden","buildMonth","shift","NGB_DATEPICKER_18N_FACTORY","locale","NgbDatepickerI18nDefault","NgbDatepickerI18n","getDayNumerals","getWeekNumerals","weekNumber","getYearNumerals","deps","LOCALE_ID","_locale","_super","weekdaysStartingOnSunday","getLocaleDayNames","FormStyle","Standalone","TranslationWidth","Short","_weekdaysShort","index","_monthsShort","getLocaleMonthNames","Abbreviated","_monthsFull","Wide","getWeekdayShortName","weekday","getMonthShortName","getMonthFullName","formatDate","NgbDatepickerService","_calendar","_i18n","_model$","_select$","_state","focusVisible","navigation","prevDisabled","nextDisabled","selectBoxes","years","selectedDate","model","_nextState","toValidDate","focus","focusDate","focusMove","focusSelect","emitEvent","open","options","defaultValue","ngbDate","patch","newState","_updateState","_patchContexts","prevDate","startDate","Error","checkMinBeforeMax","forceRebuild","yearChanged","monthChanged","start","end","generateSelectBoxYears","generateSelectBoxMonths","nextMonthDisabled","Tab","Enter","Escape","Space","PageUp","PageDown","End","Home","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","NgbDatepickerKeyMapService","_service","model$","_minDate","_maxDate","_firstViewDate","_lastViewDate","processKey","event","which","Key","shiftKey","stopPropagation","PREV","NEXT","NgbDatepickerConfig","showWeekdays","showWeekNumbers","NGB_DATEPICKER_DATE_ADAPTER_FACTORY","NgbDateStructAdapter","NgbDateAdapter","fromModel","toModel","NGB_DATEPICKER_VALUE_ACCESSOR","NgbDatepicker","_keyMapService","_elementRef","_ngbDateAdapter","_destroyed$","navigate","input","select$","oldDate","navigationPrevented","newSelectedDate","newFocusedDate","oldFocusedDate","_controlValue","onStable","asObservable","take","elementToFocus","querySelector","navigateTo","ngAfterViewInit","focusIns$","fromEvent","_monthsEl","focusOuts$","_a","relatedTarget","onDateSelect","onKeyDown","onNavigateDateSelect","onNavigateEvent","NavigationEvent","ViewChild","NgbDatepickerMonthView","doSelect","NgbDatepickerNavigation","isContainedIn","array","some","item","matchesSelectorIfAny","iOS","ngbAutoClose","zone","closed$","insideElements","ignoreElements","insideSelector","escapes$","mouseDowns$","MouseEvent","button","closeableClicks$","withLatestFrom","_b","delay","race","navigator","userAgent","test","FOCUSABLE_ELEMENTS_SELECTOR","join","getFocusableBoundaryElements","list","querySelectorAll","ngbFocusTrap","stopFocusTrap$","refocusOnClick","lastFocusedElement$","tabEvent","focusedElement","_c","last","arr","lastFocusedElement","Positioning","getAllStyles","window","getComputedStyle","getStyle","prop","isStaticPositioned","offsetParent","offsetParentEl","position","elPosition","parentOffset","width","height","top","bottom","left","right","getBoundingClientRect","offset","clientTop","clientLeft","elBcr","viewportOffset","pageYOffset","pageXOffset","elOffset","offsetHeight","offsetWidth","positionElements","hostElement","targetElement","placement","appendToBody","placementPrimary","placementSecondary","hostElPosition","targetElStyles","marginTop","parseFloat","marginBottom","marginLeft","marginRight","topPosition","leftPosition","style","transform","targetElBCR","html","windowHeight","innerHeight","clientHeight","windowWidth","innerWidth","clientWidth","placementSeparator","positionService","baseClass","placementVals","isArray","allowedPlacements","classList","addClassesToTarget","targetPlacement","primary","secondary","classes","classname","placementToRemove","remove","hasAuto","val","obj","search","testPlacement","isInViewport","placementVals_1","tslib_1.__values","placementVals_1_1","addedClasses","NGB_DATEPICKER_PARSER_FORMATTER_FACTORY","NgbDateISOParserFormatter","NgbDateParserFormatter","parse","dateParts","trim","format","NgbInputDatepicker","NGB_DATEPICKER_VALIDATOR","NG_VALIDATORS","_parserFormatter","_elRef","_vcRef","_cfr","_dateAdapter","_document","_changeDetector","_cRef","autoClose","dateSelect","closed","_onChange","_onTouched","_validatorChange","_zoneSubscription","_updatePopupPosition","instance","registerOnValidatorChange","validate","c","_fromDateStruct","requiredBefore","requiredAfter","invalid","_model","_writeModelValue","manualDateChange","updateView","inputValueChanged","_inputValue","cf","resolveComponentFactory","createComponent","_applyPopupStyling","location","_applyDatepickerInputs","_subscribeForDatepickerOutputs","changeDetectorRef","detectChanges","container","appendChild","hostView","onBlur","unsubscribe","datepickerInstance","optionName","navigateEvent","positionTarget","HTMLElement","(input)","ViewContainerRef","ComponentFactoryResolver","DOCUMENT","NgbDatepickerDayView","isMuted","[class.bg-primary]","[class.text-white]","[class.text-muted]","[class.outside]","NgbDatepickerNavigationSelect","changeMonth","changeYear","NgbCalendarHijri","_setYear","_setMonth","_setDay","toGregorian","MuhDate","fromGregorian","mDays","getDaysPerMonth","isGregorianLeapYear","gDate","mod","a","NgbCalendarIslamicCivil","gYear","gMonth","gDay","julianDay","GREGORIAN_EPOCH","hYear","hMonth","ceil","hDay","getIslamicMonthStart","hDate","wjd","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","yearday","leapadj","tjd2","GREGORIAN_FIRST_DATE","GREGORIAN_LAST_DATE","ONE_DAY","MONTH_LENGTH","NgbCalendarIslamicUmalqura","date1","date2","diff","daysDiff","abs","j","numOfDays","dayDiff","y","jalaliDate","jYear","jMonth","jDay","julianToGregorian","gregorianToJulian","jalCal","gy","march","div","setHours","gdate","julianDayNumber","jalaliDay","jalaliMonth","numberOfDays","jalaliYear","gregorianDay","leap","julianToJalali","setJalaliMonth","trunc","jump","breaks","breaksLength","leapJ","jp","jm","gm","gd","NgbCalendarPersian","yearValue","setJalaliYear","setJalaliDay","PARTS_PER_HOUR","PARTS_PER_DAY","PARTS_FRACTIONAL_MONTH","PARTS_PER_MONTH","BAHARAD","HEBREW_DAY_ON_JAN_1_1970","numberOfFirstDayInYear","monthsBeforeYear","fractionalMonthsBeforeYear","dayNumber","timeOfDay","isHebrewLeapYear","getDaysInGregorianMonth","getHebrewMonths","getDaysInHebrewYear","getDaysInHebrewMonth","yearLength","yearType","daysInMonth","getDayNumberInHebrewYear","numberOfDay","daysSinceHebEpoch","monthsSinceHebEpoch","firstDayOfThisYear","dayOfYear","hebrewDate","diffDays","hebrewNumerals","numerals","hArray0_9","hArray10_19","hArray20_90","hArray100_900","hArray1000_9000","mem","result","step","unshift","NgbCalendarHebrew","setHebrewMonth","setHebrewDay","WEEKDAYS","MONTHS","MONTHS_LEAP","NgbDatepickerModule","NgbDatepickerI18nHebrew","NgbDateNativeUTCAdapter","_fromNativeDate","getUTCFullYear","getUTCMonth","getUTCDate","_toNativeDate","UTC","setUTCFullYear","NgbDateNativeAdapter","FormsModule","NgbDropdownConfig","NgbNavbar","NgbDropdownItem","elementRef","NgbDropdownMenu","dropdown","[class.dropdown-menu]","[attr.x-placement]","(keydown.ArrowUp)","(keydown.ArrowDown)","(keydown.Home)","(keydown.End)","(keydown.Enter)","(keydown.Space)","NgbDropdown","NgbDropdownAnchor","anchorEl","getNativeElement","aria-haspopup","NgbDropdownToggle","ngbNavbar","_closed$","_open","openChange","display","_positionMenu","_applyPlacementClasses","_setCloseHandlers","_applyContainer","_menu","_menuElement","_anchor","_resetContainer","key","itemElements","_getMenuElements","isEventFromItems","isEventFromToggle","_isEventFromToggle","itemElement","activeElement","_isDropup","menuItems","_bodyContainer","_getFirstPlacement","renderer","dropdownElement","dropdownMenuElement","removeStyle","removeChild","body","bodyContainer","createElement","setStyle","dropdownClass","ContentChild","read","NGB_DROPDOWN_DIRECTIVES","NgbDropdownModule","NgbModalConfig","backdrop","ContentRef","nodes","viewRef","componentRef","PopupService","_type","_injector","_viewContainerRef","_componentFactoryResolver","_applicationRef","content","_windowRef","_contentRef","_getContentRef","detachView","destroy","createEmbeddedView","attachView","rootNodes","createText","noop","ScrollBar","compensate","_isPresent","_adjustBody","_getWidth","userSetPadding","paddingRight","paddingAmount","rect","measurer","NgbModalBackdrop","[class]","NgbActiveModal","dismiss","reason","NgbModalRef","_windowCmptRef","_backdropCmptRef","_beforeDismiss","dismissEvent","Promise","resolve","reject","_resolve","_reject","then","_removeModalElements","_dismiss","windowNativeEl","backdropNativeEl","BACKDROP_CLICK","ESC","NgbModalWindow","backdropClick","ModalDismissReasons","escKey","defaultPrevented","_elWithFocus","autoFocusable","firstFocusable","elWithFocus","(keyup.esc)","[attr.aria-modal]","[attr.aria-labelledby]","NgbModalStack","_scrollBar","_rendererFactory","_activeWindowCmptHasChanged","_ariaHiddenValues","Map","_backdropAttributes","_modalRefs","_windowAttributes","_windowCmpts","activeWindowCmpt","_revertAriaHidden","_setAriaHidden","moduleCFR","contentInjector","containerEl","createRenderer","revertPaddingForScrollBar","removeBodyClass","activeModal","contentRef","injector","backdropCmptRef","_attachBackdrop","windowCmptRef","_attachWindowComponent","ngbModalRef","beforeDismiss","_registerModalRef","_registerWindowCmpt","_applyWindowOptions","_applyBackdropOptions","dismissAll","hasOpenModals","windowInstance","backdropInstance","_createFromTemplateRef","_createFromString","_createFromComponent","component","createTextNode","contentCmptFactory","modalContentInjector","Injector","useValue","parent","children","sibling","nodeName","set","getAttribute","setAttribute","removeAttribute","clear","unregisterModalRef","ngbWindowCmpt","onDestroy","ApplicationRef","RendererFactory2","NgbModal","_moduleCFR","_modalStack","_config","combinedOptions","NgbModalModule","NgbPaginationConfig","boundaryLinks","directionLinks","ellipses","maxSize","pageSize","rotate","NgbPaginationEllipsis","NgbPaginationFirst","NgbPaginationLast","NgbPaginationNext","NgbPaginationNumber","NgbPaginationPrevious","DIRECTIVES","NgbPagination","pageCount","pages","page","pageChange","size","hasPrevious","hasNext","previousDisabled","selectPage","pageNumber","_updatePages","isEllipsis","_applyEllipses","_applyRotation","leftOffset","rightOffset","_applyPagination","_setPageInRange","newPageNo","prevPageNo","collectionSize","newPage","NgbPaginationModule","Trigger","isManual","DEFAULT_ALIASES","hover","delayOrNoop","listenToTriggers","triggers","isOpenedFn","openFn","closeFn","openDelay","closeDelay","parsedTriggers","aliases","trimmedTriggers","trigger","triggerPair","alias","manualTriggers","parseTriggers","subscription","Observable","subscriber","listeners","toggleFn","listen","unsubscribeFn","observeTriggers","input$","pending","filteredInput$","currentlyOpen","share","delayedOpen$","delayedClose$","triggerDelay","NgbPopoverConfig","disablePopover","NgbPopoverWindow","isTitleTemplate","title","[id]","NgbPopover","componentFactoryResolver","viewContainerRef","shown","_ngbPopoverWindowId","popoverClass","_popupService","_isDisabled","ngbPopover","popoverTitle","_unregisterListenersFn","bind","NgbPopoverModule","NgbProgressbarConfig","animated","striped","showValue","NgbProgressbar","getValue","getPercentValue","NgbProgressbarModule","NgbRatingConfig","readonly","resettable","NGB_RATING_VALUE_ACCESSOR","NgbRating","_changeDetectorRef","contexts","leave","rateChange","ariaValueText","nextRate","enter","handleBlur","handleClick","update","rate","handleKeyDown","v","k","fill","reset","internalChange","newRate","_getFillValue","toFixed","nextValue","aria-valuemin","[attr.aria-valuemax]","[attr.aria-valuenow]","[attr.aria-valuetext]","[attr.aria-disabled]","(keydown)","NgbRatingModule","NgbTabsetConfig","justify","orientation","NgbTabTitle","NgbTabContent","NgbTab","NGB_TABSET_DIRECTIVES","NgbTabset","tabChange","justifyClass","tabId","selectedTab","_getTabById","activeTab","tabs","tabsWithId","tab","NgbTabsetModule","NgbTime","hour","minute","second","changeHour","updateHour","NaN","changeMinute","updateMinute","changeSecond","updateSecond","checkSecs","NgbTimepickerConfig","meridian","spinners","seconds","hourStep","minuteStep","secondStep","readonlyInputs","NGB_DATEPICKER_TIME_ADAPTER_FACTORY","NgbTimeStructAdapter","NgbTimeAdapter","NGB_TIMEPICKER_VALUE_ACCESSOR","NgbTimepicker","_ngbTimeAdapter","_hourStep","_minuteStep","_secondStep","structValue","propagateModelChange","newVal","isPM","enteredHour","toggleMeridian","formatHour","formatMinSec","touched","NgbTimepickerModule","NgbTooltipConfig","disableTooltip","NgbTooltipWindow","NgbTooltip","_ngbTooltipWindowId","tooltipClass","_ngbTooltip","NgbTooltipModule","NgbHighlight","highlightClass","resultStr","resultTerms","term","x","regexStr","replace","parts","RegExp","NgbTypeaheadWindow","activeIdx","focusFirst","formatter","selectEvent","activeChangeEvent","hasActive","results","getActive","markActive","_activeChanged","resetActive","(mousedown)","ARIA_LIVE_DELAY","InjectionToken","factory","getLiveElement","lazyCreate","Live","_delay","say","message","textContent","setText","setTimeout","NgbTypeaheadConfig","editable","showHint","NGB_TYPEAHEAD_VALUE_ACCESSOR","NgbTypeahead","nextWindowId","ngZone","_live","selectItem","popupId","_valueChanges","_resubscribeTypeahead","BehaviorSubject","isPopupOpen","processedResults$","tap","_inputValueBackup","ngbTypeahead","userInput$","_subscription","_subscribeToUserInput","_closePopup","_unsubscribeFromUserInput","_writeInputValue","_formatItemForInput","dismissPopup","_showHint","_selectResult","_openPopup","_selectResultClosePopup","activeDescendant","userInputLowerCase","toLowerCase","formattedVal","substr","inputFormatter","resultFormatter","resultTemplate","count","[class.open]","[autocomplete]","autocapitalize","autocorrect","aria-multiline","[attr.aria-autocomplete]","[attr.aria-activedescendant]","[attr.aria-owns]","NGB_MODULES","NgbTypeaheadModule","NgbModule","STATECHOICES","GENDERCHOICES","RACECHOICES","LANGUAGEPREFERENCECHOICES","ETHNICITYCHOICES","EDUCATIONLEVELCHOICES","Address","ClaimantSO","UpdateClaimantSO","ToasterService","toastr","success","text","info","warning","danger","ToastrService","ClaimantService","http","toasterService","url","getClaimantById","claimantId","claimantUrl","get","getAllClaimants","catchError","err","EMPTY","searchClaimant","claimantInfo","registerClaimant","claimantSO","console","log","post","updateClaimant","updateClaimantSO","put","HttpClient","PortalService","EditClaimantAddressComponent","claimantService","portalService","fb","claimantProfileCopy","updateClaimantAddress","stateChoices","debug","addressLine1","addressLine2","city","zipCode","zipExt","lastInsertUpdateBy","lastInsertUpdateTS","middleInitial","homePhone","mobilePhone","languagePreference","educationLevel","gender","ethnicity","ivrPin","documentDeliveryPreference","address","profileForm","group","updateClaimantDetails","compareFn","c1","c2","FormBuilder","EditClaimantDetailsComponent","genderChoices","raceChoices","ethnicityChoices","educationLevelChoices","languagePreferenceChoices","ssn","alternateClaimantId","firstName","Validators","minLength","lastName","OptSsnPipe","newSSN","charAt","Pipe","OptPhonePipe","maskPipe","MaskPipe","OptAddressPipe","newAddress","OptDatePipe","datePipe","DatePipe","OptLibraryModule","ReactiveFormsModule","ValdemortModule"],"mappings":"kxBAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAGrB,SAASO,EAAUR,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GAG5E,IAAIK,EAAW,WAQlB,OAPAA,EAAWZ,OAAOa,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIZ,KADTW,EAAIG,UAAUF,GACOhB,OAAOU,UAAUL,eAAee,KAAKL,EAAGX,KAAIU,EAAEV,GAAKW,EAAEX,IAE9E,OAAOU,IAEKO,MAAMb,KAAMU,YAkFzB,SAASI,EAAOC,EAAGN,GACtB,IAAIO,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBI,EAAYC,EAA3BZ,EAAIQ,EAAEJ,KAAKG,GAAOM,EAAK,GAC3B,IACI,WAAc,IAANZ,GAAgBA,KAAM,MAAQU,EAAIX,EAAEc,QAAQC,MAAMF,EAAGG,KAAKL,EAAEM,OAExE,MAAOC,GAASN,EAAI,CAAEM,MAAOA,GACjC,QACQ,IACQP,IAAMA,EAAEI,OAASP,EAAIR,EAAU,YAAIQ,EAAEJ,KAAKJ,GAE1D,QAAkB,GAAIY,EAAG,MAAMA,EAAEM,OAE7B,OAAOL,ECrIX,IAAAM,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,wJAHd,GCAAC,EAAA,WAaE,SAAAA,KAKF,OAHEA,EAAA7B,UAAA8B,SAAA,iCAbDC,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,kBACVC,SAAU,8FAcZJ,EAlBA,GCAA,SAAgBK,EAAUX,GACxB,OAAOY,SAAS,GAAGZ,EAAS,IAG9B,SAAgBa,EAASb,GACvB,OAAQA,IAAUc,WAAuB,OAAVd,EAAkB,GAAGA,EAAU,GAGhE,SAAgBe,EAAgBf,EAAegB,EAAaC,GAC1D,YAD0D,IAAAA,IAAAA,EAAA,GACnDC,KAAKF,IAAIE,KAAKD,IAAIjB,EAAOgB,GAAMC,GAGxC,SAAgBE,EAASnB,GACvB,MAAwB,iBAAVA,EAGhB,SAAgBoB,EAASpB,GACvB,OAAQqB,MAAMV,EAAUX,IAG1B,SAAgBsB,EAAUtB,GACxB,MAAwB,iBAAVA,GAAsBuB,SAASvB,IAAUkB,KAAKM,MAAMxB,KAAWA,EAG/E,SAAgByB,EAAUzB,GACxB,OAAOA,IAAUc,WAAuB,OAAVd,EAGhC,SAAgB0B,EAAU1B,GACxB,OAAIoB,EAASpB,IACJ,IAAIA,GAAQ2B,OAAO,GAEnB,GAQX,SAAgBC,EAAaC,EAAcC,GACzC,OAAOD,GAAWA,EAAQC,WAAaD,EAAQC,UAAUC,OACrDF,EAAQC,UAAUC,MAAM,OAAOC,QAAQF,IAAc,EAGpC,oBAAZG,SAA4BA,QAAQxD,UAAUyD,UAGlDD,QAAQxD,UAAU0D,UAErBF,QAAQxD,UAAU0D,QAAWF,QAAiB,UAASG,mBAAqBH,QAAQxD,UAAU4D,uBAGhGJ,QAAQxD,UAAUyD,QAAU,SAASpD,OAC/BwD,EAAK/D,KACT,IAAKgE,SAASC,gBAAgBC,SAASH,GACrC,OAAO,KAET,EAAG,CACD,GAAIA,EAAGH,QAAQrD,GACb,OAAOwD,EAETA,EAAKA,EAAGI,eAAiBJ,EAAGK,iBACd,OAAPL,GAA+B,IAAhBA,EAAGM,UAC3B,OAAO,OCxDX,IAAAC,EAAA,WAAA,SAAAA,IAEEtE,KAAAuE,aAAc,6BAFf3C,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,gHAAzB,GCYI0C,EAAS,EAqBbC,EAAA,WAmBE,SAAAA,EACmDC,EACgBC,GADhB3E,KAAA0E,UAAAA,EACgB1E,KAAA2E,MAAAA,EACrE,OAVEnF,OAAAoF,eACIH,EAAAvE,UAAA,iBAAc,KADlB,SACmByE,GACbA,IACF3E,KAAK2E,MAAQA,wDAflBE,EAAAA,UAAShD,KAAA,CAAC,CACTK,SAAU,yBACV4C,KAAM,CACJC,KAAQ,SACRC,aAAc,iBACdC,oBAAqB,gBACrBC,uBAAwB,eACxBC,uBAAwB,WACxBC,UAAW,2EAYiDC,EAAYC,WAAA,CAAA,CAAAP,KAArEQ,EAAAA,OAAM1D,KAAA,CAAC2D,EAAAA,WAAW,WAAM,OAAAH,cAC6CI,EAAQH,WAAA,CAAA,CAAAP,KAA7EW,EAAAA,UAAQ,CAAAX,KAAIY,EAAAA,MAAI,CAAAZ,KAAIQ,EAAAA,OAAM1D,KAAA,CAAC2D,EAAAA,WAAW,WAAM,OAAAC,kDAThDG,EAAAA,SAUHnB,EAtBA,GAiCAoB,EAAA,WAEE,SAAAA,EAAmBC,GAAA9F,KAAA8F,YAAAA,EACrB,2BAHCjB,EAAAA,UAAShD,KAAA,CAAC,CAACK,SAAU,2EA7DpB6D,EAAAA,eAgEFF,EAHA,GAUAG,EAAA,WAEE,SAAAA,EAAmBF,GAAA9F,KAAA8F,YAAAA,EACrB,2BAHCjB,EAAAA,UAAShD,KAAA,CAAC,CAACK,SAAU,0EAvEpB6D,EAAAA,eA0EFC,EAHA,GAQAC,EAAA,WAEE,SAAAA,EAAmBH,GAAA9F,KAAA8F,YAAAA,EACrB,2BAHCjB,EAAAA,UAAShD,KAAA,CAAC,CAACK,SAAU,4EA/EpB6D,EAAAA,eAkFFE,EAHA,GAQAR,EAAA,WAAA,SAAAA,IAKWzF,KAAAkG,UAAW,EAOXlG,KAAAmG,GAAK,aAAa3B,IAE3BxE,KAAAoG,QAAS,EAkCX,OATEX,EAAAvF,UAAAmG,sBAAA,WAKErG,KAAKsG,SAAWtG,KAAKuG,UAAUC,MAC/BxG,KAAKyG,UAAYzG,KAAK0G,WAAWF,MACjCxG,KAAK2G,WAAa3G,KAAK4G,YAAYJ,2BA9CtC3B,EAAAA,UAAShD,KAAA,CAAC,CAACK,SAAU,kDAKnB0D,EAAAA,kBAOAA,EAAAA,qBASAA,EAAAA,oBAQAA,EAAAA,yBAMAiB,EAAAA,gBAAehF,KAAA,CAACmE,EAAe,CAACc,aAAa,wBAC7CD,EAAAA,gBAAehF,KAAA,CAACgE,EAAgB,CAACiB,aAAa,yBAC9CD,EAAAA,gBAAehF,KAAA,CAACoE,EAAiB,CAACa,aAAa,OAWlDrB,EAhDA,GA8EAJ,EAAA,WAgEE,SAAAA,EAAY0B,GA7BH/G,KAAAgH,UAA+B,GAY/BhH,KAAAiH,eAAgB,EAefjH,KAAAkH,YAAc,IAAIC,EAAAA,aAG1BnH,KAAK+E,KAAOgC,EAAOhC,KACnB/E,KAAKoH,iBAAmBL,EAAOxC,YAuGnC,OAjGEc,EAAAnF,UAAAmH,WAAA,SAAWC,GAA4B,OAAOtH,KAAKgH,UAAUvD,QAAQ6D,IAAY,GAOjFjC,EAAAnF,UAAAqH,OAAA,SAAOD,GAAyBtH,KAAKwH,iBAAiBxH,KAAKyH,eAAeH,IAAU,IAOpFjC,EAAAnF,UAAAwH,UAAA,WAAA,IAAAC,EAAA3H,KACMA,KAAKoH,iBACuB,IAA1BpH,KAAKgH,UAAUrG,QAAgBX,KAAK4H,OAAOjH,QAC7CX,KAAKwH,iBAAiBxH,KAAK4H,OAAOpB,OAAO,GAG3CxG,KAAK4H,OAAOC,QAAQ,SAAAlD,GAAS,OAAAgD,EAAKH,iBAAiB7C,GAAO,MAS9DU,EAAAnF,UAAA4H,SAAA,SAASR,GAAmBtH,KAAKwH,iBAAiBxH,KAAKyH,eAAeH,IAAU,IAKhFjC,EAAAnF,UAAA6H,YAAA,WAAA,IAAAJ,EAAA3H,KACEA,KAAK4H,OAAOC,QAAQ,SAAClD,GAAYgD,EAAKH,iBAAiB7C,GAAO,MAQhEU,EAAAnF,UAAA8H,OAAA,SAAOV,OACC3C,EAAQ3E,KAAKyH,eAAeH,GAC9B3C,GACF3E,KAAKwH,iBAAiB7C,GAAQA,EAAMyB,SAIxCf,EAAAnF,UAAAmG,sBAAA,WAAA,IAAAsB,EAAA3H,KAEM4C,EAAS5C,KAAKgH,aAChBhH,KAAKgH,UAAYhH,KAAKgH,UAAUxD,MAAM,YAIxCxD,KAAK4H,OAAOC,QAAQ,SAAAlD,GAAS,OAAAA,EAAMyB,QAAUzB,EAAMuB,UAAYyB,EAAKX,UAAUvD,QAAQkB,EAAMwB,KAAO,IAG/FnG,KAAKgH,UAAUrG,OAAS,GAAKX,KAAKoH,mBACpCpH,KAAKiI,aAAajI,KAAKgH,UAAU,IACjChH,KAAKkI,qBAID7C,EAAAnF,UAAAsH,iBAAR,SAAyB7C,EAAiBwD,GACxC,GAAIxD,IAAUA,EAAMuB,UAAYvB,EAAMyB,SAAW+B,EAAW,KACtDC,GAAmB,EAEvBpI,KAAKkH,YAAYmB,KACb,CAACf,QAAS3C,EAAMwB,GAAIgC,UAAWA,EAAWG,eAAgB,WAAQF,GAAmB,KAEpFA,IACHzD,EAAMyB,OAAS+B,EAEXA,GAAanI,KAAKoH,kBACpBpH,KAAKiI,aAAatD,EAAMwB,IAE1BnG,KAAKkI,sBAKH7C,EAAAnF,UAAA+H,aAAR,SAAqBX,GACnBtH,KAAK4H,OAAOC,QAAQ,SAAAlD,GACdA,EAAMwB,KAAOmB,IACf3C,EAAMyB,QAAS,MAKbf,EAAAnF,UAAAuH,eAAR,SAAuBH,GAAoC,OAAOtH,KAAK4H,OAAOW,KAAK,SAAA3I,GAAK,OAAAA,EAAEuG,KAAOmB,KAEzFjC,EAAAnF,UAAAgI,iBAAR,WACElI,KAAKgH,UAAYhH,KAAK4H,OAAOY,OAAO,SAAA7D,GAAS,OAAAA,EAAMyB,SAAWzB,EAAMuB,WAAUuC,IAAI,SAAA9D,GAAS,OAAAA,EAAMwB,0BAvKpGlE,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,gBACVwG,SAAU,eACV5D,KAAM,CAAC6D,QAAS,YAAaC,KAAQ,UAAWC,8BAA+B,qBAC/E1G,SAAU,6lCApKJmC,qCA2LLuC,EAAAA,gBAAehF,KAAA,CAAC4D,sBAQhBG,EAAAA,gCAOAA,EAAAA,MAAK/D,KAAA,CAAC,sCAKN+D,EAAAA,oBAQAA,EAAAA,2BAOAkD,EAAAA,UA2GHzD,EAzKA,GCjKM0D,EACF,CAAC1D,EAAcI,EAAUO,EAAeC,EAAiBJ,EAAgBpB,GAE7EuE,EAAA,WAAA,SAAAA,KASA,OADSA,EAAAC,QAAP,WAAwC,MAAO,CAACC,SAAUF,wBAR3DG,EAAAA,SAAQtH,KAAA,CAAC,CAACuH,aAAcL,EAA0BM,QAASN,EAA0BO,QAAS,CAACC,EAAAA,kBAShGP,EATA,GCZAQ,EAAA,WAAA,SAAAA,IAEExJ,KAAAyJ,aAAc,EACdzJ,KAAA+E,KAAO,qCAHRnD,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,gHAAzB,GCaA4H,EAAA,WAmCE,SAAAA,EAAY3C,EAAgC4C,EAA8BC,GAA9B5J,KAAA2J,UAAAA,EAA8B3J,KAAA4J,SAAAA,EAFhE5J,KAAA6J,MAAQ,IAAI1C,EAAAA,aAGpBnH,KAAKyJ,YAAc1C,EAAO0C,YAC1BzJ,KAAK+E,KAAOgC,EAAOhC,KAcvB,OAXE2E,EAAAxJ,UAAA4J,aAAA,WAAiB9J,KAAK6J,MAAMxB,KAAK,OAEjCqB,EAAAxJ,UAAA6J,YAAA,SAAYC,OACJC,EAAaD,EAAc,KAC7BC,IAAeA,EAAWC,cAC5BlK,KAAK2J,UAAUQ,YAAYnK,KAAK4J,SAASQ,cAAe,SAASH,EAAWI,eAC5ErK,KAAK2J,UAAUW,SAAStK,KAAK4J,SAASQ,cAAe,SAASH,EAAWM,gBAI7Eb,EAAAxJ,UAAA8B,SAAA,WAAahC,KAAK2J,UAAUW,SAAStK,KAAK4J,SAASQ,cAAe,SAASpK,KAAK+E,2BAlDjF9C,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,YACVsI,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjC/F,KAAM,CAAC8D,KAAQ,QAASD,QAAS,QAASmC,4BAA6B,eACvE3I,SAAU,4UAZJqH,SARNuB,EAAAA,iBACAC,EAAAA,mDAoCCpF,EAAAA,oBAOAA,EAAAA,qBAIAkD,EAAAA,UAkBHY,EAnDA,GCrBAuB,EAAA,WAQA,SAAAA,KASA,OADSA,EAAAhC,QAAP,WAAwC,MAAO,CAACC,SAAU+B,wBAR3D9B,EAAAA,SAAQtH,KAAA,CAAC,CAACuH,aAAc,CAACM,GAAWL,QAAS,CAACK,GAAWJ,QAAS,CAACC,EAAAA,cAAe2B,gBAAiB,CAACxB,OASrGuB,EAjBA,GCAAE,EAAA,WAEA,SAAAA,KASA,2BATCtG,EAAAA,UAAShD,KAAA,CAAC,CACTK,SAAU,mBACV4C,KACI,CAACsG,cAAe,OAAQC,iBAAkB,SAAUC,mBAAoB,WAAYC,gBAAiB,eAM3GJ,EAXA,GCKMK,EAA8B,CAClCC,QAASC,EAAAA,kBACTC,YAAanG,EAAAA,WAAW,WAAM,OAAAoG,IAC9BC,OAAO,GAUTD,EAAA,WAwCE,SAAAA,EAAoBE,EAAgCC,GAAhC/L,KAAA8L,OAAAA,EAAgC9L,KAAA+L,IAAAA,EAtB3C/L,KAAAkG,UAAW,EAKXlG,KAAAgM,cAAe,EAKfhM,KAAAiM,gBAAiB,EAE1BjM,KAAAkM,SAAW,SAACC,KACZnM,KAAAoM,UAAY,aAkCd,OAhCE5M,OAAAoF,eAAIgH,EAAA1L,UAAA,UAAO,KAAX,SAAYmM,GACVrM,KAAK8L,OAAOQ,QAAUD,EACjBA,GACHrM,KAAKoM,6CAMTR,EAAA1L,UAAAqM,cAAA,SAAcC,OACNC,EAAmBD,EAAOE,OAAOC,QAAU3M,KAAKgM,aAAehM,KAAKiM,eAC1EjM,KAAKkM,SAASO,GACdzM,KAAKoM,YACLpM,KAAK4M,WAAWH,IAGlBb,EAAA1L,UAAA2M,iBAAA,SAAiBC,GAAiC9M,KAAKkM,SAAWY,GAElElB,EAAA1L,UAAA6M,kBAAA,SAAkBD,GAAuB9M,KAAKoM,UAAYU,GAE1DlB,EAAA1L,UAAA8M,iBAAA,SAAiBC,GACfjN,KAAKkG,SAAW+G,EAChBjN,KAAK8L,OAAO5F,SAAW+G,GAGzBrB,EAAA1L,UAAA0M,WAAA,SAAWnL,GACTzB,KAAK2M,QAAUlL,IAAUzB,KAAKgM,aAC9BhM,KAAK8L,OAAOoB,OAASlN,KAAK2M,QAG1B3M,KAAK+L,IAAIoB,oCA/DZtI,EAAAA,UAAShD,KAAA,CAAC,CACTK,SAAU,6BACV4C,KAAM,CACJsI,aAAgB,MAChBC,YAAa,UACbrI,aAAc,WACdsI,WAAY,wBACZC,UAAW,iBACXC,SAAU,mBAEZC,UAAW,CAACjC,gDAzBNL,SAHAuC,EAAAA,uDAoCL9H,EAAAA,4BAKAA,EAAAA,8BAKAA,EAAAA,SAqCHgG,EAjEA,GCbM+B,EAA2B,CAC/BlC,QAASC,EAAAA,kBACTC,YAAanG,EAAAA,WAAW,WAAM,OAAAoI,IAC9B/B,OAAO,GAGLrH,EAAS,EAQboJ,EAAA,WAAA,SAAAA,IAEU5N,KAAA6N,QAAyB,IAAIC,IAC7B9N,KAAA+N,OAAS,KAcR/N,KAAAgO,KAAO,aAAaxJ,IAE7BxE,KAAAkM,SAAW,SAACC,KACZnM,KAAAoM,UAAY,aA6Bd,OA3CE5M,OAAAoF,eAAIgJ,EAAA1N,UAAA,WAAQ,KAAZ,WAAiB,OAAOF,KAAKiO,eAC7B,SAAahB,GAAuBjN,KAAKgN,iBAAiBC,oCAe1DW,EAAA1N,UAAAgO,cAAA,SAAcC,GACZnO,KAAK4M,WAAWuB,EAAM1M,OACtBzB,KAAKkM,SAASiC,EAAM1M,QAGtBmM,EAAA1N,UAAAkO,mBAAA,WAAuBpO,KAAKqO,sBAE5BT,EAAA1N,UAAAoO,SAAA,SAASH,GAAmBnO,KAAK6N,QAAQU,IAAIJ,IAE7CP,EAAA1N,UAAA2M,iBAAA,SAAiBC,GAAiC9M,KAAKkM,SAAWY,GAElEc,EAAA1N,UAAA6M,kBAAA,SAAkBD,GAAuB9M,KAAKoM,UAAYU,GAE1Dc,EAAA1N,UAAA8M,iBAAA,SAAiBC,GACfjN,KAAKiO,UAAYhB,EACjBjN,KAAKwO,yBAGPZ,EAAA1N,UAAAuO,WAAA,SAAWN,GAAmBnO,KAAK6N,QAAQa,UAAOP,IAElDP,EAAA1N,UAAA0M,WAAA,SAAWnL,GACTzB,KAAK+N,OAAStM,EACdzB,KAAKqO,sBAGCT,EAAA1N,UAAAmO,mBAAR,WAAA,IAAA1G,EAAA3H,KAA+BA,KAAK6N,QAAQhG,QAAQ,SAACsG,GAAU,OAAAA,EAAMQ,YAAYhH,EAAKoG,WAC9EH,EAAA1N,UAAAsO,sBAAR,WAAkCxO,KAAK6N,QAAQhG,QAAQ,SAACsG,GAAU,OAAAA,EAAMS,wCAhDzE/J,EAAAA,UAAShD,KAAA,CAAC,CAACK,SAAU,kBAAmB4C,KAAM,CAAC8D,KAAQ,cAAe6E,UAAW,CAACE,qCAiBhF/H,EAAAA,SAgCHgI,EAjDA,GAwDAiB,EAAA,WA6DE,SAAAA,EACYC,EAA+BhD,EAAgCnC,EAC/DC,EAAgDmC,GADhD/L,KAAA8O,OAAAA,EAA+B9O,KAAA8L,OAAAA,EAAgC9L,KAAA2J,UAAAA,EAC/D3J,KAAA4J,SAAAA,EAAgD5J,KAAA+L,IAAAA,EAjDpD/L,KAAA+N,OAAc,KAkDpB/N,KAAK8O,OAAOR,SAAStO,MACrBA,KAAK4O,iBAkBT,OAxDEpP,OAAAoF,eACIiK,EAAA3O,UAAA,QAAK,KA6BT,WAAc,OAAOF,KAAK+N,YA9B1B,SACUtM,GACRzB,KAAK+N,OAAStM,MACRsN,EAActN,EAAQA,EAAMa,WAAa,GAC/CtC,KAAK2J,UAAUqF,YAAYhP,KAAK4J,SAASQ,cAAe,QAAS2E,GACjE/O,KAAK8O,OAAOV,sDAMd5O,OAAAoF,eACIiK,EAAA3O,UAAA,WAAQ,KAgBZ,WAAiB,OAAOF,KAAK8O,OAAO5I,UAAYlG,KAAKiO,eAjBrD,SACahB,GACXjN,KAAKiO,WAA2B,IAAfhB,EACjBjN,KAAK4O,kDAGPpP,OAAAoF,eAAIiK,EAAA3O,UAAA,UAAO,KAAX,SAAYmM,GACNrM,KAAK8L,SACP9L,KAAK8L,OAAOQ,QAAUD,GAEnBA,GACHrM,KAAK8O,OAAO1C,6CAIhB5M,OAAAoF,eAAIiK,EAAA3O,UAAA,UAAO,KAAX,WAAgB,OAAOF,KAAKiP,0CAM5BzP,OAAAoF,eAAIiK,EAAA3O,UAAA,WAAQ,KAAZ,WAAiB,OAAOF,KAAKgO,MAAQhO,KAAK8O,OAAOd,sCASjDa,EAAA3O,UAAAgP,YAAA,WAAgBlP,KAAK8O,OAAOL,WAAWzO,OAEvC6O,EAAA3O,UAAAgM,SAAA,WAAalM,KAAK8O,OAAOZ,cAAclO,OAEvC6O,EAAA3O,UAAAyO,YAAA,SAAYlN,GAENzB,KAAKyB,QAAUA,GACjBzB,KAAK+L,IAAIoB,eAGXnN,KAAKiP,SAAWjP,KAAKyB,QAAUA,EAC/BzB,KAAK8L,OAAOoB,OAASlN,KAAKiP,UAG5BJ,EAAA3O,UAAA0O,eAAA,WAAmB5O,KAAK8L,OAAO5F,SAAWlG,KAAKkG,8BAlFhDrB,EAAAA,UAAShD,KAAA,CAAC,CACTK,SAAU,0BACV4C,KAAM,CACJuI,YAAa,UACbrI,aAAc,WACdmK,SAAU,WACV7B,WAAY,aACZC,UAAW,iBACXC,SAAU,gEAsDQI,SAtIdzC,SAHwEJ,EAAAA,iBAA1CC,EAAAA,kBAA9B0C,EAAAA,mDAiGL9H,EAAAA,qBAKAA,EAAAA,MAAK/D,KAAA,CAAC,2BAWN+D,EAAAA,MAAK/D,KAAA,CAAC,eA6CTgN,EAnFA,GCjEMO,EAAwB,CAACjE,EAAgBS,EAAagC,EAAeiB,GAE3EQ,EAAA,WAAA,SAAAA,KASA,OADSA,EAAApG,QAAP,WAAwC,MAAO,CAACC,SAAUmG,wBAR3DlG,EAAAA,SAAQtH,KAAA,CAAC,CAACuH,aAAcgG,EAAuB/F,QAAS+F,MASzDC,EATA,GCJAC,EAAA,WAAA,SAAAA,IAEEtP,KAAAuP,SAAW,IACXvP,KAAAwP,MAAO,EACPxP,KAAAyP,UAAW,EACXzP,KAAA0P,cAAe,EACf1P,KAAA2P,sBAAuB,EACvB3P,KAAA4P,0BAA2B,6BAP5BhO,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,gHAAzB,GCkBI0C,EAAS,EAKbqL,EAAA,WAQE,SAAAA,EAAmBC,GAAA9P,KAAA8P,OAAAA,EADV9P,KAAAmG,GAAK,aAAa3B,IAE7B,2BATCK,EAAAA,UAAShD,KAAA,CAAC,CAACK,SAAU,qEAdpB6D,EAAAA,2CAqBCH,EAAAA,SAEHiK,EATA,GAgBAE,EAAA,WA2FE,SAAAA,EACIhJ,EAAwDiJ,EAAqBC,EACrElE,GADgD/L,KAAAgQ,YAAAA,EAAqBhQ,KAAAiQ,QAAAA,EACrEjQ,KAAA+L,IAAAA,EAxDJ/L,KAAAkQ,UAAY,IAAIC,EAAAA,QAChBnQ,KAAAoQ,QAAU,IAAID,EAAAA,QACdnQ,KAAAqQ,OAAS,IAAIF,EAAAA,QAkDXnQ,KAAAsQ,MAAQ,IAAInJ,EAAAA,aAKpBnH,KAAKuP,SAAWxI,EAAOwI,SACvBvP,KAAKwP,KAAOzI,EAAOyI,KACnBxP,KAAKyP,SAAW1I,EAAO0I,SACvBzP,KAAK0P,aAAe3I,EAAO2I,aAC3B1P,KAAK2P,qBAAuB5I,EAAO4I,qBACnC3P,KAAK4P,yBAA2B7I,EAAO6I,yBAqG3C,OAlGEG,EAAA7P,UAAAqQ,mBAAA,WAAA,IAAA5I,EAAA3H,KAGMwQ,EAAAA,kBAAkBxQ,KAAKgQ,cACzBhQ,KAAKiQ,QAAQQ,kBAAkB,WAC7B9I,EAAKyI,QACAM,KACGjI,EAAAA,IAAI,WAAM,OAAAd,EAAK4H,WAAW/G,EAAAA,OAAO,SAAA+G,GAAY,OAAAA,EAAW,GAAK5H,EAAKgJ,OAAOhQ,OAAS,IAClFiQ,EAAAA,UAAU,SAAArB,GAAY,OAAAsB,EAAAA,MAAMtB,GAAUmB,KAAKI,EAAAA,UAAUC,EAAAA,MAAMpJ,EAAK0I,OAAQ1I,EAAKuI,gBAChFc,UAAU,WAAM,OAAArJ,EAAKsI,QAAQgB,IAAI,WAAM,OAAAtJ,EAAKrG,WAEjDqG,EAAKyI,QAAQ9O,SAIjBtB,KAAK2Q,OAAO3G,QAAQ0G,KAAKI,EAAAA,UAAU9Q,KAAKkQ,YAAYc,UAAU,WAAM,OAAArJ,EAAKoE,IAAIoB,kBAG/E4C,EAAA7P,UAAAmG,sBAAA,eACM6K,EAAclR,KAAKmR,cAAcnR,KAAKoR,UAC1CpR,KAAKoR,SAAWF,EAAcA,EAAY/K,GAAMnG,KAAK2Q,OAAOhQ,OAASX,KAAK2Q,OAAOnK,MAAML,GAAK,MAG9F4J,EAAA7P,UAAAgP,YAAA,WAAgBlP,KAAKkQ,UAAU5O,QAE/ByO,EAAA7P,UAAA6J,YAAA,SAAYC,GACN,aAAcA,IAAYA,EAAkB,SAAEqH,iBAChDrR,KAAKoQ,QAAQ9O,QAOjByO,EAAA7P,UAAAoR,OAAA,SAAOC,GAAmBvR,KAAKwR,iBAAiBD,EAASvR,KAAKyR,wBAAwBzR,KAAKoR,SAAUG,KAKrGxB,EAAA7P,UAAAwR,KAAA,WAAS1R,KAAKwR,iBAAiBxR,KAAK2R,cAAc3R,KAAKoR,UAAWQ,EAAuBC,QAKzF9B,EAAA7P,UAAAoB,KAAA,WAAStB,KAAKwR,iBAAiBxR,KAAK8R,cAAc9R,KAAKoR,UAAWQ,EAAuBG,OAKzFhC,EAAA7P,UAAA8R,MAAA,WAAUhS,KAAKqQ,OAAO/O,QAKtByO,EAAA7P,UAAA+R,MAAA,WAAUjS,KAAKoQ,QAAQ9O,QAEfyO,EAAA7P,UAAAsR,iBAAR,SAAyBU,EAAkBC,OACrCC,EAAgBpS,KAAKmR,cAAce,GACnCE,GAAiBA,EAAcjM,KAAOnG,KAAKoR,WAC7CpR,KAAKsQ,MAAMjI,KAAK,CAACqJ,KAAM1R,KAAKoR,SAAUiB,QAASD,EAAcjM,GAAIgM,UAAWA,IAC5EnS,KAAKoQ,QAAQ9O,OACbtB,KAAKoR,SAAWgB,EAAcjM,IAIhCnG,KAAK+L,IAAIoB,gBAGH4C,EAAA7P,UAAAuR,wBAAR,SAAgCa,EAA8BC,GAI5D,OAH8BvS,KAAKwS,iBAAiBF,GACzBtS,KAAKwS,iBAAiBD,GAEGX,EAAuBC,MAAQD,EAAuBG,MAGpGhC,EAAA7P,UAAAiR,cAAR,SAAsBI,GAA6B,OAAOvR,KAAK2Q,OAAOpI,KAAK,SAAA+H,GAAS,OAAAA,EAAMnK,KAAOoL,KAEzFxB,EAAA7P,UAAAsS,iBAAR,SAAyBjB,GACvB,OAAOvR,KAAK2Q,OAAO8B,UAAUhP,QAAQzD,KAAKmR,cAAcI,KAGlDxB,EAAA7P,UAAA4R,cAAR,SAAsBY,OACdC,EAAW3S,KAAK2Q,OAAO8B,UACvBG,EAAkB5S,KAAKwS,iBAAiBE,GAG9C,OAFoBE,IAAoBD,EAAShS,OAAS,EAEpCX,KAAKwP,KAAOmD,EAAS,GAAGxM,GAAKwM,EAASA,EAAShS,OAAS,GAAGwF,GAC5DwM,EAASC,EAAkB,GAAGzM,IAG7C4J,EAAA7P,UAAAyR,cAAR,SAAsBe,OACdC,EAAW3S,KAAK2Q,OAAO8B,UACvBG,EAAkB5S,KAAKwS,iBAAiBE,GAG9C,OAFyC,IAApBE,EAEE5S,KAAKwP,KAAOmD,EAASA,EAAShS,OAAS,GAAGwF,GAAKwM,EAAS,GAAGxM,GAC5DwM,EAASC,EAAkB,GAAGzM,wBAtMvDlE,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,eACVwG,SAAU,cACV8B,gBAAiBC,EAAAA,wBAAwBC,OACzC5F,KAAM,CACJ6D,QAAS,iBACTkK,kBAAmB,UACnBC,SAAY,IACZC,eAAgB,0BAChBC,eAAgB,0BAChBC,sBAAuB,qBACvBC,uBAAwB,sBAE1B/Q,SAAU,ohCAvCJmN,qCAsH0B/J,EAAAA,OAAM1D,KAAA,CAACsR,EAAAA,sBAhIvCC,EAAAA,cAPA1F,EAAAA,qDA8EC7G,EAAAA,gBAAehF,KAAA,CAACgO,qBAWhBjK,EAAAA,wBAKAA,EAAAA,oBAKAA,EAAAA,wBAKAA,EAAAA,4BAOAA,EAAAA,oCAOAA,EAAAA,wCAOAA,EAAAA,qBAOAkD,EAAAA,UA+GHiH,EAxMA,MAoOEgC,KAAA,OACAF,MAAA,SAGWwB,EAA0B,CAACtD,EAAaF,GCvRrDyD,GAAA,WAQA,SAAAA,KASA,OADSA,EAAArK,QAAP,WAAwC,MAAO,CAACC,SAAUoK,wBAR3DnK,EAAAA,SAAQtH,KAAA,CAAC,CAACuH,aAAciK,EAAyBhK,QAASgK,EAAyB/J,QAAS,CAACC,EAAAA,kBAS9F+J,EAjBA,GCKAC,GAAA,WAAA,SAAAA,IASwBvT,KAAAwT,WAAY,EACpC,2BAVC3O,EAAAA,UAAShD,KAAA,CAAC,CACTK,SAAU,gBACVwG,SAAU,cACV5D,KAAM,CAAC2O,mBAAoB,OAAQC,eAAgB,qDAMlD9N,EAAAA,MAAK/D,KAAA,CAAC,kBACT0R,EAVA,GCLAI,GAAA,WAKA,SAAAA,KASA,OADSA,EAAA1K,QAAP,WAAwC,MAAO,CAACC,SAAUyK,wBAR3DxK,EAAAA,SAAQtH,KAAA,CAAC,CAACuH,aAAc,CAACmK,IAAclK,QAAS,CAACkK,QASlDI,EAdA,iBCgDE,SAAAC,EAAYC,EAAcC,EAAeC,GACvC/T,KAAK6T,KAAO9Q,EAAU8Q,GAAQA,EAAO,KACrC7T,KAAK8T,MAAQ/Q,EAAU+Q,GAASA,EAAQ,KACxC9T,KAAK+T,IAAMhR,EAAUgR,GAAOA,EAAM,KA8CtC,OAxDSH,EAAAI,KAAP,SAAYC,GACV,OAAIA,aAAgBL,EACXK,EAEFA,EAAO,IAAIL,EAAQK,EAAKJ,KAAMI,EAAKH,MAAOG,EAAKF,KAAO,MAY/DH,EAAA1T,UAAAgU,OAAA,SAAOC,GACL,OAAOA,GAASnU,KAAK6T,OAASM,EAAMN,MAAQ7T,KAAK8T,QAAUK,EAAML,OAAS9T,KAAK+T,MAAQI,EAAMJ,KAM/FH,EAAA1T,UAAAkU,OAAA,SAAOD,GACL,QAAKA,IAIDnU,KAAK6T,OAASM,EAAMN,KAClB7T,KAAK8T,QAAUK,EAAML,MAChB9T,KAAK+T,MAAQI,EAAMJ,KAAc/T,KAAK+T,IAAMI,EAAMJ,IAElD/T,KAAK8T,MAAQK,EAAML,MAGrB9T,KAAK6T,KAAOM,EAAMN,OAO7BD,EAAA1T,UAAAmU,MAAA,SAAMF,GACJ,QAAKA,IAGDnU,KAAK6T,OAASM,EAAMN,KAClB7T,KAAK8T,QAAUK,EAAML,MAChB9T,KAAK+T,MAAQI,EAAMJ,KAAc/T,KAAK+T,IAAMI,EAAMJ,IAElD/T,KAAK8T,MAAQK,EAAML,MAGrB9T,KAAK6T,KAAOM,EAAMN,OAG/BD,KC7FA,SAAgBU,GAAWC,GACzB,OAAO,IAAIX,GAAQW,EAAOC,cAAeD,EAAOE,WAAa,EAAGF,EAAOG,WAEzE,SAAgBC,GAASV,OACjBM,EAAS,IAAIK,KAAKX,EAAKJ,KAAMI,EAAKH,MAAQ,EAAGG,EAAKF,IAAK,IAK7D,OAHKjR,MAAMyR,EAAOM,YAChBN,EAAOO,YAAYb,EAAKJ,MAEnBU,EAKT,SAAgBQ,KACd,OAAO,IAAIC,GASb,IAAAC,GAAA,WAAA,SAAAA,gCAACrT,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,OAAQoT,WAAYH,sFAA7C,kBA8DA,SAAAC,mDAsEA,OArE0CG,EAAAA,EAAAA,GACxCH,EAAA9U,UAAAkV,eAAA,WAAmB,OAAO,GAE1BJ,EAAA9U,UAAAmV,UAAA,WAAc,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,KAEzDL,EAAA9U,UAAAoV,iBAAA,WAAqB,OAAO,GAE5BN,EAAA9U,UAAAqV,QAAA,SAAQtB,EAAeuB,EAAyBC,QAAzB,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,OAC1ClB,EAASI,GAASV,GAEtB,OAAQuB,GACN,IAAK,IACH,OAAO,IAAI5B,GAAQK,EAAKJ,KAAO4B,EAAQ,EAAG,GAC5C,IAAK,IACHlB,EAAS,IAAIK,KAAKX,EAAKJ,KAAMI,EAAKH,MAAQ2B,EAAS,EAAG,EAAG,IACzD,MACF,IAAK,IACHlB,EAAOmB,QAAQnB,EAAOG,UAAYe,GAClC,MACF,QACE,OAAOxB,EAGX,OAAOK,GAAWC,IAGpBS,EAAA9U,UAAAyV,QAAA,SAAQ1B,EAAeuB,EAAyBC,GAAc,YAAvC,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAAqBzV,KAAKuV,QAAQtB,EAAMuB,GAASC,IAEjGT,EAAA9U,UAAA0V,WAAA,SAAW3B,OAELF,EADSY,GAASV,GACL4B,SAEjB,OAAe,IAAR9B,EAAY,EAAIA,GAGzBiB,EAAA9U,UAAA4V,cAAA,SAAcC,EAAiBC,GAEN,IAAnBA,IACFA,EAAiB,OAMbzB,EAASI,GAFJoB,GADY,GAAQC,GAAkB,IAIjDzB,EAAOmB,QAAQnB,EAAOG,UAAY,GAAKH,EAAOsB,UAAY,QACpDI,EAAO1B,EAAOM,UAGpB,OAFAN,EAAO2B,SAAS,GAChB3B,EAAOmB,QAAQ,GACR/S,KAAKM,MAAMN,KAAKwT,OAAOF,EAAO1B,EAAOM,WAAa,OAAY,GAAK,GAG5EG,EAAA9U,UAAAkW,SAAA,WAAsB,OAAO9B,GAAW,IAAIM,OAE5CI,EAAA9U,UAAAmW,QAAA,SAAQpC,GACN,KAAKA,GAASlR,EAAUkR,EAAKJ,OAAU9Q,EAAUkR,EAAKH,QAAW/Q,EAAUkR,EAAKF,MAC9E,OAAO,EAIT,GAAkB,IAAdE,EAAKJ,KACP,OAAO,MAGHU,EAASI,GAASV,GAExB,OAAQnR,MAAMyR,EAAOM,YAAcN,EAAOC,gBAAkBP,EAAKJ,MAAQU,EAAOE,WAAa,IAAMR,EAAKH,OACpGS,EAAOG,YAAcT,EAAKF,yBApEjCnS,EAAAA,aAsEDoT,GArE0CC,ICrF1C,SAAgBqB,GAAc5E,EAAepQ,GAC3C,OAOF,SAA+BoQ,EAAepQ,GAC5C,OAASoQ,IAASpQ,KAAYoQ,KAAUpQ,GAAQoQ,EAAKwC,OAAO5S,GARpDiV,CAAe7E,EAAMpQ,GAG/B,SAAgBkV,GAAe9E,EAAepQ,GAC5C,SAAQoQ,IAASpQ,MAAgBoQ,IAASpQ,IAAcoQ,EAAKmC,OAASvS,EAAKuS,MAAQnC,EAAKoC,QAAUxS,EAAKwS,QAazG,SAAgB2C,GAAiBxC,EAAeyC,EAAkBC,GAChE,OAAI1C,GAAQyC,GAAWzC,EAAKG,OAAOsC,GAC1BA,EAELzC,GAAQ0C,GAAW1C,EAAKI,MAAMsC,GACzBA,EAGF1C,EAGT,SAAgB2C,GAAiB3C,EAAe4C,GACvC,IAAAH,EAAAG,EAAAH,QAASC,EAAAE,EAAAF,QAASzQ,EAAA2Q,EAAA3Q,SAAU4Q,EAAAD,EAAAC,aAEnC,SACG5T,EAAU+Q,IACX/N,GACC4Q,GAAgBA,EAAa7C,EAAM,CAACJ,KAAMI,EAAKJ,KAAMC,MAAOG,EAAKH,SACjE4C,GAAWzC,EAAKG,OAAOsC,IACvBC,GAAW1C,EAAKI,MAAMsC,IA8C3B,SAAgBI,GACZC,EAAuB/C,EAAe4C,EAA4BI,EAClEC,GACK,IAAAC,EAAAN,EAAAM,cAAeC,EAAAP,EAAAO,OAEhBC,EAAgBD,EAAOE,OAAO,EAAGF,EAAOzW,QAyB9C,OAtBmBhB,MAAMqU,KAAK,CAACrT,OAAQwW,GAAgB,SAAChL,EAAG3L,OACnD+W,EAAYP,EAASzB,QAAQtB,EAAM,IAAKzT,GAG9C,GAFA4W,EAAO5W,GAAK,MAEP0W,EAAO,KACJM,EAAcH,EAAcI,UAAU,SAAA3D,GAAS,OAAAA,EAAMyD,UAAUrD,OAAOqD,MAEvD,IAAjBC,IACFJ,EAAO5W,GAAK6W,EAAcC,OAAOE,EAAa,GAAG,IAIrD,OAAOD,IAIE1P,QAAQ,SAAC0P,EAAW/W,GACX,OAAd4W,EAAO5W,KACT4W,EAAO5W,GAOb,SACIwW,EAAuB/C,EAAe4C,EAA4BI,EAClEnD,QAAA,IAAAA,IAAAA,EAAA,IACK,IAAA4D,EAAAb,EAAAa,gBAAiBhB,EAAAG,EAAAH,QAASC,EAAAE,EAAAF,QAASX,EAAAa,EAAAb,eAAgBc,EAAAD,EAAAC,aAAca,EAAAd,EAAAc,YAClEC,EAAgBZ,EAASZ,WAE/BtC,EAAMyD,UAAY,KAClBzD,EAAM+D,SAAW,KACjB/D,EAAM2B,OAASxB,EAAKH,MACpBA,EAAMD,KAAOI,EAAKJ,KAClBC,EAAMgE,MAAQhE,EAAMgE,OAAS,GAC7BhE,EAAMiE,SAAWjE,EAAMiE,UAAY,GAEnC9D,EA0EF,SAAiC+C,EAAuB/C,EAAe+B,OAC/DgC,EAAchB,EAAS5B,iBACvB6C,EAAiB,IAAIrE,GAAQK,EAAKJ,KAAMI,EAAKH,MAAO,GACpDoE,EAAYlB,EAASpB,WAAWqC,GAAkBD,EACxD,OAAOhB,EAASrB,QAAQsC,EAAgB,KAAMD,EAAcE,EAAYlC,GAAkBgC,GA9EnFG,CAAiBnB,EAAU/C,EAAM+B,GAGxC,IAAK,IAAID,EAAO,EAAGA,EAAOiB,EAAS1B,mBAAoBS,IAAQ,KACzDqC,EAAatE,EAAMgE,MAAM/B,GACxBqC,IACHA,EAAatE,EAAMgE,MAAM/B,GAAQ,CAACN,OAAQ,EAAG4C,KAAM,GAAI7E,WAAW,IAKpE,QAHM6E,EAAOD,EAAWC,KAGftE,EAAM,EAAGA,EAAMiD,EAAS5B,iBAAkBrB,IAAO,CAC3C,IAATgC,IACFjC,EAAMiE,SAAShE,GAAOiD,EAASpB,WAAW3B,QAGtCqE,EAAU,IAAI1E,GAAQK,EAAKJ,KAAMI,EAAKH,MAAOG,EAAKF,KAClDwE,EAAWvB,EAASzB,QAAQ+C,GAE5BE,EAAYvB,EAAKwB,gBAAgBH,GAGnCpS,KAAewQ,GAAW4B,EAAQlE,OAAOsC,IAAcC,GAAW2B,EAAQjE,MAAMsC,KAC/EzQ,GAAY4Q,IACf5Q,EAAW4Q,EAAawB,EAAS,CAACxE,MAAOA,EAAM2B,OAAQ5B,KAAMC,EAAMD,YAIjE6E,EAAQJ,EAAQpE,OAAO0D,GAGvBe,EACAjB,EAAkBA,EAAgBY,EAAS,CAACxE,MAAOA,EAAM2B,OAAQ5B,KAAMC,EAAMD,OAAStR,UAGlE,OAApBuR,EAAMyD,WAAsBe,EAAQxE,QAAUA,EAAM2B,SACtD3B,EAAMyD,UAAYe,GAIhBA,EAAQxE,QAAUA,EAAM2B,QAAU8C,EAASzE,QAAUA,EAAM2B,SAC7D3B,EAAM+D,SAAWS,OAGfM,EAAYP,EAAKtE,GAChB6E,IACHA,EAAYP,EAAKtE,GAAI,IAEvB6E,EAAU3E,KAAOqE,EACjBM,EAAUC,QAAUrZ,OAAOa,OAAOuY,EAAUC,SAAW,GAAI,CACzDC,UAAWR,EACXrE,KAAMqE,EACNS,KAAMJ,EACNK,aAAclF,EAAM2B,OAAQvP,SAAQA,EACpCoG,SAAS,EACT2M,UAAU,EAAOP,MAAKA,IAExBE,EAAUM,UAAY,EACtBN,EAAUJ,UAAYA,EACtBI,EAAUO,QAAS,EAEnBlF,EAAOsE,EAGTH,EAAW3C,OAASuB,EAASlB,cAAcuC,EAAK5P,IAAI,SAAAsL,GAAO,OAAAA,EAAIE,OAAO+B,GAGtEoC,EAAW5E,UAA4B,cAAhBmE,GAA+BU,EAAK,GAAGpE,KAAKH,QAAUA,EAAM2B,QAC/E4C,EAAKA,EAAK1X,OAAS,GAAGsT,KAAKH,QAAUA,EAAM2B,OAGjD,OAAO3B,EA3FSsF,CAAWpC,EAAUO,EAAWV,EAAOI,EAAMI,EAAcgC,SAAO,OAI3EjC,ECnHT,SAAgBkC,GAA2BC,GACzC,OAAO,IAAIC,GAAyBD,GAgBtC,IAAAE,GAAA,WAAA,SAAAA,YAmCEA,EAAAvZ,UAAAwZ,eAAA,SAAezF,GAA+B,MAAO,GAAGA,EAAKF,KAO7D0F,EAAAvZ,UAAAyZ,gBAAA,SAAgBC,GAA8B,MAAO,GAAGA,GAOxDH,EAAAvZ,UAAA2Z,gBAAA,SAAgBhG,GAAwB,MAAO,GAAGA,uBAjDnDjS,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,OAAQoT,WAAYoE,GAA4BQ,KAAM,CAACC,EAAAA,wIAAhF,kBA0DE,SAAAP,EAAuCQ,GAAvC,IAAArS,EACEsS,EAAArZ,KAAAZ,OAAOA,KAD8B2H,EAAAqS,QAAAA,MAG/BE,EAA2BC,EAAAA,kBAAkBH,EAASI,EAAAA,UAAUC,WAAYC,EAAAA,iBAAiBC,cACnG5S,EAAK6S,eAAiBN,EAAyBzR,IAAI,SAACsL,EAAK0G,GAAU,OAAAP,GAA0BO,EAAQ,GAAK,KAE1G9S,EAAK+S,aAAeC,EAAAA,oBAAoBX,EAASI,EAAAA,UAAUC,WAAYC,EAAAA,iBAAiBM,aACxFjT,EAAKkT,YAAcF,EAAAA,oBAAoBX,EAASI,EAAAA,UAAUC,WAAYC,EAAAA,iBAAiBQ,QAa3F,OAzB8C3F,EAAAA,EAAAA,GAe5CqE,EAAAtZ,UAAA6a,oBAAA,SAAoBC,GAA2B,OAAOhb,KAAKwa,eAAeQ,EAAU,IAEpFxB,EAAAtZ,UAAA+a,kBAAA,SAAkBnH,GAAyB,OAAO9T,KAAK0a,aAAa5G,EAAQ,IAE5E0F,EAAAtZ,UAAAgb,iBAAA,SAAiBpH,GAAyB,OAAO9T,KAAK6a,YAAY/G,EAAQ,IAE1E0F,EAAAtZ,UAAAuY,gBAAA,SAAgBxE,OACRM,EAAS,IAAIK,KAAKX,EAAKJ,KAAMI,EAAKH,MAAQ,EAAGG,EAAKF,KACxD,OAAOoH,EAAAA,WAAW5G,EAAQ,WAAYvU,KAAKga,8BAxB9CpY,EAAAA,+EAMc2D,EAAAA,OAAM1D,KAAA,CAACkY,EAAAA,gBAoBtBP,GAzB8CC,IC1E9C2B,GAAA,WA+GE,SAAAA,EAAoBC,EAAgCC,GAAhCtb,KAAAqb,UAAAA,EAAgCrb,KAAAsb,MAAAA,EAtF5Ctb,KAAAub,QAAU,IAAIpL,EAAAA,QAEdnQ,KAAAwb,SAAW,IAAIrL,EAAAA,QAEfnQ,KAAAyb,OAA8B,CACpCvV,UAAU,EACViR,cAAe,EACfnB,eAAgB,EAChB0F,cAAc,EACdtE,OAAQ,GACRuE,WAAY,SACZhE,YAAa,UACbiE,cAAc,EACdC,cAAc,EACdC,YAAa,CAACC,MAAO,GAAI3E,OAAQ,IACjC4E,aAAc,MAmQlB,OAhQExc,OAAAoF,eAAIwW,EAAAlb,UAAA,SAAM,KAAV,WAAgD,OAAOF,KAAKub,QAAQ7K,KAAKlI,EAAAA,OAAO,SAAAyT,GAAS,OAAAA,EAAM7E,OAAOzW,OAAS,sCAE/GnB,OAAAoF,eAAIwW,EAAAlb,UAAA,UAAO,KAAX,WAAqC,OAAOF,KAAKwb,SAAS9K,KAAKlI,EAAAA,OAAO,SAAAyL,GAAQ,OAAS,OAATA,sCAE9EzU,OAAAoF,eAAIwW,EAAAlb,UAAA,kBAAe,KAAnB,SAAoBwX,GACd1X,KAAKyb,OAAO/D,kBAAoBA,GAClC1X,KAAKkc,WAAW,CAACxE,gBAAeA,qCAIpClY,OAAAoF,eAAIwW,EAAAlb,UAAA,WAAQ,KAAZ,SAAagG,GACPlG,KAAKyb,OAAOvV,WAAaA,GAC3BlG,KAAKkc,WAAW,CAAChW,SAAQA,qCAI7B1G,OAAAoF,eAAIwW,EAAAlb,UAAA,gBAAa,KAAjB,SAAkBiX,GAEZpU,EADJoU,EAAgB/U,EAAU+U,KACMA,EAAgB,GAAKnX,KAAKyb,OAAOtE,gBAAkBA,GACjFnX,KAAKkc,WAAW,CAAC/E,cAAaA,qCAIlC3X,OAAAoF,eAAIwW,EAAAlb,UAAA,iBAAc,KAAlB,SAAmB8V,GAEbjT,EADJiT,EAAiB5T,EAAU4T,KACMA,GAAkB,GAAKhW,KAAKyb,OAAOzF,iBAAmBA,GACrFhW,KAAKkc,WAAW,CAAClG,eAAcA,qCAInCxW,OAAAoF,eAAIwW,EAAAlb,UAAA,eAAY,KAAhB,SAAiBwb,GACX1b,KAAKyb,OAAOC,eAAiBA,GAAiB1b,KAAKyb,OAAOvV,UAC5DlG,KAAKkc,WAAW,CAACR,aAAYA,qCAIjClc,OAAAoF,eAAIwW,EAAAlb,UAAA,UAAO,KAAX,SAAY+T,OACJ0C,EAAU3W,KAAKmc,YAAYlI,EAAM,MACnCqC,GAActW,KAAKyb,OAAO9E,QAASA,IACrC3W,KAAKkc,WAAW,CAACvF,QAAOA,qCAI5BnX,OAAAoF,eAAIwW,EAAAlb,UAAA,eAAY,KAAhB,SAAiB4W,GACX9W,KAAKyb,OAAO3E,eAAiBA,GAC/B9W,KAAKkc,WAAW,CAACpF,aAAYA,qCAIjCtX,OAAAoF,eAAIwW,EAAAlb,UAAA,UAAO,KAAX,SAAY+T,OACJyC,EAAU1W,KAAKmc,YAAYlI,EAAM,MACnCqC,GAActW,KAAKyb,OAAO/E,QAASA,IACrC1W,KAAKkc,WAAW,CAACxF,QAAOA,qCAI5BlX,OAAAoF,eAAIwW,EAAAlb,UAAA,aAAU,KAAd,SAAeyb,GACT3b,KAAKyb,OAAOE,aAAeA,GAC7B3b,KAAKkc,WAAW,CAACP,WAAUA,qCAI/Bnc,OAAAoF,eAAIwW,EAAAlb,UAAA,cAAW,KAAf,SAAgByX,GACV3X,KAAKyb,OAAO9D,cAAgBA,GAC9B3X,KAAKkc,WAAW,CAACvE,YAAWA,qCAMhCyD,EAAAlb,UAAAkc,MAAA,SAAMnI,IACCjU,KAAKyb,OAAOvV,UAAYlG,KAAKqb,UAAUhF,QAAQpC,IAASqC,GAActW,KAAKyb,OAAOY,UAAWpI,IAChGjU,KAAKkc,WAAW,CAACG,UAAWpI,KAIhCmH,EAAAlb,UAAAoc,UAAA,SAAU9G,EAAoBC,GAC5BzV,KAAKoc,MAAMpc,KAAKqb,UAAU9F,QAAQvV,KAAKyb,OAAOY,UAAW7G,EAAQC,KAGnE2F,EAAAlb,UAAAqc,YAAA,WACM3F,GAAiB5W,KAAKyb,OAAOY,UAAWrc,KAAKyb,SAC/Czb,KAAKsR,OAAOtR,KAAKyb,OAAOY,UAAW,CAACG,WAAW,KAInDpB,EAAAlb,UAAAuc,KAAA,SAAKxI,OACGsD,EAAYvX,KAAKmc,YAAYlI,EAAMjU,KAAKqb,UAAUjF,YACnDpW,KAAKyb,OAAOvV,UAAclG,KAAKyb,OAAOlE,YAAaf,GAAexW,KAAKyb,OAAOlE,UAAWtD,IAC5FjU,KAAKkc,WAAW,CAAC3E,UAASA,KAI9B6D,EAAAlb,UAAAoR,OAAA,SAAO2C,EAAeyI,QAAA,IAAAA,IAAAA,EAAA,QACdV,EAAehc,KAAKmc,YAAYlI,EAAM,MACvCjU,KAAKyb,OAAOvV,WACXoQ,GAActW,KAAKyb,OAAOO,aAAcA,IAC1Chc,KAAKkc,WAAW,CAACF,aAAYA,IAG3BU,EAAQF,WAAa5F,GAAiBoF,EAAchc,KAAKyb,SAC3Dzb,KAAKwb,SAASla,KAAK0a,KAKzBZ,EAAAlb,UAAAic,YAAA,SAAYlI,EAAqB0I,OACzBC,EAAUhJ,GAAQI,KAAKC,GAI7B,OAHI0I,IAAiBpa,YACnBoa,EAAe3c,KAAKqb,UAAUjF,YAEzBpW,KAAKqb,UAAUhF,QAAQuG,GAAWA,EAAUD,GAG7CvB,EAAAlb,UAAAgc,WAAR,SAAmBW,OACXC,EAAW9c,KAAK+c,aAAaF,GACnC7c,KAAKgd,eAAeF,GACpB9c,KAAKyb,OAASqB,EACd9c,KAAKub,QAAQja,KAAKtB,KAAKyb,SAGjBL,EAAAlb,UAAA8c,eAAR,SAAuBnG,GACd,IAAAO,EAAAP,EAAAO,OAAQD,EAAAN,EAAAM,cAAe6E,EAAAnF,EAAAmF,aAAcK,EAAAxF,EAAAwF,UAAWX,EAAA7E,EAAA6E,aAAcxV,EAAA2Q,EAAA3Q,SAAUyR,EAAAd,EAAAc,YAC/Ed,EAAMO,OAAOvP,QAAQ,SAAAiM,GACnBA,EAAMgE,MAAMjQ,QAAQ,SAAAkO,GAClBA,EAAKsC,KAAKxQ,QAAQ,SAAAkM,GAGZsI,IACFtI,EAAI8E,QAAQvM,QAAU+P,EAAUnI,OAAOH,EAAIE,OAASyH,GAItD3H,EAAImF,UAAYhT,GAAY6N,EAAIE,KAAKC,OAAOmI,IAAcA,EAAUvI,QAAUA,EAAM2B,OAAS,GAAK,GAGjF,IAAbvP,IACF6N,EAAI8E,QAAQ3S,UAAW,GAIrB8V,IAAiBzZ,YACnBwR,EAAI8E,QAAQI,SAA4B,OAAjB+C,GAAyBA,EAAa9H,OAAOH,EAAIE,OAItEH,EAAM2B,SAAW1B,EAAIE,KAAKH,QAC5BC,EAAIoF,OAAyB,WAAhBxB,GAA4C,cAAhBA,GACpCR,EAAgB,GAAKpD,EAAIE,KAAKI,MAAM+C,EAAO,GAAGG,YAC9CxD,EAAIE,KAAKG,OAAOgD,EAAOD,EAAgB,GAAGU,kBAOjDuD,EAAAlb,UAAA6c,aAAR,SAAqBF,OFpHW7F,EAAuB/C,EAAeyC,EAChEuG,EEqHEpG,EAAQrX,OAAOa,OAAO,GAAIL,KAAKyb,OAAQoB,GAEzCK,EAAYrG,EAAMU,UAqBtB,IAlBI,YAAasF,GAAS,YAAaA,MF5L3C,SAAkCnG,EAAkBC,GAClD,GAAIA,GAAWD,GAAWC,EAAQvC,OAAOsC,GACvC,MAAM,IAAIyG,MAAM,aAAaxG,EAAO,qCAAqCD,GE2LvE0G,CAAkBvG,EAAMH,QAASG,EAAMF,SACvCE,EAAMwF,UAAY5F,GAAiBI,EAAMwF,UAAWxF,EAAMH,QAASG,EAAMF,SACzEE,EAAMU,UAAYd,GAAiBI,EAAMU,UAAWV,EAAMH,QAASG,EAAMF,SACzEuG,EAAYrG,EAAMwF,WAIhB,aAAcQ,IAChBhG,EAAM6E,cAAe,GAInB,iBAAkBmB,GAAuC,IAA9B7c,KAAKyb,OAAOrE,OAAOzW,SAChDuc,EAAYrG,EAAMmF,cAIhB,iBAAkBa,EACpB,OAAOhG,EAIT,GAAI,cAAegG,IACjBhG,EAAMwF,UAAY5F,GAAiBI,EAAMwF,UAAWxF,EAAMH,QAASG,EAAMF,SACzEuG,EAAYrG,EAAMwF,UAGU,IAAxBxF,EAAMO,OAAOzW,SAAiBkW,EAAMwF,UAAUjI,OAAOyC,EAAMU,aAC1DV,EAAMwF,UAAUhI,MAAMwC,EAAMgB,WAC/B,OAAOhB,EAWX,GANI,cAAegG,IACjBhG,EAAMU,UAAYd,GAAiBI,EAAMU,UAAWV,EAAMH,QAASG,EAAMF,SACzEuG,EAAYrG,EAAMU,WAIhB2F,EAAW,KACPG,EAAe,oBAAqBR,GAAS,mBAAoBA,GAAS,iBAAkBA,GAC9F,YAAaA,GAAS,YAAaA,GAAS,aAAcA,GAAS,gBAAiBA,EAElFzF,EAASL,GAAY/W,KAAKqb,UAAW6B,EAAWrG,EAAO7W,KAAKsb,MAAO+B,GAGzExG,EAAMO,OAASA,EACfP,EAAMU,UAAYH,EAAOzW,OAAS,EAAIyW,EAAO,GAAGG,UAAYhV,UAC5DsU,EAAMgB,SAAWT,EAAOzW,OAAS,EAAIyW,EAAOA,EAAOzW,OAAS,GAAGkX,SAAWtV,UAGtE,iBAAkBsa,IAAUjG,GAAiBC,EAAMmF,aAAcnF,KACnEA,EAAMmF,aAAe,MAInB,cAAea,IACbhG,EAAMwF,YAAc9Z,WAAasU,EAAMwF,UAAUjI,OAAOyC,EAAMU,YAC9DV,EAAMwF,UAAUhI,MAAMwC,EAAMgB,aAC9BhB,EAAMwF,UAAYa,OAKhBI,GAAetd,KAAKyb,OAAOlE,WAAavX,KAAKyb,OAAOlE,UAAU1D,OAASgD,EAAMU,UAAU1D,KACvF0J,GAAgBvd,KAAKyb,OAAOlE,WAAavX,KAAKyb,OAAOlE,UAAUzD,QAAU+C,EAAMU,UAAUzD,MACtE,WAArB+C,EAAM8E,aAEJ,YAAakB,GAAS,YAAaA,GAA4C,IAAnChG,EAAMiF,YAAYC,MAAMpb,QAAgB2c,KACtFzG,EAAMiF,YAAYC,MFjN5B,SAAuC9H,EAAeyC,EAAkBC,GACtE,IAAK1C,EACH,MAAO,OAGHuJ,EAAQ9G,GAAWA,EAAQ7C,MAAQI,EAAKJ,KAAO,GAC/C4J,EAAM9G,GAAWA,EAAQ9C,MAAQI,EAAKJ,KAAO,GAEnD,OAAOlU,MAAMqU,KAAK,CAACrT,OAAQ8c,EAAMD,EAAQ,GAAI,SAACpc,EAAGZ,GAAM,OAAAgd,EAAQhd,IEyM7Bkd,CAAuB7G,EAAMU,UAAWV,EAAMH,QAASG,EAAMF,WAIrF,YAAakG,GAAS,YAAaA,GAA6C,IAApChG,EAAMiF,YAAY1E,OAAOzW,QAAgB2c,KACvFzG,EAAMiF,YAAY1E,OF1O5B,SAAwCJ,EAAuB/C,EAAeyC,EAAkBC,GAC9F,IAAK1C,EACH,MAAO,OAGLmD,EAASJ,EAAS3B,UAAUpB,EAAKJ,MAErC,GAAI6C,GAAWzC,EAAKJ,OAAS6C,EAAQ7C,KAAM,KACnC4G,EAAQrD,EAAOK,UAAU,SAAA3D,GAAS,OAAAA,IAAU4C,EAAQ5C,QAC1DsD,EAASA,EAAOhU,MAAMqX,GAGpB9D,GAAW1C,EAAKJ,OAAS8C,EAAQ9C,OAC7B4G,EAAQrD,EAAOK,UAAU,SAAA3D,GAAS,OAAAA,IAAU6C,EAAQ7C,QAC1DsD,EAASA,EAAOhU,MAAM,EAAGqX,EAAQ,IAGnC,OAAOrD,EE0NKuG,CAAwB3d,KAAKqb,UAAWxE,EAAMU,UAAWV,EAAMH,QAASG,EAAMF,WAGpFE,EAAMiF,YAAc,CAACC,MAAO,GAAI3E,OAAQ,IAIhB,WAArBP,EAAM8E,YAAgD,WAArB9E,EAAM8E,cACvC4B,GAAgBD,GAAe,YAAaT,GAAS,YAAaA,GAAS,aAAcA,KAC5FhG,EAAM+E,aAAe/E,EAAM3Q,WFjND8Q,EEiN+BhX,KAAKqb,UFjNbpH,EEiNwB4C,EAAMU,UFjNfb,EEiN0BG,EAAMH,QFhNhGuG,EAAWjG,EAASrB,QAAQ1B,EAAM,KACjCyC,IAAYuG,EAASpJ,OAAS6C,EAAQ7C,MAAQoJ,EAASnJ,MAAQ4C,EAAQ5C,OAC3DmJ,EAASpJ,KAAO6C,EAAQ7C,MAA0B,IAAlB6C,EAAQ5C,QE+MrD+C,EAAMgF,aAAehF,EAAM3Q,UFtNnC,SAAkC8Q,EAAuB/C,EAAe0C,GACtE,OAAOA,GAAWK,EAASzB,QAAQtB,EAAM,KAAKI,MAAMsC,GEqNPiH,CAAkB5d,KAAKqb,UAAWxE,EAAMgB,SAAUhB,EAAMF,UAInG,OAAOE,uBAlRVjV,EAAAA,sDAvBOqT,UAqBAwE,MAsRR2B,EA3SA,OCCEyC,IAAA,EACAC,MAAA,GACAC,OAAA,GACAC,MAAA,GACAC,OAAA,GACAC,SAAA,GACAC,IAAA,GACAC,KAAA,GACAC,UAAA,GACAC,QAAA,GACAC,WAAA,GACAC,UAAA,8RCZF,IAAAC,GAAA,WAaE,SAAAA,EAAoBC,EAAwCrD,GAA5D,IAAA1T,EAAA3H,KAAoBA,KAAA0e,SAAAA,EAAwC1e,KAAAqb,UAAAA,EAC1DqD,EAASC,OAAO3N,UAAU,SAAAiL,GACxBtU,EAAKiX,SAAW3C,EAAMvF,QACtB/O,EAAKkX,SAAW5C,EAAMtF,QACtBhP,EAAKmX,eAAiB7C,EAAM1E,UAC5B5P,EAAKoX,cAAgB9C,EAAMpE,WA2CjC,OAvCE4G,EAAAve,UAAA8e,WAAA,SAAWC,GAET,OAAQA,EAAMC,OACZ,KAAKC,GAAIlB,OACPje,KAAK0e,SAASpC,UAAU2C,EAAMG,SAAW,IAAM,KAAM,GACrD,MACF,KAAKD,GAAIjB,SACPle,KAAK0e,SAASpC,UAAU2C,EAAMG,SAAW,IAAM,IAAK,GACpD,MACF,KAAKD,GAAIhB,IACPne,KAAK0e,SAAStC,MAAM6C,EAAMG,SAAWpf,KAAK6e,SAAW7e,KAAK+e,eAC1D,MACF,KAAKI,GAAIf,KACPpe,KAAK0e,SAAStC,MAAM6C,EAAMG,SAAWpf,KAAK4e,SAAW5e,KAAK8e,gBAC1D,MACF,KAAKK,GAAId,UACPre,KAAK0e,SAASpC,UAAU,KAAM,GAC9B,MACF,KAAK6C,GAAIb,QACPte,KAAK0e,SAASpC,UAAU,KAAMtc,KAAKqb,UAAUjG,kBAC7C,MACF,KAAK+J,GAAIZ,WACPve,KAAK0e,SAASpC,UAAU,IAAK,GAC7B,MACF,KAAK6C,GAAIX,UACPxe,KAAK0e,SAASpC,UAAU,IAAKtc,KAAKqb,UAAUjG,kBAC5C,MACF,KAAK+J,GAAIrB,MACT,KAAKqB,GAAInB,MACPhe,KAAK0e,SAASnC,cACd,MACF,QACE,OAIJ0C,EAAM3W,iBACN2W,EAAMI,uCArDTzd,EAAAA,sDALOwZ,UACAnG,MA2DRwJ,EA7DA,OCyDEa,KAAA,EACAC,KAAA,yCChDF,IAAAC,GAAA,WAAA,SAAAA,IAKExf,KAAAmX,cAAgB,EAChBnX,KAAAgW,eAAiB,EAIjBhW,KAAA2b,WAA2C,SAC3C3b,KAAA2X,YAAkD,UAClD3X,KAAAyf,cAAe,EACfzf,KAAA0f,iBAAkB,6BAbnB9d,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,gHAAzB,GCNA,SAAgB6d,KACd,OAAO,IAAIC,GAeb,IAAAC,GAAA,WAAA,SAAAA,gCAACje,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,OAAQoT,WAAYyK,sFAA7C,kBAaA,SAAAC,mDAmBA,OAlB0CzK,EAAAA,EAAAA,GAIxCyK,EAAA1f,UAAA4f,UAAA,SAAU7L,GACR,OAAQA,GAAQlR,EAAUkR,EAAKJ,OAAS9Q,EAAUkR,EAAKH,QAAU/Q,EAAUkR,EAAKF,KAC5E,CAACF,KAAMI,EAAKJ,KAAMC,MAAOG,EAAKH,MAAOC,IAAKE,EAAKF,KAC/C,MAMN6L,EAAA1f,UAAA6f,QAAA,SAAQ9L,GACN,OAAQA,GAAQlR,EAAUkR,EAAKJ,OAAS9Q,EAAUkR,EAAKH,QAAU/Q,EAAUkR,EAAKF,KAC5E,CAACF,KAAMI,EAAKJ,KAAMC,MAAOG,EAAKH,MAAOC,IAAKE,EAAKF,KAC/C,0BAjBPnS,EAAAA,aAmBDge,GAlB0CC,ICCpCG,GAAgC,CACpCvU,QAASC,EAAAA,kBACTC,YAAanG,EAAAA,WAAW,WAAM,OAAAya,KAC9BpU,OAAO,GA8BToU,GAAA,WAmLE,SAAAA,EACYC,EAAmDxB,EACnDrD,EAA+BpE,EAAyBlQ,EACxDgF,EAAgCoU,EAChCC,EAA8CnQ,GAJ1D,IAAAtI,EAAA3H,KACYA,KAAAkgB,eAAAA,EAAmDlgB,KAAA0e,SAAAA,EACnD1e,KAAAqb,UAAAA,EAA+Brb,KAAAiX,KAAAA,EAC/BjX,KAAA+L,IAAAA,EAAgC/L,KAAAmgB,YAAAA,EAChCngB,KAAAogB,gBAAAA,EAA8CpgB,KAAAiQ,QAAAA,EA5HlDjQ,KAAAqgB,YAAc,IAAIlQ,EAAAA,QA4GhBnQ,KAAAsgB,SAAW,IAAInZ,EAAAA,aAOfnH,KAAAsR,OAAS,IAAInK,EAAAA,aAEvBnH,KAAAkM,SAAW,SAACC,KACZnM,KAAAoM,UAAY,aAOV,CAAC,cAAe,kBAAmB,gBAAiB,iBAAkB,iBAAkB,eAAgB,UACvG,UAAW,aAAc,cAAe,eAAgB,kBAAmB,aACvEvE,QAAQ,SAAA0Y,GAAS,OAAA5Y,EAAK4Y,GAASxZ,EAAOwZ,KAE3C7B,EAAS8B,QAAQ9P,KAAKI,EAAAA,UAAU9Q,KAAKqgB,cAAcrP,UAAU,SAAAiD,GAAUtM,EAAK2J,OAAOjJ,KAAK4L,KAExFyK,EAASC,OAAOjO,KAAKI,EAAAA,UAAU9Q,KAAKqgB,cAAcrP,UAAU,SAAAiL,OACpD3D,EAAU2D,EAAM1E,UAChBkJ,EAAU9Y,EAAKsU,MAAQtU,EAAKsU,MAAM1E,UAAY,KAEhDmJ,GAAsB,EAE1B,GAAKpI,EAAQpE,OAAOuM,KAClB9Y,EAAK2Y,SAASjY,KAAK,CACjBgK,QAASoO,EAAU,CAAC5M,KAAM4M,EAAQ5M,KAAMC,MAAO2M,EAAQ3M,OAAS,KAChExS,KAAM,CAACuS,KAAMyE,EAAQzE,KAAMC,MAAOwE,EAAQxE,OAC1CxL,eAAgB,WAAM,OAAAoY,GAAsB,MAI1CA,GAAmC,OAAZD,GAR7B,KAcME,EAAkB1E,EAAMD,aACxB4E,EAAiB3E,EAAMI,UACvBwE,EAAiBlZ,EAAKsU,MAAQtU,EAAKsU,MAAMI,UAAY,KAE3D1U,EAAKsU,MAAQA,EAGT3F,GAAcqK,EAAiBhZ,EAAKmZ,iBACtCnZ,EAAKmZ,cAAgBH,EACrBhZ,EAAKyE,YACLzE,EAAKuE,SAASvE,EAAKyY,gBAAgBL,QAAQY,KAIzCrK,GAAcsK,EAAgBC,IAAmBA,GAAkB5E,EAAMP,cAC3E/T,EAAKyU,QAGPrQ,EAAIoB,oBAvBAxF,EAAK+W,SAASjC,KAAKgE,KAyH7B,OA9FER,EAAA/f,UAAAkc,MAAA,WAAA,IAAAzU,EAAA3H,KACEA,KAAKiQ,QAAQ8Q,SAASC,eAAetQ,KAAKuQ,EAAAA,KAAK,IAAIjQ,UAAU,eACrDkQ,EACFvZ,EAAKwY,YAAY/V,cAAc+W,cAA8B,gCAC7DD,GACFA,EAAe9E,WAarB6D,EAAA/f,UAAAkhB,WAAA,SAAWnN,GACTjU,KAAK0e,SAASjC,KAAK7I,GAAQI,KAAKC,EAAOA,EAAKF,IAAG,EAAO3T,EAAA,GAAwB6T,EAAI,CAAEF,IAAK,IAAK,QAGhGkM,EAAA/f,UAAAmhB,gBAAA,WAAA,IAAA1Z,EAAA3H,KACEA,KAAKiQ,QAAQQ,kBAAkB,eACvB6Q,EAAYC,EAAAA,UAAsB5Z,EAAK6Z,UAAUpX,cAAe,WAChEqX,EAAaF,EAAAA,UAAsB5Z,EAAK6Z,UAAUpX,cAAe,YAIvE2G,EAAAA,MAAMuQ,EAAWG,GACZ/Q,KACGlI,EAAAA,OACI,SAACkZ,OAAChV,EAAAgV,EAAAhV,OAAQiV,EAAAD,EAAAC,cACN,QAAEte,EAAaqJ,EAAQ,eAAiBrJ,EAAase,EAAe,iBAC5E7Q,EAAAA,UAAUnJ,EAAK0Y,cAClBrP,UAAU,SAAC0Q,OAAC3c,EAAA2c,EAAA3c,KAAU,OAAA4C,EAAKsI,QAAQgB,IAAI,WAAM,OAAAtJ,EAAK+W,SAAShD,aAAwB,YAAT3W,SAInFkb,EAAA/f,UAAAgP,YAAA,WAAgBlP,KAAKqgB,YAAY/e,QAEjC2e,EAAA/f,UAAA8B,SAAA,WAAA,IAAA2F,EAAA3H,KACMA,KAAKic,QAAU1Z,YACjB,CAAC,kBAAmB,gBAAiB,eAAgB,iBAAkB,aAAc,UAAW,UAC/F,eACIsF,QAAQ,SAAA0Y,GAAS,OAAA5Y,EAAK+W,SAAS6B,GAAS5Y,EAAK4Y,KAClDvgB,KAAKohB,WAAWphB,KAAKkd,aAIzB+C,EAAA/f,UAAA6J,YAAA,SAAYC,GAAZ,IAAArC,EAAA3H,KAME,GALA,CAAC,kBAAmB,gBAAiB,eAAgB,iBAAkB,aAAc,UAAW,UAC/F,eACIwI,OAAO,SAAA+X,GAAS,OAAAA,KAASvW,IACzBnC,QAAQ,SAAA0Y,GAAS,OAAA5Y,EAAK+W,SAAS6B,GAAS5Y,EAAK4Y,KAE9C,cAAevW,EAAS,CACpB,IAAA0X,EAAA1X,EAAAkT,UAAC3S,EAAAmX,EAAAnX,aACHiM,GADiBkL,EAAArX,cACaE,IAChCvK,KAAKohB,WAAWphB,KAAKkd,aAK3B+C,EAAA/f,UAAA0hB,aAAA,SAAa3N,GACXjU,KAAK0e,SAAStC,MAAMnI,GACpBjU,KAAK0e,SAASpN,OAAO2C,EAAM,CAACuI,WAAW,KAGzCyD,EAAA/f,UAAA2hB,UAAA,SAAU5C,GAAwBjf,KAAKkgB,eAAelB,WAAWC,IAEjEgB,EAAA/f,UAAA4hB,qBAAA,SAAqB7N,GAAiBjU,KAAK0e,SAASjC,KAAKxI,IAEzDgM,EAAA/f,UAAA6hB,gBAAA,SAAgB9C,GACd,OAAQA,GACN,KAAK+C,GAAgB1C,KACnBtf,KAAK0e,SAASjC,KAAKzc,KAAKqb,UAAU1F,QAAQ3V,KAAKic,MAAM1E,UAAW,IAAK,IACrE,MACF,KAAKyK,GAAgBzC,KACnBvf,KAAK0e,SAASjC,KAAKzc,KAAKqb,UAAU9F,QAAQvV,KAAKic,MAAM1E,UAAW,IAAK,MAK3E0I,EAAA/f,UAAA2M,iBAAA,SAAiBC,GAAiC9M,KAAKkM,SAAWY,GAElEmT,EAAA/f,UAAA6M,kBAAA,SAAkBD,GAAuB9M,KAAKoM,UAAYU,GAE1DmT,EAAA/f,UAAA8M,iBAAA,SAAiBC,GAAuBjN,KAAK0e,SAASxY,SAAW+G,GAEjEgT,EAAA/f,UAAA0M,WAAA,SAAWnL,GACTzB,KAAK8gB,cAAgBlN,GAAQI,KAAKhU,KAAKogB,gBAAgBN,UAAUre,IACjEzB,KAAK0e,SAASpN,OAAOtR,KAAK8gB,oCApU7B7e,EAAAA,UAASJ,KAAA,CAAC,CACT6G,SAAU,gBACVxG,SAAU,iBACVsI,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KAEjC1I,SAAU,+vDA6CVsL,UAAW,CAACuS,GAA+B5E,GAAsBqD,ixBA9F3DA,UADArD,UAFAnG,UASAwE,UAHA+F,UAvBN9R,EAAAA,yBAEA1C,EAAAA,kBAsBM6U,UAlBNzM,EAAAA,6CAkHC6O,EAAAA,UAASpgB,KAAA,CAAC,+BAWV+D,EAAAA,+BAUAA,EAAAA,6BAKAA,EAAAA,8BAOAA,EAAAA,8BAOAA,EAAAA,4BASAA,EAAAA,uBAOAA,EAAAA,uBAOAA,EAAAA,0BASAA,EAAAA,2BAWAA,EAAAA,4BAKAA,EAAAA,+BAKAA,EAAAA,yBAUAA,EAAAA,wBAOAkD,EAAAA,uBAOAA,EAAAA,UAwJHmX,EAtUA,GCpEAiC,GAAA,WA2CE,SAAAA,EAAmBjL,GAAAjX,KAAAiX,KAAAA,EAFTjX,KAAAsR,OAAS,IAAInK,EAAAA,aASzB,OALE+a,EAAAhiB,UAAAiiB,SAAA,SAASpO,GACFA,EAAI8E,QAAQ3S,UAAa6N,EAAIoF,QAChCnZ,KAAKsR,OAAOjJ,KAAK0L,EAAIE,2BAzC1BhS,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,4BACV4C,KAAM,CAAC8D,KAAQ,QACf+B,cAAeC,EAAAA,kBAAkBC,KAEjC1I,SAAU,wnDARJsX,2CAiCL7T,EAAAA,qBACAA,EAAAA,4BACAA,EAAAA,+BACAA,EAAAA,sBAEAkD,EAAAA,UASHoZ,EAlDA,GCAAE,GAAA,WAwDE,SAAAA,EAAmBnL,GAAAjX,KAAAiX,KAAAA,EAbnBjX,KAAA2b,WAAaqG,GAIJhiB,KAAAoX,OAA2B,GAM1BpX,KAAAsgB,SAAW,IAAInZ,EAAAA,aACfnH,KAAAsR,OAAS,IAAInK,EAAAA,aAGzB,2BApDClF,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,4BACVsI,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KAEjC1I,SAAU,woFAPJsX,oCA0CL7T,EAAAA,wBACAA,EAAAA,sBACAA,EAAAA,0BACAA,EAAAA,4BACAA,EAAAA,4BACAA,EAAAA,2BACAA,EAAAA,wBAEAkD,EAAAA,uBACAA,EAAAA,UAGHsZ,EAzDA,GCMMC,GAAgB,SAAC/e,EAAsBgf,GACzC,QAAAA,GAAQA,EAAMC,KAAK,SAAAC,GAAQ,OAAAA,EAAKte,SAASZ,MAEvCmf,GAAuB,SAACnf,EAAsBpB,GAChD,OAACA,GAA0C,M7B0D/C,SAAwBoB,EAAsBpB,GAC5C,OAAKA,EAIEoB,EAAQK,QAAQzB,GAHd,K6B5DMyB,CAAQL,EAASpB,IAK9BwgB,IAAM,EAKV,SAAgBC,GACZC,EAAc5e,EAAee,EAAsC8E,EAAmBgZ,EACtFC,EAA+BC,EAAgCC,GAE7Dje,GACF6d,EAAKnS,kBAAkB,eAgBfwS,EAAW1B,EAAAA,UAAyBvd,EAAU,WAC9B0M,KACGI,EAAAA,UAAU+R,GAEVra,EAAAA,OAAO,SAAApH,GAAK,OAAAA,EAAE8d,QAAUC,GAAIpB,UAK/CmF,EAAc3B,EAAAA,UAAsBvd,EAAU0e,GAAM,aAAe,aAChDhS,KAAKjI,EAAAA,IAxBH,SAACwW,OACpB3b,EAAU2b,EAAY,OAC5B,QAAKA,aAAiBkE,YAA+B,IAAjBlE,EAAMmE,QAAiBf,GAAc/e,EAASyf,MAGrE,WAAThe,EACKsd,GAAc/e,EAASwf,IAAmBL,GAAqBnf,EAAS0f,GAC7D,YAATje,GACDsd,GAAc/e,EAASwf,GAExBL,GAAqBnf,EAAS0f,KAAoBX,GAAc/e,EAASwf,MAc7BhS,EAAAA,UAAU+R,IAE3DQ,EAAmB9B,EAAAA,UAAsBvd,EAAU0e,GAAM,WAAa,WAC9ChS,KACG4S,EAAAA,eAAeJ,GAAc1a,EAAAA,OAAO,SAACkZ,OAAA6B,EAAAziB,EAAA4gB,EAAA,GAAC6B,EAAA,GAAoB,OAAjBA,EAAA,KACzCC,EAAAA,MAAMd,GAAM,GAAK,GAAI5R,EAAAA,UAAU+R,IAGhEY,EAAAA,KAAY,CAACR,EAAUI,IAAmBrS,UAAU,WAAM,OAAA4R,EAAK3R,IAAIpH,OA3ChD,oBAAd6Z,YACThB,KAAQgB,UAAUC,WAAa,mBAAmBC,KAAKF,UAAUC,gBCX7DE,GAA8B,CAClC,UAAW,yBAA0B,6CAA8C,yBACnF,2BAA4B,oBAAqB,mCACjDC,KAAK,MAKP,SAAgBC,GAA6BzgB,OACrC0gB,EACFrkB,MAAMqU,KAAK1Q,EAAQ2gB,iBAAiBJ,KAC/Brb,OAAO,SAAAzE,GAAM,OAAiB,IAAjBA,EAAG+O,WACzB,MAAO,CAACkR,EAAK,GAAIA,EAAKA,EAAKrjB,OAAS,IActC,IAAaujB,GAAe,SAAC5gB,EAAsB6gB,EAAiCC,QAAA,IAAAA,IAAAA,GAAA,OAE5EC,EACF9C,EAAAA,UAAsBje,EAAS,WAAWoN,KAAKI,EAAAA,UAAUqT,GAAiB1b,EAAAA,IAAI,SAAArH,GAAK,OAAAA,EAAEsL,UAGzF6U,EAAAA,UAAyBje,EAAS,WAC7BoN,KACGI,EAAAA,UAAUqT,GAEV3b,EAAAA,OAAO,SAAApH,GAAK,OAAAA,EAAE8d,QAAUC,GAAItB,MAE5ByF,EAAAA,eAAee,IAClBrT,UAAU,SAAC0Q,OAAA6B,EAAAziB,EAAA4gB,EAAA,GAAC4C,EAAAf,EAAA,GAAUgB,EAAAhB,EAAA,GAChBiB,EAAA1jB,EAAAijB,GAAAzgB,GAAA,GAACkD,EAAAge,EAAA,GAAOC,EAAAD,EAAA,GAERD,IAAmB/d,GAAS+d,IAAmBjhB,IAAYghB,EAASlF,WACvEqF,EAAKrI,QACLkI,EAAShc,kBAGPic,IAAmBE,GAASH,EAASlF,WACvC5Y,EAAM4V,QACNkI,EAAShc,oBAKb8b,GACF7C,EAAAA,UAAUje,EAAS,SACdoN,KAAKI,EAAAA,UAAUqT,GAAiBb,EAAAA,eAAee,GAAsB5b,EAAAA,IAAI,SAAAic,GAAG,OAAIA,EAAI,MACpF1T,UAAU,SAAA2T,GAAsB,OAAAA,EAAmBvI,yBC7D5D,SAAAwI,KA6JA,OA5JUA,EAAA1kB,UAAA2kB,aAAR,SAAqBvhB,GAAwB,OAAOwhB,OAAOC,iBAAiBzhB,IAEpEshB,EAAA1kB,UAAA8kB,SAAR,SAAiB1hB,EAAsB2hB,GAAwB,OAAOjlB,KAAK6kB,aAAavhB,GAAS2hB,IAEzFL,EAAA1kB,UAAAglB,mBAAR,SAA2B5hB,GACzB,MAA4D,YAApDtD,KAAKglB,SAAS1hB,EAAS,aAAe,WAGxCshB,EAAA1kB,UAAAilB,aAAR,SAAqB7hB,GAGnB,QAFI8hB,EAA8B9hB,EAAoB,cAAIU,SAASC,gBAE5DmhB,GAAkBA,IAAmBphB,SAASC,iBAAmBjE,KAAKklB,mBAAmBE,IAC9FA,EAA8BA,EAA2B,aAG3D,OAAOA,GAAkBphB,SAASC,iBAGpC2gB,EAAA1kB,UAAAmlB,SAAA,SAAS/hB,EAAsB6S,OACzBmP,OADyB,IAAAnP,IAAAA,GAAA,OAEzBoP,EAA2B,CAACC,MAAO,EAAGC,OAAQ,EAAGC,IAAK,EAAGC,OAAQ,EAAGC,KAAM,EAAGC,MAAO,GAExF,GAA2C,UAAvC7lB,KAAKglB,SAAS1hB,EAAS,YAEzBgiB,EAAa,CACXI,KAFFJ,EAAahiB,EAAQwiB,yBAEHJ,IAChBC,OAAQL,EAAWK,OACnBC,KAAMN,EAAWM,KACjBC,MAAOP,EAAWO,MAClBJ,OAAQH,EAAWG,OACnBD,MAAOF,EAAWE,WAEf,KACCJ,EAAiBplB,KAAKmlB,aAAa7hB,GAEzCgiB,EAAatlB,KAAK+lB,OAAOziB,GAAS,GAE9B8hB,IAAmBphB,SAASC,kBAC9BshB,EAAevlB,KAAK+lB,OAAOX,GAAgB,IAG7CG,EAAaG,KAAON,EAAeY,UACnCT,EAAaK,MAAQR,EAAea,WAetC,OAZAX,EAAWI,KAAOH,EAAaG,IAC/BJ,EAAWK,QAAUJ,EAAaG,IAClCJ,EAAWM,MAAQL,EAAaK,KAChCN,EAAWO,OAASN,EAAaK,KAE7BzP,IACFmP,EAAWI,IAAM/iB,KAAKwT,MAAMmP,EAAWI,KACvCJ,EAAWK,OAAShjB,KAAKwT,MAAMmP,EAAWK,QAC1CL,EAAWM,KAAOjjB,KAAKwT,MAAMmP,EAAWM,MACxCN,EAAWO,MAAQljB,KAAKwT,MAAMmP,EAAWO,QAGpCP,GAGTV,EAAA1kB,UAAA6lB,OAAA,SAAOziB,EAAsB6S,QAAA,IAAAA,IAAAA,GAAA,OACrB+P,EAAQ5iB,EAAQwiB,wBAChBK,EACCrB,OAAOsB,YAAcpiB,SAASC,gBAAgB+hB,UAD/CG,EAEErB,OAAOuB,YAAcriB,SAASC,gBAAgBgiB,WAGlDK,EAAW,CACbb,OAAQS,EAAMT,QAAUniB,EAAQijB,aAChCf,MAAOU,EAAMV,OAASliB,EAAQkjB,YAC9Bd,IAAKQ,EAAMR,IAAMS,EACjBR,OAAQO,EAAMP,OAASQ,EACvBP,KAAMM,EAAMN,KAAOO,EACnBN,MAAOK,EAAML,MAAQM,GAYvB,OATIhQ,IACFmQ,EAASb,OAAS9iB,KAAKwT,MAAMmQ,EAASb,QACtCa,EAASd,MAAQ7iB,KAAKwT,MAAMmQ,EAASd,OACrCc,EAASZ,IAAM/iB,KAAKwT,MAAMmQ,EAASZ,KACnCY,EAASX,OAAShjB,KAAKwT,MAAMmQ,EAASX,QACtCW,EAASV,KAAOjjB,KAAKwT,MAAMmQ,EAASV,MACpCU,EAAST,MAAQljB,KAAKwT,MAAMmQ,EAAST,QAGhCS,GAMT1B,EAAA1kB,UAAAumB,iBAAA,SAAiBC,EAA0BC,EAA4BC,EAAmBC,GAEnF,IAAAnF,EAAA5gB,EAAA8lB,EAAApjB,MAAA,KAAA,GAAC+f,EAAA7B,EAAA,GAAAoF,OAAA,IAAAvD,EAAA,MAAAA,EAA0BiB,EAAA9C,EAAA,GAAAqF,OAAA,IAAAvC,EAAA,SAAAA,EAE1BwC,EAAiBH,EAAe7mB,KAAK+lB,OAAOW,GAAa,GAAS1mB,KAAKqlB,SAASqB,GAAa,GAC7FO,EAAiBjnB,KAAK6kB,aAAa8B,GAEnCO,EAAYC,WAAWF,EAAeC,WACtCE,EAAeD,WAAWF,EAAeG,cACzCC,EAAaF,WAAWF,EAAeI,YACvCC,EAAcH,WAAWF,EAAeK,aAE1CC,EAAc,EACdC,EAAe,EAEnB,OAAQV,GACN,IAAK,MACHS,EAAeP,EAAetB,KAAOiB,EAAcJ,aAAeW,EAAYE,GAC9E,MACF,IAAK,SACHG,EAAeP,EAAetB,IAAMsB,EAAevB,OACnD,MACF,IAAK,OACH+B,EAAgBR,EAAepB,MAAQe,EAAcH,YAAca,EAAaC,GAChF,MACF,IAAK,QACHE,EAAgBR,EAAepB,KAAOoB,EAAexB,MAIzD,OAAQuB,GACN,IAAK,MACHQ,EAAcP,EAAetB,IAC7B,MACF,IAAK,SACH6B,EAAcP,EAAetB,IAAMsB,EAAevB,OAASkB,EAAcJ,aACzE,MACF,IAAK,OACHiB,EAAeR,EAAepB,KAC9B,MACF,IAAK,QACH4B,EAAeR,EAAepB,KAAOoB,EAAexB,MAAQmB,EAAcH,YAC1E,MACF,IAAK,SACsB,QAArBM,GAAmD,WAArBA,EAChCU,EAAgBR,EAAepB,KAAOoB,EAAexB,MAAQ,EAAImB,EAAcH,YAAc,EAE7Fe,EAAeP,EAAetB,IAAMsB,EAAevB,OAAS,EAAIkB,EAAcJ,aAAe,EAOnGI,EAAcc,MAAMC,UAAY,aAAa/kB,KAAKwT,MAAMqR,GAAa,OAAO7kB,KAAKwT,MAAMoR,GAAY,UAG7FI,EAAchB,EAAcb,wBAC5B8B,EAAO5jB,SAASC,gBAChB4jB,EAAe/C,OAAOgD,aAAeF,EAAKG,aAC1CC,EAAclD,OAAOmD,YAAcL,EAAKM,YAE9C,OAAOP,EAAY/B,MAAQ,GAAK+B,EAAYjC,KAAO,GAAKiC,EAAY9B,OAASmC,GACzEL,EAAYhC,QAAUkC,GAE9BjD,KAEMuD,GAAqB,MACrBC,GAAkB,IAAIxD,GAY5B,SAAgB6B,GACZC,EAA0BC,EAA4BC,EACtDC,EAAwBwB,WACtBC,EACA3oB,MAAM4oB,QAAQ3B,GAAaA,EAAYA,EAAUpjB,MAAM2kB,IAErDK,EAAoB,CACxB,MAAO,SAAU,OAAQ,QAAS,WAAY,YAAa,cAAe,eAAgB,WAAY,cACtG,YAAa,gBAGTC,EAAY9B,EAAc8B,UAC1BC,EAAqB,SAACC,GACrB,IAAAjH,EAAA5gB,EAAA6nB,EAAAnlB,MAAA,KAAA,GAAColB,EAAAlH,EAAA,GAASmH,EAAAnH,EAAA,GACToH,EAAU,GAShB,OARIT,IACFS,EAAQtnB,KAAQ6mB,EAAS,IAAIO,GACzBC,GACFC,EAAQtnB,KAAQ6mB,EAAS,IAAIO,EAAO,IAAIC,GAG1CC,EAAQjhB,QAAQ,SAACkhB,GAAgBN,EAAUla,IAAIwa,MAE1CD,GAILT,GACFG,EAAkB3gB,QAAQ,SAACmhB,GAAwBP,EAAUQ,OAAUZ,EAAS,IAAIW,SAIlFE,EAAUZ,EAAc7Q,UAAU,SAAA0R,GAAO,MAAQ,SAARA,IACzCD,GAAW,GACbV,EAAkB3gB,QAAQ,SAASuhB,GAC8B,MAA3Dd,EAAc/f,KAAK,SAAA4gB,GAAO,OAA2B,IAA3BA,EAAIE,OAAO,IAAMD,MAC7Cd,EAAchR,OAAO4R,IAAW,EAAC,SAcnCI,EANE7B,EAAQd,EAAcc,MAC5BA,EAAMpC,SAAW,WACjBoC,EAAM/B,IAAM,IACZ+B,EAAM7B,KAAO,IACb6B,EAAM,eAAiB,gBAGnB8B,GAAe,MACnB,IAAsB,IAAAC,ElCtHjB,SAAkBzoB,GACrB,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAWV,EAAI,EAChE,OAAIQ,EAAUA,EAAEJ,KAAKG,GACd,CACHO,KAAM,WAEF,OADIP,GAAKP,GAAKO,EAAEJ,SAAQI,OAAI,GACrB,CAAEU,MAAOV,GAAKA,EAAEP,KAAMe,MAAOR,KkCgHxB0oB,CAAAnB,GAAaoB,EAAAF,EAAAloB,QAAAooB,EAAAnoB,KAAAmoB,EAAAF,EAAAloB,OAAE,KAC/BqoB,EAAejB,EADhBY,EAAaI,EAAAjoB,OAGhB,GAAI2mB,GAAgB3B,iBAAiBC,EAAaC,EAAe2C,EAAezC,GAAe,CAC7F0C,GAAe,EACf,MAIElB,GACFsB,EAAa9hB,QAAQ,SAACkhB,GAAgBN,EAAUQ,OAAOF,0GAW3D,OAPKQ,IAGHb,EADAY,EAAgBhB,EAAc,IAE9BF,GAAgB3B,iBAAiBC,EAAaC,EAAe2C,EAAezC,IAGvEyC,ECnPT,SAAgBM,KACd,OAAO,IAAIC,GAkBb,IAAAC,GAAA,WAAA,SAAAA,gCAACloB,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,OAAQoT,WAAY0U,sFAA7C,kBAmBA,SAAAC,mDAqBA,OApB+C1U,EAAAA,EAAAA,GAC7C0U,EAAA3pB,UAAA6pB,MAAA,SAAMtoB,GACJ,GAAIA,EAAO,KACHuoB,EAAYvoB,EAAMwoB,OAAOzmB,MAAM,KACrC,GAAyB,IAArBwmB,EAAUrpB,QAAgBkC,EAASmnB,EAAU,IAC/C,MAAO,CAACnW,KAAMzR,EAAU4nB,EAAU,IAAKlW,MAAO,KAAMC,IAAK,MACpD,GAAyB,IAArBiW,EAAUrpB,QAAgBkC,EAASmnB,EAAU,KAAOnnB,EAASmnB,EAAU,IAChF,MAAO,CAACnW,KAAMzR,EAAU4nB,EAAU,IAAKlW,MAAO1R,EAAU4nB,EAAU,IAAKjW,IAAK,MACvE,GAAyB,IAArBiW,EAAUrpB,QAAgBkC,EAASmnB,EAAU,KAAOnnB,EAASmnB,EAAU,KAAOnnB,EAASmnB,EAAU,IAC1G,MAAO,CAACnW,KAAMzR,EAAU4nB,EAAU,IAAKlW,MAAO1R,EAAU4nB,EAAU,IAAKjW,IAAK3R,EAAU4nB,EAAU,KAGpG,OAAO,MAGTH,EAAA3pB,UAAAgqB,OAAA,SAAOjW,GACL,OAAOA,EACAA,EAAKJ,KAAI,KAAIhR,EAASoR,EAAKH,OAAS3Q,EAAU8Q,EAAKH,OAAS,IAAE,KAAIjR,EAASoR,EAAKF,KAAO5Q,EAAU8Q,EAAKF,KAAO,IAChH,wBAnBPnS,EAAAA,aAqBDioB,GApB+CC,ICRzC9J,GAAgC,CACpCvU,QAASC,EAAAA,kBACTC,YAAanG,EAAAA,WAAW,WAAM,OAAA2kB,KAC9Bte,OAAO,GAGHue,GAA2B,CAC/B3e,QAAS4e,EAAAA,cACT1e,YAAanG,EAAAA,WAAW,WAAM,OAAA2kB,KAC9Bte,OAAO,GAQTse,GAAA,WA2ME,SAAAA,EACYG,EAAkDC,EAClDC,EAAkC7gB,EAA8B8gB,EAChExa,EAAyByO,EAAwCrD,EACjEqP,EAA6DC,EAC7DC,GALZ,IAAAjjB,EAAA3H,KACYA,KAAAsqB,iBAAAA,EAAkDtqB,KAAAuqB,OAAAA,EAClDvqB,KAAAwqB,OAAAA,EAAkCxqB,KAAA2J,UAAAA,EAA8B3J,KAAAyqB,KAAAA,EAChEzqB,KAAAiQ,QAAAA,EAAyBjQ,KAAA0e,SAAAA,EAAwC1e,KAAAqb,UAAAA,EACjErb,KAAA0qB,aAAAA,EAA6D1qB,KAAA2qB,UAAAA,EAC7D3qB,KAAA4qB,gBAAAA,EAnMJ5qB,KAAA6qB,MAAqC,KACrC7qB,KAAAiO,WAAY,EAeXjO,KAAA8qB,WAA4C,EAgG5C9qB,KAAA4mB,UAA4B,CAAC,cAAe,eAAgB,WAAY,aA6CvE5mB,KAAA+qB,WAAa,IAAI5jB,EAAAA,aAOjBnH,KAAAsgB,SAAW,IAAInZ,EAAAA,aAOfnH,KAAAgrB,OAAS,IAAI7jB,EAAAA,aAcfnH,KAAAirB,UAAY,SAAC9e,KACbnM,KAAAkrB,WAAa,aACblrB,KAAAmrB,iBAAmB,aASzBnrB,KAAKorB,kBAAoBnb,EAAQ8Q,SAAS/P,UAAU,WAAM,OAAArJ,EAAK0jB,yBAkNnE,OAzOE7rB,OAAAoF,eACIulB,EAAAjqB,UAAA,WAAQ,KADZ,WAEE,OAAOF,KAAKiO,eAEd,SAAaxM,GACXzB,KAAKiO,UAAsB,KAAVxM,GAAiBA,GAAmB,UAAVA,EAEvCzB,KAAKoG,UACPpG,KAAK6qB,MAAMS,SAASte,iBAAiBhN,KAAKiO,4CAkB9Ckc,EAAAjqB,UAAA2M,iBAAA,SAAiBC,GAAiC9M,KAAKirB,UAAYne,GAEnEqd,EAAAjqB,UAAA6M,kBAAA,SAAkBD,GAAuB9M,KAAKkrB,WAAape,GAE3Dqd,EAAAjqB,UAAAqrB,0BAAA,SAA0Bze,GAAwB9M,KAAKmrB,iBAAmBre,GAE1Eqd,EAAAjqB,UAAA8M,iBAAA,SAAiBC,GAA6BjN,KAAKkG,SAAW+G,GAE9Dkd,EAAAjqB,UAAAsrB,SAAA,SAASC,OACDhqB,EAAQgqB,EAAEhqB,MAEhB,GAAc,OAAVA,GAAkBA,IAAUc,UAC9B,OAAO,SAGHqa,EAAU5c,KAAK0rB,gBAAgB1rB,KAAK0qB,aAAa5K,UAAUre,IAEjE,OAAKzB,KAAKqb,UAAUhF,QAAQuG,GAIxB5c,KAAK0W,SAAWkG,EAAQxI,OAAOR,GAAQI,KAAKhU,KAAK0W,UAC5C,CAACkG,QAAW,CAAC+O,eAAgB3rB,KAAK0W,UAGvC1W,KAAK2W,SAAWiG,EAAQvI,MAAMT,GAAQI,KAAKhU,KAAK2W,UAC3C,CAACiG,QAAW,CAACgP,cAAe5rB,KAAK2W,eAD1C,EAPS,CAACiG,QAAW,CAACiP,QAASJ,EAAEhqB,SAYnC0oB,EAAAjqB,UAAA0M,WAAA,SAAWnL,GACTzB,KAAK8rB,OAAS9rB,KAAK0rB,gBAAgB1rB,KAAK0qB,aAAa5K,UAAUre,IAC/DzB,KAAK+rB,iBAAiB/rB,KAAK8rB,SAG7B3B,EAAAjqB,UAAA8rB,iBAAA,SAAiBvqB,EAAewqB,QAAA,IAAAA,IAAAA,GAAA,OACxBC,EAAoBzqB,IAAUzB,KAAKmsB,YACrCD,IACFlsB,KAAKmsB,YAAc1qB,EACnBzB,KAAK8rB,OAAS9rB,KAAK0rB,gBAAgB1rB,KAAKsqB,iBAAiBP,MAAMtoB,MAE7DyqB,GAAsBD,GACxBjsB,KAAKirB,UAAUjrB,KAAK8rB,OAAS9rB,KAAK0qB,aAAa3K,QAAQ/f,KAAK8rB,QAAqB,KAAVrqB,EAAe,KAAOA,GAE3FwqB,GAAcjsB,KAAK8rB,QACrB9rB,KAAK+rB,iBAAiB/rB,KAAK8rB,SAI/B3B,EAAAjqB,UAAAkG,OAAA,WAAW,QAASpG,KAAK6qB,OAOzBV,EAAAjqB,UAAAuc,KAAA,WAAA,IAAA9U,EAAA3H,KACE,IAAKA,KAAKoG,SAAU,KACZgmB,EAAKpsB,KAAKyqB,KAAK4B,wBAAwBpM,IAC7CjgB,KAAK6qB,MAAQ7qB,KAAKwqB,OAAO8B,gBAAgBF,GAEzCpsB,KAAKusB,mBAAmBvsB,KAAK6qB,MAAM2B,SAASpiB,eAC5CpK,KAAKysB,uBAAuBzsB,KAAK6qB,MAAMS,UACvCtrB,KAAK0sB,+BAA+B1sB,KAAK6qB,MAAMS,UAC/CtrB,KAAK6qB,MAAMS,SAAStpB,WACpBhC,KAAK6qB,MAAMS,SAAS1e,WAAW5M,KAAK0qB,aAAa3K,QAAQ/f,KAAK8rB,SAG9D9rB,KAAK6qB,MAAMS,SAASze,iBAAiB,SAACmP,GACpCrU,EAAKiF,WAAWoP,GAChBrU,EAAKsjB,UAAUjP,GACfrU,EAAKujB,eAGPlrB,KAAK6qB,MAAM8B,kBAAkBC,gBAE7B5sB,KAAK6qB,MAAMS,SAASte,iBAAiBhN,KAAKkG,UAEnB,SAAnBlG,KAAK6sB,WACP/H,OAAO9gB,SAASmd,cAAcnhB,KAAK6sB,WAAWC,YAAY9sB,KAAK6qB,MAAM2B,SAASpiB,eAIhF8Z,GAAalkB,KAAK6qB,MAAM2B,SAASpiB,cAAepK,KAAKgrB,QAAQ,GAC7DhrB,KAAK6qB,MAAMS,SAASlP,QAEpBuG,GACI3iB,KAAKiQ,QAASjQ,KAAK2qB,UAAW3qB,KAAK8qB,UAAW,WAAM,OAAAnjB,EAAKkC,SAAS7J,KAAKgrB,OAAQ,GAC/E,CAAChrB,KAAKuqB,OAAOngB,cAAepK,KAAK6qB,MAAM2B,SAASpiB,kBAOxD+f,EAAAjqB,UAAA2J,MAAA,WACM7J,KAAKoG,WACPpG,KAAKwqB,OAAOvB,OAAOjpB,KAAKwqB,OAAO/mB,QAAQzD,KAAK6qB,MAAMkC,WAClD/sB,KAAK6qB,MAAQ,KACb7qB,KAAKgrB,OAAO3iB,OACZrI,KAAK4qB,gBAAgBzd,iBAOzBgd,EAAAjqB,UAAA8H,OAAA,WACMhI,KAAKoG,SACPpG,KAAK6J,QAEL7J,KAAKyc,QAYT0N,EAAAjqB,UAAAkhB,WAAA,SAAWnN,GACLjU,KAAKoG,UACPpG,KAAK6qB,MAAMS,SAASlK,WAAWnN,IAInCkW,EAAAjqB,UAAA8sB,OAAA,WAAWhtB,KAAKkrB,cAEhBf,EAAAjqB,UAAA6J,YAAA,SAAYC,IACNA,EAAiB,SAAKA,EAAiB,UACzChK,KAAKmrB,oBAIThB,EAAAjqB,UAAAgP,YAAA,WACElP,KAAK6J,QACL7J,KAAKorB,kBAAkB6B,eAGjB9C,EAAAjqB,UAAAusB,uBAAR,SAA+BS,GAA/B,IAAAvlB,EAAA3H,KACE,CAAC,cAAe,kBAAmB,gBAAiB,iBAAkB,iBAAkB,eAAgB,UACvG,UAAW,aAAc,cAAe,iBAAkB,eAAgB,mBACtE6H,QAAQ,SAACslB,GACJxlB,EAAKwlB,KAAgB5qB,YACvB2qB,EAAmBC,GAAcxlB,EAAKwlB,MAG9CD,EAAmBhQ,UAAYld,KAAKkd,WAAald,KAAK8rB,QAGhD3B,EAAAjqB,UAAAqsB,mBAAR,SAA2BniB,GACzBpK,KAAK2J,UAAUW,SAASF,EAAe,iBACvCpK,KAAK2J,UAAUW,SAASF,EAAe,QAEhB,SAAnBpK,KAAK6sB,WACP7sB,KAAK2J,UAAUW,SAASF,EAAe,gBAInC+f,EAAAjqB,UAAAwsB,+BAAR,SAAuCQ,GAAvC,IAAAvlB,EAAA3H,KACEktB,EAAmB5M,SAAStP,UAAU,SAAAoc,GAAiB,OAAAzlB,EAAK2Y,SAASjY,KAAK+kB,KAC1EF,EAAmB5b,OAAON,UAAU,SAAAiD,GAClCtM,EAAKojB,WAAW1iB,KAAK4L,IACE,IAAnBtM,EAAKmjB,WAAyC,WAAnBnjB,EAAKmjB,WAClCnjB,EAAKkC,WAKHsgB,EAAAjqB,UAAA6rB,iBAAR,SAAyB9P,OACjBxa,EAAQzB,KAAKsqB,iBAAiBJ,OAAOjO,GAC3Cjc,KAAKmsB,YAAc1qB,EACnBzB,KAAK2J,UAAUqF,YAAYhP,KAAKuqB,OAAOngB,cAAe,QAAS3I,GAC3DzB,KAAKoG,WACPpG,KAAK6qB,MAAMS,SAAS1e,WAAW5M,KAAK0qB,aAAa3K,QAAQ9D,IACzDjc,KAAKkrB,eAIDf,EAAAjqB,UAAAwrB,gBAAR,SAAwBzX,OAChB2I,EAAU3I,EAAO,IAAIL,GAAQK,EAAKJ,KAAMI,EAAKH,MAAOG,EAAKF,KAAO,KACtE,OAAO/T,KAAKqb,UAAUhF,QAAQuG,GAAWA,EAAU,MAG7CuN,EAAAjqB,UAAAmrB,qBAAR,WACE,GAAKrrB,KAAK6qB,MAAV,KAIInE,EASJ,GAPEA,EADiC,iBAAxB1mB,KAAKqtB,eACAvI,OAAO9gB,SAASmd,cAAcnhB,KAAKqtB,gBACxCrtB,KAAKqtB,0BAA0BC,YAC1BttB,KAAKqtB,eAELrtB,KAAKuqB,OAAOngB,cAGxBpK,KAAKqtB,iBAAmB3G,EAC1B,MAAM,IAAIvJ,MAAM,0FAGlBsJ,GAAiBC,EAAa1mB,KAAK6qB,MAAM2B,SAASpiB,cAAepK,KAAK4mB,UAA8B,SAAnB5mB,KAAK6sB,iCAjazFhoB,EAAAA,UAAShD,KAAA,CAAC,CACTK,SAAU,uBACVwG,SAAU,gBACV5D,KAAM,CACJyoB,UAAW,wCACXjgB,WAAY,8CACZE,SAAU,WACVxI,aAAc,YAEhByI,UAAW,CAACuS,GAA+BoK,GAA0BhP,iDA7B/D0O,UA3BN9e,EAAAA,kBAYAwiB,EAAAA,wBAHAziB,EAAAA,iBAZA0iB,EAAAA,gCAQAra,EAAAA,cAmBMgI,UACAnG,UAJA4K,sCAyO0Cta,EAAAA,OAAM1D,KAAA,CAAC6rB,EAAAA,mBAlQvDhgB,EAAAA,wDAgFC9H,EAAAA,2BASAA,EAAAA,+BAUAA,EAAAA,6BAKAA,EAAAA,8BAOAA,EAAAA,8BAOAA,EAAAA,4BASAA,EAAAA,uBAOAA,EAAAA,uBAOAA,EAAAA,0BASAA,EAAAA,2BAWAA,EAAAA,yBAeAA,EAAAA,4BAKAA,EAAAA,+BAKAA,EAAAA,yBAUAA,EAAAA,yBAOAA,EAAAA,8BASAA,EAAAA,0BASAkD,EAAAA,yBAOAA,EAAAA,uBAOAA,EAAAA,yBAEAlD,EAAAA,SAyOHukB,EAnaA,GCpDAwD,GAAA,WA0BE,SAAAA,EAAmB1W,GAAAjX,KAAAiX,KAAAA,EAGrB,OADE0W,EAAAztB,UAAA0tB,QAAA,WAAY,OAAQ5tB,KAAKiZ,WAAajZ,KAAKiU,KAAKH,QAAU9T,KAAKgZ,cAAgBhZ,KAAKkG,+BAxBrFjE,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,yBACVsI,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KAEjC/F,KAAM,CACJ6D,QAAS,YACTklB,qBAAsB,WACtBC,qBAAsB,WACtBC,qBAAsB,YACtBC,kBAAmB,YACnB3iB,iBAAkB,WAEpBlJ,SAAU,0PAfJsX,4CAkBL7T,EAAAA,oBACAA,EAAAA,wBACAA,EAAAA,uBACAA,EAAAA,wBACAA,EAAAA,SAKH+nB,EA7BA,GCAAM,GAAA,WAuCE,SAAAA,EAAmBhX,GAAAjX,KAAAiX,KAAAA,EAFTjX,KAAAsR,OAAS,IAAInK,EAAAA,aAOzB,OAHE8mB,EAAA/tB,UAAAguB,YAAA,SAAYpa,GAAiB9T,KAAKsR,OAAOjJ,KAAK,IAAIuL,GAAQ5T,KAAKiU,KAAKJ,KAAMzR,EAAU0R,GAAQ,KAE5Fma,EAAA/tB,UAAAiuB,WAAA,SAAWta,GAAgB7T,KAAKsR,OAAOjJ,KAAK,IAAIuL,GAAQxR,EAAUyR,GAAO7T,KAAKiU,KAAKH,MAAO,yBAtC3F7R,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,mCACVsI,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KAEjC1I,SAAU,okCAPJsX,oCA6BL7T,EAAAA,wBACAA,EAAAA,sBACAA,EAAAA,qBACAA,EAAAA,sBAEAkD,EAAAA,UAOHmlB,EA5CA,GCKAG,GAAA,SAAAnU,GAAA,SAAAmU,mDA6GA,OA5G+CjZ,EAAAA,EAAAA,GAmB7CiZ,EAAAluB,UAAAkV,eAAA,WAAmB,OAAO,GAE1BgZ,EAAAluB,UAAAmV,UAAA,WAAc,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,KAEzD+Y,EAAAluB,UAAAoV,iBAAA,WAAqB,OAAO,GAE5B8Y,EAAAluB,UAAAqV,QAAA,SAAQtB,EAAeuB,EAAyBC,GAG9C,YAHqB,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAC9CxB,EAAO,IAAIL,GAAQK,EAAKJ,KAAMI,EAAKH,MAAOG,EAAKF,KAEvCyB,GACN,IAAK,IAIH,OAHAvB,EAAOjU,KAAKquB,SAASpa,EAAMA,EAAKJ,KAAO4B,IAClC3B,MAAQ,EACbG,EAAKF,IAAM,EACJE,EACT,IAAK,IAGH,OAFAA,EAAOjU,KAAKsuB,UAAUra,EAAMA,EAAKH,MAAQ2B,IACpC1B,IAAM,EACJE,EACT,IAAK,IACH,OAAOjU,KAAKuuB,QAAQta,EAAMA,EAAKF,IAAM0B,GACvC,QACE,OAAOxB,IAIbma,EAAAluB,UAAAyV,QAAA,SAAQ1B,EAAeuB,EAAyBC,GAAc,YAAvC,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAAqBzV,KAAKuV,QAAQtB,EAAMuB,GAASC,IAEjG2Y,EAAAluB,UAAA0V,WAAA,SAAW3B,OACHF,EAAM/T,KAAKwuB,YAAYva,GAAM4B,SAEnC,OAAe,IAAR9B,EAAY,EAAIA,GAGzBqa,EAAAluB,UAAA4V,cAAA,SAAcC,EAAiBC,GAEN,IAAnBA,IACFA,EAAiB,OAIb/B,EAAO8B,GADU,GAAQC,GAAkB,GAG3CzB,EAASvU,KAAKwuB,YAAYva,GAChCM,EAAOmB,QAAQnB,EAAOG,UAAY,GAAKH,EAAOsB,UAAY,QACpDI,EAAO1B,EAAOM,UACd4Z,EAAUzuB,KAAKwuB,YAAY,IAAI5a,GAAQK,EAAKJ,KAAM,EAAG,IAC3D,OAAOlR,KAAKM,MAAMN,KAAKwT,OAAOF,EAAOwY,EAAQ5Z,WAAa,OAAY,GAAK,GAG7EuZ,EAAAluB,UAAAkW,SAAA,WAAsB,OAAOpW,KAAK0uB,cAAc,IAAI9Z,OAGpDwZ,EAAAluB,UAAAmW,QAAA,SAAQpC,GACN,OAAOA,GAAQpR,EAASoR,EAAKJ,OAAShR,EAASoR,EAAKH,QAAUjR,EAASoR,EAAKF,OACvEjR,MAAM9C,KAAKwuB,YAAYva,GAAMY,YAG5BuZ,EAAAluB,UAAAquB,QAAR,SAAgBta,EAAeF,GAC7BA,GAAOA,MACH4a,EAAQ3uB,KAAK4uB,gBAAgB3a,EAAKH,MAAOG,EAAKJ,MAClD,GAAIE,GAAO,EACT,KAAOA,GAAO,GACZE,EAAOjU,KAAKsuB,UAAUra,EAAMA,EAAKH,MAAQ,GAEzCC,GADA4a,EAAQ3uB,KAAK4uB,gBAAgB3a,EAAKH,MAAOG,EAAKJ,WAG3C,GAAIE,EAAM4a,EACf,KAAO5a,EAAM4a,GACX5a,GAAO4a,EACP1a,EAAOjU,KAAKsuB,UAAUra,EAAMA,EAAKH,MAAQ,GACzC6a,EAAQ3uB,KAAK4uB,gBAAgB3a,EAAKH,MAAOG,EAAKJ,MAIlD,OADAI,EAAKF,IAAMA,EACJE,GAGDma,EAAAluB,UAAAouB,UAAR,SAAkBra,EAAeH,GAI/B,OAHAA,GAASA,EACTG,EAAKJ,KAAOI,EAAKJ,KAAOlR,KAAKM,OAAO6Q,EAAQ,GAAK,IACjDG,EAAKH,MAAQnR,KAAKM,QAAQ6Q,EAAQ,GAAK,GAAK,IAAM,IAAM,EACjDG,GAGDma,EAAAluB,UAAAmuB,SAAR,SAAiBpa,EAAeJ,GAE9B,OADAI,EAAKJ,MAAQA,EACNI,uBA3GVrS,EAAAA,aA6GDwsB,EA7GA,CAC+CnZ,ICQ/C,SAAS4Z,GAAoBC,OACrBjb,EAAOib,EAAMta,cACnB,OAAOX,EAAO,GAAM,GAAKA,EAAO,KAAQ,GAAKA,EAAO,KAAQ,EAoB9D,SAASkb,GAAIC,EAAWzvB,GACtB,OAAOyvB,EAAIzvB,EAAIoD,KAAKM,MAAM+rB,EAAIzvB,OAehC0vB,GAAA,SAAAhV,GAAA,SAAAgV,mDA+EA,OA9E6C9Z,EAAAA,EAAAA,GAK3C8Z,EAAA/uB,UAAAwuB,cAAA,SAAcI,OA1Bajb,EA2BnBqb,EAAQJ,EAAMta,cAAe2a,EAASL,EAAMra,WAAY2a,EAAON,EAAMpa,UAEvE2a,EAAYC,UAAsB,KAAOJ,EAAQ,GAAKvsB,KAAKM,OAAOisB,EAAQ,GAAK,IAC9EvsB,KAAKM,OAAOisB,EAAQ,GAAK,KAAOvsB,KAAKM,OAAOisB,EAAQ,GAAK,KAC1DvsB,KAAKM,OACA,KAAOksB,EAAS,GAAK,KAAO,IAAMA,EAAS,GAAK,EAAI,EAAIN,GAAoBC,IAAU,GAAK,GAAKM,GAGnG/W,GAFNgX,EAAY1sB,KAAKM,MAAMosB,GAAa,IAflB,UAkBZE,EAAQ5sB,KAAKM,OAAO,GAAKoV,EAAO,OAAS,OAC3CmX,EAAS7sB,KAAK8sB,MAAMpX,EAAO,IApCb,MADOxE,EAqC+B0b,GApC3C,GAAW5sB,KAAKM,OAAO,EAAI,GAAK4Q,GAAQ,MAoCa,MAClE2b,EAAS7sB,KAAKD,IAAI8sB,EAAQ,QACpBE,EAAO/sB,KAAK8sB,KAAKpX,EA/C3B,SAA8BkX,EAAeC,GAC3C,OAAO7sB,KAAK8sB,KAAK,KAAOD,GAAwB,KAAbD,EAAQ,GAAW5sB,KAAKM,OAAO,EAAI,GAAKssB,GAAS,IA8CpDI,CAAqBJ,EAAOC,IAAW,EACrE,OAAO,IAAI5b,GAAQ2b,EAAOC,EAAS,EAAGE,IAOxCT,EAAA/uB,UAAAsuB,YAAA,SAAYoB,OACJL,EAAQK,EAAM/b,KACd2b,EAASI,EAAM9b,MAAQ,EAEvBub,EADOO,EAAM7b,IAERpR,KAAK8sB,KAAK,KAAOD,GAAwB,KAAbD,EAAQ,GAAW5sB,KAAKM,OAAO,EAAI,GAAKssB,GAAS,IAlCtE,UAkC4F,EAExGM,EAAMltB,KAAKM,MAAMosB,EAAY,IAAO,GAAKS,EAASD,EArCpC,UAsCdE,EAAaptB,KAAKM,MAAM6sB,EAAS,QAASE,EAAMjB,GAAIe,EAAQ,QAASG,EAAOttB,KAAKM,MAAM+sB,EAAM,OAC7FE,EAAQnB,GAAIiB,EAAK,OAAQG,EAAOxtB,KAAKM,MAAMitB,EAAQ,MAAOE,EAAQrB,GAAImB,EAAO,MAC7EG,EAAS1tB,KAAKM,MAAMmtB,EAAQ,KAC9Bvc,EAAoB,IAAbkc,EAA0B,IAAPE,EAAoB,EAAPE,EAAWE,EACvC,IAATJ,GAAyB,IAAXI,GAClBxc,QAMIyc,EAAUT,GAjDI,UA8CiB,KAAOhc,EAAO,GAAKlR,KAAKM,OAAO4Q,EAAO,GAAK,GAAKlR,KAAKM,OAAO4Q,EAAO,GAAK,KACzGlR,KAAKM,OAAO4Q,EAAO,GAAK,MAOtB0c,EAAUV,EAHJP,UAAsB,KAAOzb,EAAO,GAAKlR,KAAKM,OAAO4Q,EAAO,GAAK,GAAKlR,KAAKM,OAAO4Q,EAAO,GAAK,KACtGlR,KAAKM,OAAO4Q,EAAO,GAAK,KAAOlR,KAAKM,MAAM,IAAM,IAAM4rB,GAAoB,IAAIja,KAAKf,EAAM,EAAG,KAAO,GAAK,GAAK,GAErF,EAAIgb,GAAoB,IAAIja,KAAKf,EAAM,EAAG,IAAM,EAAI,EAE1EC,EAAQnR,KAAKM,OAA6B,IAArBqtB,EAAUC,GAAgB,KAAO,KACtDC,EAAOlB,UAAsB,KAAOzb,EAAO,GAAKlR,KAAKM,OAAO4Q,EAAO,GAAK,GAAKlR,KAAKM,OAAO4Q,EAAO,GAAK,KACvGlR,KAAKM,OAAO4Q,EAAO,GAAK,KACxBlR,KAAKM,OACA,IAAM6Q,EAAQ,KAAO,IAAMA,GAAS,EAAI,EAAI+a,GAAoB,IAAIja,KAAKf,EAAMC,EAAQ,EAAG,KAAO,GAAK,GACvG,GAIR,OAAO,IAAIc,KAAKf,EAAMC,EAAQ,EAFlB+b,EAAMW,EAAO,IAU3BvB,EAAA/uB,UAAA0uB,gBAAA,SAAgB9a,EAAeD,GAC7BA,GAAclR,KAAKM,MAAM6Q,EAAQ,QAE7BnT,EAAS,IADbmT,GAAUA,EAAQ,GAAK,GAAM,GACH,EAI1B,OAHc,KAAVA,IAtHE,GAAK,GAsH2BD,GAtHb,GAAK,IAuH5BlT,IAEKA,uBA7EViB,EAAAA,aA+EDqtB,EA/EA,CAC6Cb,IC1CvCqC,GAAuB,IAAI7b,KAAK,KAAM,GAAI,IAC1C8b,GAAsB,IAAI9b,KAAK,KAAM,GAAI,IAGzC+b,GAAU,MAEVC,GAAe,CAEnB,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,iBAQF,SAAA3W,GAAA,SAAA4W,mDACgD1b,EAAAA,EAAAA,GAK9C0b,EAAA3wB,UAAAwuB,cAAA,SAAcI,OAXKgC,EAAaC,EAC1BC,EAWAtB,EAAO,EACPuB,GAbaH,EAaUhC,EAbGiC,EAaIN,GAZ9BO,EAAOruB,KAAKuuB,IAAIJ,EAAMjc,UAAYkc,EAAMlc,WACvClS,KAAKwT,MAAM6a,EAAOL,KAYvB,KAAI7B,EAAMja,UAAY4b,GAAqB5b,WAAa,GAAKia,EAAMja,UAAY6b,GAAoB7b,WAAa,GAuB9G,OAAOoF,EAAA/Z,UAAMwuB,cAAa9tB,KAAAZ,KAAC8uB,GArB3B,QADIjb,EAAO,KACFrT,EAAI,EAAGA,EAAIowB,GAAajwB,OAAQH,IAAKqT,IAC5C,IAAK,IAAIsd,EAAI,EAAGA,EAAI,GAAIA,IAAK,KACvBC,GAAaR,GAAapwB,GAAG2wB,GAAK,GACtC,GAAIF,GAAYG,EAYd,OAXA1B,EAAOuB,EAAW,GACPG,IACT1B,EAAO,EACPyB,KAEEA,EAAI,KACNA,EAAI,EACJtd,KAIK,IAAID,GADHC,EADCsd,EAE0B,EAAGzB,GAExCuB,GAAsBG,IAU9BP,EAAA3wB,UAAAsuB,YAAA,SAAYoB,OACJL,EAAQK,EAAM/b,KACd2b,EAASI,EAAM9b,MAAQ,EACvB4b,EAAOE,EAAM7b,IACf+a,EAAQ,IAAIla,KAAK6b,IACjBY,EAAU3B,EAAO,EACrB,GAAIH,GAlLY,MAkLYA,GAjLd,KAiLkC,CAC9C,IAAK,IAAI+B,EAAI,EAAGA,EAAI/B,EAnLN,KAmL2B+B,IACvC,IAAK,IAAItwB,EAAI,EAAGA,EAAI,GAAIA,IACtBqwB,IAAYT,GAAaU,GAAGtwB,GAAK,GAGrC,IAASA,EAAI,EAAGA,EAAIwuB,EAAQxuB,IAC1BqwB,IAAYT,GAAarB,EAzLb,MAyLkCvuB,GAAK,GAErD8tB,EAAMpZ,QAAQ+a,GAAqB/b,UAAY2c,QAE/CvC,EAAQ7U,EAAA/Z,UAAMsuB,YAAW5tB,KAAAZ,KAAC4vB,GAE5B,OAAOd,GAOT+B,EAAA3wB,UAAA0uB,gBAAA,SAAgBY,EAAgBD,GAC9B,OAAIA,GAvMY,MAuMYA,GAtMd,MAwMJqB,GADIrB,EAxME,MAyMYC,EAAS,GAAK,GAEnCvV,EAAA/Z,UAAM0uB,gBAAehuB,KAAAZ,KAACwvB,EAAQD,wBArExC3tB,EAAAA,aAAD,CACgDqtB,IC9IhD,SAAgBT,GAAY+C,OAyMJC,EAAeC,EAAgBC,EACjDvwB,EAxMA8S,EAAO0d,IAuMWH,EAxMGD,EAAW1d,KAwMC4d,EAxMKF,EAAWzd,MAwMA4d,EAxMOH,EAAWxd,IA0MhE6d,IADHzwB,EAAI0wB,GAAOL,IACYM,GAAI,EAAG3wB,EAAE4wB,OAAwB,IAAdN,EAAS,GAAUO,GAAIP,EAAQ,IAAMA,EAAS,GAAKC,EAAO,IAvMxG,OADAzd,EAAKge,SAAS,EAAG,GAAI,EAAG,KACjBhe,EAQT,SAAgBya,GAAcwD,GAE5B,OAoJF,SAAwBC,OAG+EC,EACjGC,EAAaC,EAHbR,EAAKH,GAAkBQ,GAAiB3d,cAExC+d,EAAaT,EAAK,IAAK3wB,EAAI0wB,GAAOU,GAAaC,EAAeZ,GAAkBE,EAAI,EAAG3wB,EAAE4wB,OAK7F,IADAO,EAAeH,EAAkBK,IACb,EAAG,CACrB,GAAIF,GAAgB,IAIlB,OAFAD,EAAc,EAAIL,GAAIM,EAAc,IACpCF,EAAYrD,GAAIuD,EAAc,IAAM,EAC7B,IAAI1e,GAAQ2e,EAAYF,EAAaD,GAG5CE,GAAgB,SAIlBC,GAAc,EACdD,GAAgB,IACD,IAAXnxB,EAAEsxB,OACJH,GAAgB,GAMpB,OAHAD,EAAc,EAAIL,GAAIM,EAAc,IACpCF,EAAYrD,GAAIuD,EAAc,IAAM,EAE7B,IAAI1e,GAAQ2e,EAAYF,EAAaD,GAjLrCM,CADGd,GAAkBM,EAAM1d,cAAe0d,EAAMzd,WAAa,EAAGyd,EAAMxd,YAS/E,SAAgBie,GAAe1e,EAAeH,GAI5C,OAHAA,GAASA,EACTG,EAAKJ,KAAOI,EAAKJ,KAAOlR,KAAKM,OAAO6Q,EAAQ,GAAK,IACjDG,EAAKH,MAAQnR,KAAKM,QAAQ6Q,EAAQ,GAAK,GAAK,IAAM,IAAM,EACjDG,EAsBT,SAAS8a,GAAIC,EAAWzvB,GACtB,OAAOyvB,EAAIzvB,EAAIoD,KAAKM,MAAM+rB,EAAIzvB,GAGhC,SAASyyB,GAAIhD,EAAWzvB,GACtB,OAAOoD,KAAKiwB,MAAM5D,EAAIzvB,GAgBxB,SAASsyB,GAAOU,OAcVM,EAZAC,EACA,EAAE,GAAI,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACtGC,EAAeD,EAAOnyB,OACtBuuB,EAAQqD,EAAa,IACvBS,GAAS,GACTC,EAAKH,EAAO,GAEhB,GAAIP,EAAaU,GAAMV,GAAcO,EAAOC,EAAe,GACzD,MAAM,IAAI5V,MAAM,uBAAyBoV,GAK3C,IAAK,IAAI/xB,EAAI,EAAGA,EAAIuyB,EAAcvyB,GAAK,EAAG,KAClC0yB,EAAKJ,EAAOtyB,GAElB,GADAqyB,EAAOK,EAAKD,EACRV,EAAaW,EACf,MAEFF,EAAQA,EAAwB,EAAhBhB,GAAIa,EAAM,IAAUb,GAAIjD,GAAI8D,EAAM,IAAK,GACvDI,EAAKC,MAEHzyB,EAAI8xB,EAAaU,EAIrBD,EAAQA,EAAqB,EAAbhB,GAAIvxB,EAAG,IAAUuxB,GAAIjD,GAAItuB,EAAG,IAAM,EAAG,GAC/B,IAAlBsuB,GAAI8D,EAAM,KAAaA,EAAOpyB,GAAM,IACtCuyB,GAAS,OAOLjB,EAAQ,GAAKiB,GAHLhB,GAAI9C,EAAO,GAAK8C,GAA4B,GAAvBA,GAAI9C,EAAO,KAAO,GAAQ,GAAK,KAM9D2D,EAAOpyB,EAAI,IACbA,EAAIA,EAAIoyB,EAA2B,GAApBb,GAAIa,EAAO,EAAG,SAE3BJ,EAAO1D,GAAIA,GAAItuB,EAAI,EAAG,IAAM,EAAG,GAKnC,OAJc,IAAVgyB,IACFA,EAAO,GAGF,CAACA,KAAMA,EAAMX,GAAI5C,EAAO6C,MAAOA,GAaxC,SAASJ,GAAkBQ,OACrBhB,EAAI,EAAIgB,EAAkB,UAC9BhB,EAAIA,EAA+D,EAA3Da,GAAmD,EAA/CA,GAAI,EAAIG,EAAkB,UAAW,QAAa,GAAS,SACjE3xB,EAA2B,EAAvBwxB,GAAIjD,GAAIoC,EAAG,MAAO,GAAS,IAC/B/B,EAAO4C,GAAIjD,GAAIvuB,EAAG,KAAM,GAAK,EAC7B2uB,EAASJ,GAAIiD,GAAIxxB,EAAG,KAAM,IAAM,EAChC0uB,EAAQ8C,GAAIb,EAAG,MAAQ,OAASa,GAAI,EAAI7C,EAAQ,GAEtD,OAAO,IAAIva,KAAKsa,EAAOC,EAAS,EAAGC,GAUrC,SAASwC,GAAkBE,EAAYqB,EAAYC,OAC7C9zB,EAAI0yB,GAAqC,MAAhCF,EAAKE,GAAImB,EAAK,EAAG,GAAK,QAAgB,GAAKnB,GAAI,IAAMjD,GAAIoE,EAAK,EAAG,IAAM,EAAG,GAAKC,EAAK,SAEjG,OADA9zB,EAAIA,EAAI0yB,GAA6C,EAAzCA,GAAIF,EAAK,OAASE,GAAImB,EAAK,EAAG,GAAI,KAAU,GAAK,IA2D/D,SAASvE,GAAgB9a,EAAeD,GACtC,OAAIC,GAAS,EACJ,GAELA,GAAS,GACJ,GAEiB,IAAtB+d,GAAOhe,GAAM4e,KACR,GAEF,gBC1NT,SAAAY,mDACwCle,EAAAA,EAAAA,GACtCke,EAAAnzB,UAAAkV,eAAA,WAAmB,OAAO,GAE1Bie,EAAAnzB,UAAAmV,UAAA,WAAc,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,KAEzDge,EAAAnzB,UAAAoV,iBAAA,WAAqB,OAAO,GAE5B+d,EAAAnzB,UAAAqV,QAAA,SAAQtB,EAAeuB,EAAyBC,GAG9C,YAHqB,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAC9CxB,EAAO,IAAIL,GAAQK,EAAKJ,KAAMI,EAAKH,MAAOG,EAAKF,KAEvCyB,GACN,IAAK,IAIH,OAHAvB,EDGR,SAA8BA,EAAeqf,GAE3C,OADArf,EAAKJ,MAAQyf,EACNrf,ECLMsf,CAActf,EAAMA,EAAKJ,KAAO4B,IAClC3B,MAAQ,EACbG,EAAKF,IAAM,EACJE,EACT,IAAK,IAGH,OAFAA,EAAO0e,GAAe1e,EAAMA,EAAKH,MAAQ2B,IACpC1B,IAAM,EACJE,EACT,IAAK,IACH,ODMR,SAA6BA,EAAeF,OACtC4a,EAAQC,GAAgB3a,EAAKH,MAAOG,EAAKJ,MAC7C,GAAIE,GAAO,EACT,KAAOA,GAAO,GAGZA,GADA4a,EAAQC,IADR3a,EAAO0e,GAAe1e,EAAMA,EAAKH,MAAQ,IACZA,MAAOG,EAAKJ,WAGtC,GAAIE,EAAM4a,EACf,KAAO5a,EAAM4a,GACX5a,GAAO4a,EAEPA,EAAQC,IADR3a,EAAO0e,GAAe1e,EAAMA,EAAKH,MAAQ,IACZA,MAAOG,EAAKJ,MAI7C,OADAI,EAAKF,IAAMA,EACJE,ECtBMuf,CAAavf,EAAMA,EAAKF,IAAM0B,GACvC,QACE,OAAOxB,IAIbof,EAAAnzB,UAAAyV,QAAA,SAAQ1B,EAAeuB,EAAyBC,GAAc,YAAvC,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAAqBzV,KAAKuV,QAAQtB,EAAMuB,GAASC,IAEjG4d,EAAAnzB,UAAA0V,WAAA,SAAW3B,OACHF,EAAMya,GAAYva,GAAM4B,SAE9B,OAAe,IAAR9B,EAAY,EAAIA,GAGzBsf,EAAAnzB,UAAA4V,cAAA,SAAcC,EAAiBC,GAEN,IAAnBA,IACFA,EAAiB,OAIb/B,EAAO8B,GADU,GAAQC,GAAkB,GAG3CzB,EAASia,GAAYva,GAC3BM,EAAOmB,QAAQnB,EAAOG,UAAY,GAAKH,EAAOsB,UAAY,QACpDI,EAAO1B,EAAOM,UACdqI,EAAYsR,GAAY,IAAI5a,GAAQK,EAAKJ,KAAM,EAAG,IACxD,OAAOlR,KAAKM,MAAMN,KAAKwT,OAAOF,EAAOiH,EAAUrI,WAAa,OAAY,GAAK,GAG/Ewe,EAAAnzB,UAAAkW,SAAA,WAAsB,OAAOsY,GAAc,IAAI9Z,OAE/Cye,EAAAnzB,UAAAmW,QAAA,SAAQpC,GACN,OAAOA,GAAQlR,EAAUkR,EAAKJ,OAAS9Q,EAAUkR,EAAKH,QAAU/Q,EAAUkR,EAAKF,OAC1EjR,MAAM0rB,GAAYva,GAAMY,gCAxDhCjT,EAAAA,cACuCqT,QCLlCwe,GAAiB,KACjBC,GAAgB,GAAKD,GACrBE,GAAyB,GAAKF,GAAiB,IAC/CG,GAAkB,GAAKF,GAAgBC,GACvCE,GAAU,GAAKJ,GAAiB,IAChCK,GAA2B,QAC3BxE,GAAkB,UAExB,SAAST,GAAoBhb,GAC3B,OAAOA,EAAO,GAAM,GAAKA,EAAO,KAAQ,GAAKA,EAAO,KAAQ,EAG9D,SAASkgB,GAAuBlgB,OAC1BmgB,EAAmBrxB,KAAKM,OAAO,IAAM4Q,EAAO,KAAO,IACnDogB,EAA6BD,EAAmBL,GAAyBE,GACzEK,EAA+B,GAAnBF,EAAwBrxB,KAAKM,MAAMgxB,EAA6BP,IAC5ES,EAAYF,EAA6BP,GAEzCxb,EAAYgc,EAAY,EAW5B,OATkB,IAAdhc,GAAiC,IAAdA,GAAiC,IAAdA,IAExCA,IADAgc,EACwB,GAER,IAAdhc,GAAmBic,EAAY,GAAKV,GAAiB,MAAQW,GAAiBvgB,GAChFqgB,GAAa,EACU,IAAdhc,GAAmBic,EAAY,GAAKV,GAAiB,KAAOW,GAAiBvgB,EAAO,IAC7FqgB,IAEKA,EAGT,SAASG,GAAwBvgB,EAAeD,OAC1CwE,EAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAIxD,OAHIwW,GAAoBhb,IACtBwE,EAAK,KAEAA,EAAKvE,EAAQ,GAGtB,SAASwgB,GAAgBzgB,GACvB,OAAOugB,GAAiBvgB,GAAQ,GAAK,GAOvC,SAAS0gB,GAAoB1gB,GAC3B,OAAOkgB,GAAuBlgB,EAAO,GAAKkgB,GAAuBlgB,GAGnE,SAAgBugB,GAAiBvgB,OAC3BtU,GAAY,GAAPsU,EAAY,IAAM,GAC3B,OAAOtU,IAAOA,EAAI,GAAM,EAAI,IAQ9B,SAAgBi1B,GAAqB1gB,EAAeD,OAC9C4gB,EAAaV,GAAuBlgB,EAAO,GAAKkgB,GAAuBlgB,GACvE6gB,GAAYD,GAAc,IAAMA,EAAcA,EAAa,IAAO,IAElEE,EADWP,GAAiBvgB,GACH,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjD,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAO1E,OANI6gB,EAAW,GACbC,EAAY,KAEVD,EAAW,GACbC,EAAY,KAEPA,EAAY7gB,EAAQ,GAG7B,SAAgB8gB,GAAyB3gB,GAEvC,QADI4gB,EAAc,EACTr0B,EAAI,EAAGA,EAAIyT,EAAKH,MAAOtT,IAC9Bq0B,GAAeL,GAAqBh0B,EAAGyT,EAAKJ,MAE9C,OAAOghB,EAAc5gB,EAAKF,IA0E5B,SAAgB2a,GAAcwD,GAY5B,QAXMje,EAAO,IAAIW,KAAKsd,GAChBhD,EAAQjb,EAAKO,cAAe2a,EAASlb,EAAKQ,WAAY2a,EAAOnb,EAAKS,UACpE2a,EAAYC,GAAkB,EAAI,KAAOJ,EAAQ,GAAKvsB,KAAKM,OAAOisB,EAAQ,GAAK,GAC/EvsB,KAAKM,OAAOisB,EAAQ,GAAK,KAAOvsB,KAAKM,OAAOisB,EAAQ,GAAK,KACzDvsB,KAAKM,OAAO,KAAOksB,EAAS,GAAK,KAAO,IAAMA,EAAS,GAAK,EAAI,EAAIN,GAAoBK,IAAU,GAAK,GAAKE,GAE5G0F,GADJzF,EAAY1sB,KAAKM,MAAMosB,EAAY,KACC,OAChC0F,EAAsBpyB,KAAKM,MAAM6xB,EAAoBpB,GAAgBE,IACrErE,EAAQ5sB,KAAKM,OAA6B,GAAtB8xB,EAA2B,KAAO,KAAO,EAC7DC,EAAqBjB,GAAuBxE,GAC5C0F,EAAYH,EAAoBE,EAC7BC,EAAY,GAGjBA,EAAYH,GADZE,EAAqBjB,KADrBxE,IAMF,QAFIC,EAAS,EACTE,EAAOuF,EACJvF,EAAO8E,GAAqBhF,EAAQD,IACzCG,GAAQ8E,GAAqBhF,EAAQD,GACrCC,IAEF,OAAO,IAAI5b,GAAQ2b,EAAOC,EAAQE,GAOpC,SAAgBlB,GAAY0G,GAK1B,QAJM3F,EAAQ2F,EAAWrhB,KACnB2b,EAAS0F,EAAWphB,MACpB4b,EAAOwF,EAAWnhB,IACpBsE,EAAO0b,GAAuBxE,GACzB/uB,EAAI,EAAGA,EAAIgvB,EAAQhvB,IAC1B6X,GAAQmc,GAAqBh0B,EAAG+uB,OAG9B4F,GADJ9c,GAAQqX,GACcoE,GAClBzf,EAAQ8gB,GAAY,EACnB9gB,IACH8gB,GAAYA,GAKd,QAHIjG,EAAQ,KACRC,EAAS,EACTC,EAAO,EACJ+F,EAAW,GACZ9gB,EACE8gB,IAAatG,GAAoBK,GAAS,IAAM,MAClDiG,GAAYtG,GAAoBK,GAAS,IAAM,IAC/CA,KACSiG,GAAYd,GAAwBlF,EAAQD,IACrDiG,GAAYd,GAAwBlF,EAAQD,GAC5CC,MAEAC,GAAQ+F,EACRA,EAAW,GAGTA,IAAatG,GAAoBK,EAAQ,GAAK,IAAM,MACtDiG,GAAYtG,GAAoBK,EAAQ,GAAK,IAAM,IACnDA,MAEIC,EAAS,EACXA,KAEAA,EAAS,GACTD,KAEEiG,GAAYd,GAAwBlF,EAAQD,GAC9CiG,GAAYd,GAAwBlF,EAAQD,IAE5CE,EAAOiF,GAAwBlF,EAAQD,GAASiG,EAAW,EAC3DA,EAAW,IAKnB,OAAO,IAAIvgB,KAAKsa,EAAOC,EAAS,EAAGC,GAGrC,SAAgBgG,GAAeC,GAC7B,IAAKA,EACH,MAAO,GAoBT,QAlBMC,EAAY,CAAC,GAAI,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KACjGC,EAAc,CAClB,IAAU,KAAgB,KAAgB,KAAgB,KAAgB,KAAgB,KAC1F,KAAgB,KAAgB,MAE5BC,EAAc,CAAC,GAAI,GAAI,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KAC7FC,EAAgB,CACpB,GAAI,IAAU,IAAU,IAAU,IAAU,KAAgB,KAAgB,KAAgB,KAC5F,OAEIC,EAAkB,CACtB,GAAI,IAAU,IAAU,KAAgB,KAAgB,IAAU,KAAgB,KAClF,MAAsB,OAGpBC,EAAM,EACNC,EAAS,GACTC,EAAO,EACJR,EAAW,GAAG,KACfr0B,EAAIq0B,EAAW,GACnB,GAAa,IAATQ,EACFF,EAAM30B,OACD,GAAa,IAAT60B,EACC,IAAN70B,EACF40B,EAAOE,QAAQN,EAAYx0B,GAAIs0B,EAAUK,IAEzCC,EAAOE,QAAQP,EAAYI,QAExB,CAAA,GAAa,IAATE,EAEJ,CACK,IAAN70B,GACF40B,EAAOE,QAAQJ,EAAgB10B,GAlBtB,IAkBkC,KAE7C,MALA40B,EAAOE,QAAQL,EAAcz0B,IAO/Bq0B,EAAW1yB,KAAKM,MAAMoyB,EAAW,IACpB,IAATQ,GAA2B,IAAbR,GAChBO,EAAOE,QAAQR,EAAUt0B,IAE3B60B,IAQF,OALsB,KADtBD,EAASA,EAAO9R,KAAK,IAAItgB,MAAM,KACpB7C,OACTi1B,EAAOp0B,KA9BM,KA+BJo0B,EAAOj1B,OAAS,GACzBi1B,EAAOte,OAAOse,EAAOj1B,OAAS,EAAG,EAhCC,KAkC7Bi1B,EAAO9R,KAAK,KCpRrB,SAAA7J,GAAA,SAAA8b,mDACuC5gB,EAAAA,EAAAA,GACrC4gB,EAAA71B,UAAAkV,eAAA,WAAmB,OAAO,GAE1B2gB,EAAA71B,UAAAmV,UAAA,SAAUxB,GACR,OAAIA,GAAQugB,GAAiBvgB,GACpB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAExC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,KAI/CkiB,EAAA71B,UAAAoV,iBAAA,WAAqB,OAAO,GAE5BygB,EAAA71B,UAAAmW,QAAA,SAAQpC,OACF1U,EAAI0U,GAAQpR,EAASoR,EAAKJ,OAAShR,EAASoR,EAAKH,QAAUjR,EAASoR,EAAKF,KAG7E,OADAxU,GADAA,EAAIA,GAAK0U,EAAKH,MAAQ,GAAKG,EAAKH,QAAUsgB,GAAiBngB,EAAKJ,MAAQ,GAAK,MACpEI,EAAKF,IAAM,GAAKE,EAAKF,KAAOygB,GAAqBvgB,EAAKH,MAAOG,EAAKJ,SAC9D/Q,MAAM0rB,GAAYva,GAAMY,YAGvCkhB,EAAA71B,UAAAqV,QAAA,SAAQtB,EAAeuB,EAAyBC,GAG9C,YAHqB,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAC9CxB,EAAO,IAAIL,GAAQK,EAAKJ,KAAMI,EAAKH,MAAOG,EAAKF,KAEvCyB,GACN,IAAK,IAIH,OAHAvB,EAAKJ,MAAQ4B,EACbxB,EAAKH,MAAQ,EACbG,EAAKF,IAAM,EACJE,EACT,IAAK,IAGH,OAFAA,EDwCR,SAA+BA,EAAekV,OACxC9U,EAAQ8U,GAAO,EAInB,IAHK9U,IACH8U,GAAOA,GAEFA,EAAM,GACP9U,EACE8U,EAAMmL,GAAgBrgB,EAAKJ,MAAQI,EAAKH,OAC1CqV,GAAOmL,GAAgBrgB,EAAKJ,MAAQI,EAAKH,MAAQ,EACjDG,EAAKJ,OACLI,EAAKH,MAAQ,IAEbG,EAAKH,OAASqV,EACdA,EAAM,GAGJA,GAAOlV,EAAKH,OACdG,EAAKJ,OACLsV,GAAOlV,EAAKH,MACZG,EAAKH,MAAQwgB,GAAgBrgB,EAAKJ,QAElCI,EAAKH,OAASqV,EACdA,EAAM,GAIZ,OAAOlV,EClEM+hB,CAAe/hB,EAAMwB,IACvB1B,IAAM,EACJE,EACT,IAAK,IACH,ODiER,SAA6BA,EAAekV,OACtC9U,EAAQ8U,GAAO,EAInB,IAHK9U,IACH8U,GAAOA,GAEFA,EAAM,GACP9U,EACE8U,EAAMoL,GAAoBtgB,EAAKJ,MAAQ+gB,GAAyB3gB,IAClEkV,GAAOoL,GAAoBtgB,EAAKJ,MAAQ+gB,GAAyB3gB,GAAQ,EACzEA,EAAKJ,OACLI,EAAKH,MAAQ,EACbG,EAAKF,IAAM,GACFoV,EAAMqL,GAAqBvgB,EAAKH,MAAOG,EAAKJ,MAAQI,EAAKF,KAClEoV,GAAOqL,GAAqBvgB,EAAKH,MAAOG,EAAKJ,MAAQI,EAAKF,IAAM,EAChEE,EAAKH,QACLG,EAAKF,IAAM,IAEXE,EAAKF,KAAOoV,EACZA,EAAM,GAGJA,GAAOlV,EAAKF,KACdoV,GAAOlV,EAAKF,IACZE,EAAKH,QACc,IAAfG,EAAKH,QACPG,EAAKJ,OACLI,EAAKH,MAAQwgB,GAAgBrgB,EAAKJ,OAEpCI,EAAKF,IAAMygB,GAAqBvgB,EAAKH,MAAOG,EAAKJ,QAEjDI,EAAKF,KAAOoV,EACZA,EAAM,GAIZ,OAAOlV,ECpGMgiB,CAAahiB,EAAMwB,GAC5B,QACE,OAAOxB,IAIb8hB,EAAA71B,UAAAyV,QAAA,SAAQ1B,EAAeuB,EAAyBC,GAAc,YAAvC,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAAqBzV,KAAKuV,QAAQtB,EAAMuB,GAASC,IAEjGsgB,EAAA71B,UAAA0V,WAAA,SAAW3B,OACHF,EAAMya,GAAYva,GAAM4B,SAE9B,OAAe,IAAR9B,EAAY,EAAIA,GAGzBgiB,EAAA71B,UAAA4V,cAAA,SAAcC,EAAiBC,OACvB/B,EAAO8B,EAAKA,EAAKpV,OAAS,GAChC,OAAOgC,KAAK8sB,KAAKmF,GAAyB3gB,GAAQ,IAGpD8hB,EAAA71B,UAAAkW,SAAA,WAAsB,OAAOsY,GAAc,IAAI9Z,OAK/CmhB,EAAA71B,UAAAsuB,YAAA,SAAYva,GAA0B,OAAOK,GAAWka,GAAYva,KAKpE8hB,EAAA71B,UAAAwuB,cAAA,SAAcza,GAA0B,OAAOya,GAAc/Z,GAASV,yBAhEvErS,EAAAA,aAAD,CACuCqT,IADvC,ICXMihB,GAAW,CAAC,MAAO,QAAS,QAAS,QAAS,OAAQ,MAAO,SAC7DC,GAAS,CAAC,OAAQ,OAAQ,OAAQ,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,KAAM,QAC7FC,GACF,CAAC,OAAQ,OAAQ,OAAQ,MAAO,MAAO,SAAU,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,KAAM,QCTrGC,IDcA,SAAApc,GAAA,SAAAqc,mDAC6CnhB,EAAAA,EAAAA,GAC3CmhB,EAAAp2B,UAAA+a,kBAAA,SAAkBnH,EAAeD,GAAyB,OAAO7T,KAAKkb,iBAAiBpH,EAAOD,IAE9FyiB,EAAAp2B,UAAAgb,iBAAA,SAAiBpH,EAAeD,GAC9B,OAAOugB,GAAiBvgB,GAAQuiB,GAAYtiB,EAAQ,GAAKqiB,GAAOriB,EAAQ,IAG1EwiB,EAAAp2B,UAAA6a,oBAAA,SAAoBC,GAA2B,OAAOkb,GAASlb,EAAU,IAEzEsb,EAAAp2B,UAAAuY,gBAAA,SAAgBxE,GACd,OAAUmhB,GAAenhB,EAAKF,KAAI,IAAI/T,KAAKkb,iBAAiBjH,EAAKH,MAAOG,EAAKJ,MAAK,IAAIuhB,GAAenhB,EAAKJ,OAG5GyiB,EAAAp2B,UAAAwZ,eAAA,SAAezF,GAA+B,OAAOmhB,GAAenhB,EAAKF,MAEzEuiB,EAAAp2B,UAAAyZ,gBAAA,SAAgBC,GAA8B,OAAOwb,GAAexb,IAEpE0c,EAAAp2B,UAAA2Z,gBAAA,SAAgBhG,GAAwB,OAAOuhB,GAAevhB,wBAlB/DjS,EAAAA,aAAD,CAC6C6X,IEN7C,SAAAQ,GAAA,SAAAsc,mDAC6CphB,EAAAA,EAAAA,GACjCohB,EAAAr2B,UAAAs2B,gBAAV,SAA0BviB,GACxB,MAAO,CAACJ,KAAMI,EAAKwiB,iBAAkB3iB,MAAOG,EAAKyiB,cAAgB,EAAG3iB,IAAKE,EAAK0iB,eAGtEJ,EAAAr2B,UAAA02B,cAAV,SAAwB3iB,OAChBM,EAAS,IAAIK,KAAKA,KAAKiiB,IAAI5iB,EAAKJ,KAAMI,EAAKH,MAAQ,EAAGG,EAAKF,MAGjE,OADAQ,EAAOuiB,eAAe7iB,EAAKJ,MACpBU,uBAVV3S,EAAAA,aAAD,CCAA,SAAAqY,GAAA,SAAA8c,mDA2BA,OA1B0C5hB,EAAAA,EAAAA,GAIxC4hB,EAAA72B,UAAA4f,UAAA,SAAU7L,GACR,OAAQA,aAAgBW,OAAS9R,MAAMmR,EAAKY,WAAc7U,KAAKw2B,gBAAgBviB,GAAQ,MAMzF8iB,EAAA72B,UAAA6f,QAAA,SAAQ9L,GACN,OAAOA,GAAQlR,EAAUkR,EAAKJ,OAAS9Q,EAAUkR,EAAKH,QAAU/Q,EAAUkR,EAAKF,KAAO/T,KAAK42B,cAAc3iB,GACnB,MAG9E8iB,EAAA72B,UAAAs2B,gBAAV,SAA0BviB,GACxB,MAAO,CAACJ,KAAMI,EAAKO,cAAeV,MAAOG,EAAKQ,WAAa,EAAGV,IAAKE,EAAKS,YAGhEqiB,EAAA72B,UAAA02B,cAAV,SAAwB3iB,OAChBM,EAAS,IAAIK,KAAKX,EAAKJ,KAAMI,EAAKH,MAAQ,EAAGG,EAAKF,IAAK,IAG7D,OADAQ,EAAOO,YAAYb,EAAKJ,MACjBU,uBAzBV3S,EAAAA,aA2BDm1B,EA3BA,CAC0ClX,KFV1C,WA+BA,SAAAwW,KAiBA,OADSA,EAAAptB,QAAP,WAAwC,MAAO,CAACC,SAAUmtB,wBAhB3DltB,EAAAA,SAAQtH,KAAA,CAAC,CACRuH,aAAc,CACZ6W,GAAeiC,GAAwBE,GAAyB6L,GAA+BN,GAC/FxD,IAEF9gB,QAAS,CAAC4W,GAAekK,IACzB7gB,QAAS,CAACC,EAAAA,aAAcytB,EAAAA,aACxB9rB,gBAAiB,CAAC+U,QAUpBoW,EAhDA,IGSAY,GAAA,WAAA,SAAAA,IAEEj3B,KAAA8qB,WAA4C,EAC5C9qB,KAAA4mB,UAA4B,CAAC,cAAe,eAAgB,WAAY,wCAHzEhlB,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,gHAAzB,iBCmBA,SAAAo1B,KAEA,2BAFCryB,EAAAA,UAAShD,KAAA,CAAC,CAACK,SAAU,cAEtBg1B,KAQAC,GAAA,WAWE,SAAAA,EAAmBC,GAAAp3B,KAAAo3B,WAAAA,EATXp3B,KAAAiO,WAAY,EAUtB,OAREzO,OAAAoF,eACIuyB,EAAAj3B,UAAA,WAAQ,KAIZ,WAA0B,OAAOF,KAAKiO,eALtC,SACaxM,GACXzB,KAAKiO,UAA2B,KAAf,IAA+B,IAAVxM,uDANzCoD,EAAAA,UAAShD,KAAA,CAAC,CAACK,SAAU,oBAAqB4C,KAAM,CAAC6D,QAAS,gBAAiB2C,mBAAoB,yDAjC9FN,EAAAA,gDAqCCpF,EAAAA,SAQHuxB,EAZA,GAiBAE,GAAA,WAoBE,SAAAA,EAA0DC,GAAAt3B,KAAAs3B,SAAAA,EAL1Dt3B,KAAA4mB,UAAuB,SACvB5mB,KAAAoG,QAAS,EAKX,2BArBCvB,EAAAA,UAAShD,KAAA,CAAC,CACTK,SAAU,oBACV4C,KAAM,CACJyyB,wBAAyB,OACzB7jB,eAAgB,oBAChB8jB,qBAAsB,YACtBC,oBAAqB,6BACrBC,sBAAuB,6BACvBC,iBAAkB,6BAClBC,gBAAiB,6BACjBC,kBAAmB,6BACnBC,kBAAmB,2EAS+CC,GAAWzyB,WAAA,CAAA,CAAAP,KAAlEQ,EAAAA,OAAM1D,KAAA,CAAC2D,EAAAA,WAAW,WAAM,OAAAuyB,8CAFpClxB,EAAAA,gBAAehF,KAAA,CAACs1B,OAGnBE,EArBA,GAgCAW,GAAA,WAOE,SAAAA,EACkDV,EACtCnX,GADsCngB,KAAAs3B,SAAAA,EACtCt3B,KAAAmgB,YAAAA,EACVngB,KAAKi4B,SAAW9X,EAAY/V,cAIhC,OADE4tB,EAAA93B,UAAAg4B,iBAAA,WAAqB,OAAOl4B,KAAKmgB,YAAY/V,mCAb9CvF,EAAAA,UAAShD,KAAA,CAAC,CACTK,SAAU,sBACV4C,KAAM,CAAC6D,QAAS,kBAAmBwvB,gBAAiB,OAAQjzB,uBAAwB,kEAMxB6yB,GAAWzyB,WAAA,CAAA,CAAAP,KAAlEQ,EAAAA,OAAM1D,KAAA,CAAC2D,EAAAA,WAAW,WAAM,OAAAuyB,eA1F7B/sB,EAAAA,cAgGFgtB,EAdA,GAqBAI,GAAA,SAAAne,GAeE,SAAAme,EAAmDd,EAAuBF,UACxEnd,EAAArZ,KAAAZ,KAAMs3B,EAAUF,IAAWp3B,KAE/B,OAJuCmV,EAAAA,EAAAA,uBAdtCtQ,EAAAA,UAAShD,KAAA,CAAC,CACTK,SAAU,sBACV4C,KAAM,CACJ6D,QAAS,kBACTwvB,gBAAiB,OACjBjzB,uBAAwB,oBACxBE,UAAW,oBACXqyB,oBAAqB,6BACrBC,sBAAuB,6BACvBC,iBAAkB,6BAClBC,gBAAiB,8BAEnBnqB,UAAW,CAAC,CAAChC,QAASusB,GAAmBrsB,YAAanG,EAAAA,WAAW,WAAM,OAAA4yB,mDAGVL,GAAWzyB,WAAA,CAAA,CAAAP,KAA3DQ,EAAAA,OAAM1D,KAAA,CAAC2D,EAAAA,WAAW,WAAM,OAAAuyB,eAtHrC/sB,EAAAA,cAyHFotB,EAlBA,CAcuCJ,IASvCD,GAAA,WAiEE,SAAAA,EACYnN,EAAoC7jB,EAAqD4jB,EACzF1a,EAAyBkQ,EAA8CxW,EACnE0uB,GAHhB,IAAA1wB,EAAA3H,KACYA,KAAA4qB,gBAAAA,EAAyF5qB,KAAA2qB,UAAAA,EACzF3qB,KAAAiQ,QAAAA,EAAyBjQ,KAAAmgB,YAAAA,EAA8CngB,KAAA2J,UAAAA,EAjE3E3J,KAAAs4B,SAAW,IAAInoB,EAAAA,QAsBRnQ,KAAAu4B,OAAQ,EAuCbv4B,KAAAw4B,WAAa,IAAIrxB,EAAAA,aAMzBnH,KAAK4mB,UAAY7f,EAAO6f,UACxB5mB,KAAK6sB,UAAY9lB,EAAO8lB,UACxB7sB,KAAK8qB,UAAY/jB,EAAO+jB,UAExB9qB,KAAKy4B,QAAUJ,EAAY,SAAW,UAEtCr4B,KAAKorB,kBAAoBnb,EAAQ8Q,SAAS/P,UAAU,WAAQrJ,EAAK+wB,kBA8NrE,OA3NEX,EAAA73B,UAAA8B,SAAA,WACEhC,KAAK24B,yBACD34B,KAAKu4B,OACPv4B,KAAK44B,qBAITb,EAAA73B,UAAA6J,YAAA,SAAYC,GACNA,EAAQ6iB,WAAa7sB,KAAKu4B,OAC5Bv4B,KAAK64B,gBAAgB74B,KAAK6sB,WAGxB7iB,EAAQ4c,YAAc5c,EAAQ4c,UAAUvV,eAC1CrR,KAAK24B,0BAOTZ,EAAA73B,UAAAkG,OAAA,WAAoB,OAAOpG,KAAKu4B,OAKhCR,EAAA73B,UAAAuc,KAAA,WACOzc,KAAKu4B,QACRv4B,KAAKu4B,OAAQ,EACbv4B,KAAK64B,gBAAgB74B,KAAK6sB,WAC1B7sB,KAAKw4B,WAAWnwB,MAAK,GACrBrI,KAAK44B,sBAIDb,EAAA73B,UAAA04B,kBAAR,WAAA,IAAAjxB,EAAA3H,KACE2iB,GACI3iB,KAAKiQ,QAASjQ,KAAK2qB,UAAW3qB,KAAK8qB,UAAW,WAAM,OAAAnjB,EAAKkC,SAAS7J,KAAKs4B,SACvEt4B,KAAK84B,MAAQ,CAAC94B,KAAK+4B,aAAa3uB,eAAiB,GAAIpK,KAAKg5B,QAAU,CAACh5B,KAAKg5B,QAAQd,oBAAsB,GACxG,qCAMNH,EAAA73B,UAAA2J,MAAA,WACM7J,KAAKu4B,QACPv4B,KAAKu4B,OAAQ,EACbv4B,KAAKi5B,kBACLj5B,KAAKs4B,SAASh3B,OACdtB,KAAKw4B,WAAWnwB,MAAK,GACrBrI,KAAK4qB,gBAAgBzd,iBAOzB4qB,EAAA73B,UAAA8H,OAAA,WACMhI,KAAKoG,SACPpG,KAAK6J,QAEL7J,KAAKyc,QAITsb,EAAA73B,UAAAgP,YAAA,WACElP,KAAKi5B,kBAELj5B,KAAKs4B,SAASh3B,OACdtB,KAAKorB,kBAAkB6B,eAGzB8K,EAAA73B,UAAA2hB,UAAA,SAAU5C,GAAV,IAAAtX,EAAA3H,KAEQk5B,EAAMja,EAAMC,MACZia,EAAen5B,KAAKo5B,mBAEtB/T,GAAY,EACZgU,GAAmB,EACjBC,EAAoBt5B,KAAKu5B,mBAAmBta,GAclD,IAZKqa,GAAqBH,EAAax4B,QACrCw4B,EAAatxB,QAAQ,SAAC2xB,EAAa/e,GAC7B+e,EAAYt1B,SAAS+a,EAAY,UACnCoa,GAAmB,GAEjBG,IAAgB7xB,EAAKgjB,UAAU8O,gBACjCpU,EAAW5K,KAMbye,IAAQ/Z,GAAInB,OAASkb,IAAQ/Z,GAAIrB,OAQrC,GAAIwb,GAAqBD,EAAkB,CAGzC,GAFAr5B,KAAKyc,OAED0c,EAAax4B,OAAQ,CACvB,OAAQu4B,GACN,KAAK/Z,GAAIX,UACP6G,EAAW1iB,KAAKD,IAAI2iB,EAAW,EAAG8T,EAAax4B,OAAS,GACxD,MACF,KAAKwe,GAAIb,QACP,GAAIte,KAAK05B,cAA6B,IAAdrU,EAAiB,CACvCA,EAAW8T,EAAax4B,OAAS,EACjC,MAEF0kB,EAAW1iB,KAAKF,IAAI4iB,EAAW,EAAG,GAClC,MACF,KAAKlG,GAAIf,KACPiH,EAAW,EACX,MACF,KAAKlG,GAAIhB,IACPkH,EAAW8T,EAAax4B,OAAS,EAGrCw4B,EAAa9T,GAAUjJ,QAEzB6C,EAAM3W,uBA/BF+wB,IAAwC,IAAnBr5B,KAAK8qB,WAAyC,WAAnB9qB,KAAK8qB,WACvD9qB,KAAK6J,SAkCHkuB,EAAA73B,UAAAw5B,UAAR,WAA+B,OAAO15B,KAAKmgB,YAAY/V,cAAcqe,UAAUvkB,SAAS,WAEhF6zB,EAAA73B,UAAAq5B,mBAAR,SAA2Bta,GACzB,OAAOjf,KAAKg5B,QAAQd,mBAAmBh0B,SAAS+a,EAAY,SAGtD8Y,EAAA73B,UAAAk5B,iBAAR,WACE,OAAkB,MAAdp5B,KAAK84B,MACA,GAEF94B,KAAK84B,MAAMa,UAAUnxB,OAAO,SAAAga,GAAQ,OAACA,EAAKtc,WAAUuC,IAAI,SAAA+Z,GAAQ,OAAAA,EAAK4U,WAAWhtB,iBAGjF2tB,EAAA73B,UAAAw4B,cAAR,WACM14B,KAAKoG,UAAYpG,KAAK84B,OACxB94B,KAAK24B,uBACgB,YAAjB34B,KAAKy4B,QACDhS,GACIzmB,KAAKg5B,QAAQf,SAAUj4B,KAAK45B,gBAAkB55B,KAAK+4B,aAAa3uB,cAAepK,KAAK4mB,UACjE,SAAnB5mB,KAAK6sB,WACT7sB,KAAK65B,mBAAmB75B,KAAK4mB,aAIjCmR,EAAA73B,UAAA25B,mBAAR,SAA2BjT,GACzB,OAAOjnB,MAAM4oB,QAAQ3B,GAAaA,EAAU,GAAKA,EAAUpjB,MAAM,KAAK,IAGhEu0B,EAAA73B,UAAA+4B,gBAAR,eACQa,EAAW95B,KAAK2J,UACtB,GAAI3J,KAAK+4B,aAAc,KACfgB,EAAkB/5B,KAAKmgB,YAAY/V,cACnC4vB,EAAsBh6B,KAAK+4B,aAAa3uB,cAE9C0vB,EAAShN,YAAYiN,EAAiBC,GACtCF,EAASG,YAAYD,EAAqB,YAC1CF,EAASG,YAAYD,EAAqB,aAExCh6B,KAAK45B,iBACPE,EAASI,YAAYl6B,KAAK2qB,UAAUwP,KAAMn6B,KAAK45B,gBAC/C55B,KAAK45B,eAAiB,OAIlB7B,EAAA73B,UAAA24B,gBAAR,SAAwBhM,GAEtB,QAFsB,IAAAA,IAAAA,EAAA,MACtB7sB,KAAKi5B,kBACa,SAAdpM,EAAsB,KAClBiN,EAAW95B,KAAK2J,UAChBqwB,EAAsBh6B,KAAK+4B,aAAa3uB,cACxCgwB,EAAgBp6B,KAAK45B,eAAiB55B,KAAK45B,gBAAkBE,EAASO,cAAc,OAG1FP,EAASQ,SAASF,EAAe,WAAY,YAC7CN,EAASQ,SAASN,EAAqB,WAAY,UACnDF,EAASQ,SAASF,EAAe,UAAW,QAE5CN,EAAShN,YAAYsN,EAAeJ,GACpCF,EAAShN,YAAY9sB,KAAK2qB,UAAUwP,KAAMC,KAItCrC,EAAA73B,UAAAy4B,uBAAR,SAA+B/R,GAC7B,GAAI5mB,KAAK84B,MAAO,CACTlS,IACHA,EAAY5mB,KAAK65B,mBAAmB75B,KAAK4mB,gBAGrCkT,EAAW95B,KAAK2J,UAChBowB,EAAkB/5B,KAAKmgB,YAAY/V,cAGzC0vB,EAAS3vB,YAAY4vB,EAAiB,UACtCD,EAAS3vB,YAAY4vB,EAAiB,YACtC/5B,KAAK84B,MAAMlS,UAAYA,MAMjB2T,GAA8C,IAA9B3T,EAAUyC,OAAO,QAAiB,SAAW,WACnEyQ,EAASxvB,SAASyvB,EAAiBQ,OAE7BH,EAAgBp6B,KAAK45B,eACvBQ,IACFN,EAAS3vB,YAAYiwB,EAAe,UACpCN,EAAS3vB,YAAYiwB,EAAe,YACpCN,EAASxvB,SAAS8vB,EAAeG,0BArSxC11B,EAAAA,UAAShD,KAAA,CAAC,CAACK,SAAU,gBAAiBwG,SAAU,cAAe5D,KAAM,CAAC4O,eAAgB,yDAlIrFhG,EAAAA,yBAyBMupB,sCA2KsE1xB,EAAAA,OAAM1D,KAAA,CAAC6rB,EAAAA,mBA3LnFta,EAAAA,cALApI,EAAAA,kBAUAD,EAAAA,iBAwL2BmsB,GAAS5xB,WAAA,CAAA,CAAAP,KAA/BW,EAAAA,6CA9DJ80B,EAAAA,aAAY34B,KAAA,CAACw1B,0BACbmD,EAAAA,aAAY34B,KAAA,CAACw1B,GAAiB,CAACoD,KAAMzvB,EAAAA,8BAErCwvB,EAAAA,aAAY34B,KAAA,CAACm2B,uBAUbpyB,EAAAA,qBAKAA,EAAAA,MAAK/D,KAAA,CAAC,2BAeN+D,EAAAA,yBAQAA,EAAAA,uBAOAA,EAAAA,0BASAkD,EAAAA,UA0OHivB,EAzSA,GCtHM2C,GACF,CAAC3C,GAAaC,GAAmBI,GAAmBf,GAAiBF,GAAiBD,IAE1FyD,GAAA,WAAA,SAAAA,KASA,OADSA,EAAA1xB,QAAP,WAAwC,MAAO,CAACC,SAAUyxB,wBAR3DxxB,EAAAA,SAAQtH,KAAA,CAAC,CAACuH,aAAcsxB,GAAyBrxB,QAASqxB,OAS3DC,EATA,GCwEAC,GAAA,WAAA,SAAAA,IAEE56B,KAAA66B,UAA+B,EAC/B76B,KAAAyP,UAAW,6BAHZ7N,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,gHAAzB,GCxFAg5B,GAAA,WAaA,OADE,SAAmBC,EAAqBC,EAA0BC,GAA/Cj7B,KAAA+6B,MAAAA,EAAqB/6B,KAAAg7B,QAAAA,EAA0Bh7B,KAAAi7B,aAAAA,GAZpE,iBAmBE,SAAAC,EACYC,EAAoBC,EAA6BC,EACjD1xB,EAA8B2xB,EAC9BC,GAFAv7B,KAAAm7B,MAAAA,EAAoBn7B,KAAAo7B,UAAAA,EAA6Bp7B,KAAAq7B,kBAAAA,EACjDr7B,KAAA2J,UAAAA,EAA8B3J,KAAAs7B,0BAAAA,EAC9Bt7B,KAAAu7B,gBAAAA,EAqCd,OAnCEL,EAAAh7B,UAAAuc,KAAA,SAAK+e,EAAqC3iB,GAQxC,OAPK7Y,KAAKy7B,aACRz7B,KAAK07B,YAAc17B,KAAK27B,eAAeH,EAAS3iB,GAChD7Y,KAAKy7B,WAAaz7B,KAAKq7B,kBAAkB/O,gBACrCtsB,KAAKs7B,0BAA0BjP,wBAA2BrsB,KAAKm7B,OAAQ,EAAGn7B,KAAKo7B,UAC/Ep7B,KAAK07B,YAAYX,QAGhB/6B,KAAKy7B,YAGdP,EAAAh7B,UAAA2J,MAAA,WACM7J,KAAKy7B,aACPz7B,KAAKq7B,kBAAkBpS,OAAOjpB,KAAKq7B,kBAAkB53B,QAAQzD,KAAKy7B,WAAW1O,WAC7E/sB,KAAKy7B,WAAa,KAEdz7B,KAAK07B,YAAYV,UACnBh7B,KAAKu7B,gBAAgBK,WAAW57B,KAAK07B,YAAYV,SACjDh7B,KAAK07B,YAAYV,QAAQa,UACzB77B,KAAK07B,YAAc,QAKjBR,EAAAh7B,UAAAy7B,eAAR,SAAuBH,EAAoC3iB,GACzD,GAAK2iB,EAEE,CAAA,GAAIA,aAAmBz1B,EAAAA,YAAa,KACnCi1B,EAAUQ,EAAQM,mBAAmBjjB,GAE3C,OADA7Y,KAAKu7B,gBAAgBQ,WAAWf,GACzB,IAAIF,GAAW,CAACE,EAAQgB,WAAYhB,GAE3C,OAAO,IAAIF,GAAW,CAAC,CAAC96B,KAAK2J,UAAUsyB,WAAW,GAAGT,MANrD,OAAO,IAAIV,GAAW,KAS5BI,KCvDMgB,GAAO,aAebC,GAAA,WAEE,SAAAA,EAAsCxR,GAAA3qB,KAAA2qB,UAAAA,SAStCwR,EAAAj8B,UAAAk8B,WAAA,WAAqC,OAAQp8B,KAAKq8B,aAAsBr8B,KAAKs8B,YAAYt8B,KAAKu8B,aAA7BL,IAOzDC,EAAAj8B,UAAAo8B,YAAR,SAAoB9W,OACZ2U,EAAOn6B,KAAK2qB,UAAUwP,KACtBqC,EAAiBrC,EAAK1S,MAAMgV,aAC5BC,EAAgBvV,WAAWrC,OAAOC,iBAAiBoV,GAAM,kBAE/D,OADAA,EAAK1S,MAAM,iBAAsBiV,EAAgBlX,EAAK,KAC/C,WAAM,OAAA2U,EAAK1S,MAAM,iBAAmB+U,IAQrCL,EAAAj8B,UAAAm8B,WAAR,eACQM,EAAO38B,KAAK2qB,UAAUwP,KAAKrU,wBACjC,OAAO6W,EAAK/W,KAAO+W,EAAK9W,MAAQf,OAAOmD,YAQjCkU,EAAAj8B,UAAAq8B,UAAR,eACQK,EAAW58B,KAAK2qB,UAAU0P,cAAc,OAC9CuC,EAASr5B,UAAY,8BAEf42B,EAAOn6B,KAAK2qB,UAAUwP,KAC5BA,EAAKrN,YAAY8P,OACXpX,EAAQoX,EAAS9W,wBAAwBN,MAAQoX,EAAS1U,YAGhE,OAFAiS,EAAKD,YAAY0C,GAEVpX,uBAlDV5jB,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,gFAEVyD,EAAAA,OAAM1D,KAAA,CAAC6rB,EAAAA,0IAFtB,GCnBAmP,GAAA,WAEA,SAAAA,KAQA,2BARC56B,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,qBACVC,SAAU,GACV2C,KACI,CAACg4B,UAAW,0EAA2ErV,MAAS,4DAGnG7hB,EAAAA,SACHi3B,EAVA,iBCaA,SAAAE,KAcA,OAREA,EAAA78B,UAAA2J,MAAA,SAAM+rB,KAONmH,EAAA78B,UAAA88B,QAAA,SAAQC,KACVF,mBAyBE,SAAAG,EACYC,EAAsDzB,EACtD0B,EAA2DC,GAFvE,IAAA11B,EAAA3H,KACYA,KAAAm9B,eAAAA,EAAsDn9B,KAAA07B,YAAAA,EACtD17B,KAAAo9B,iBAAAA,EAA2Dp9B,KAAAq9B,eAAAA,EACrEF,EAAe7R,SAASgS,aAAatsB,UAAU,SAACisB,GAAkBt1B,EAAKq1B,QAAQC,KAE/Ej9B,KAAK41B,OAAS,IAAI2H,QAAQ,SAACC,EAASC,GAClC91B,EAAK+1B,SAAWF,EAChB71B,EAAKg2B,QAAUF,IAEjBz9B,KAAK41B,OAAOgI,KAAK,KAAM,cAiE3B,OArFEp+B,OAAAoF,eAAIs4B,EAAAh9B,UAAA,oBAAiB,KAArB,WACE,GAAIF,KAAK07B,YAAYT,aACnB,OAAOj7B,KAAK07B,YAAYT,aAAa3P,0CA0BzC4R,EAAAh9B,UAAA2J,MAAA,SAAM+rB,GACA51B,KAAKm9B,iBACPn9B,KAAK09B,SAAS9H,GACd51B,KAAK69B,yBAIDX,EAAAh9B,UAAA49B,SAAR,SAAiBb,GACfj9B,KAAK29B,QAAQV,GACbj9B,KAAK69B,wBAQPX,EAAAh9B,UAAA88B,QAAA,SAAQC,GAAR,IAAAt1B,EAAA3H,KACE,GAAIA,KAAKm9B,eACP,GAAKn9B,KAAKq9B,eAEH,KACCL,EAAUh9B,KAAKq9B,iBACjBL,GAAWA,EAAQY,KACrBZ,EAAQY,KACJ,SAAAhI,IACiB,IAAXA,GACFjuB,EAAKm2B,SAASb,IAGlB,eACiB,IAAZD,GACTh9B,KAAK89B,SAASb,QAZhBj9B,KAAK89B,SAASb,IAkBZC,EAAAh9B,UAAA29B,qBAAR,eACQE,EAAiB/9B,KAAKm9B,eAAe3Q,SAASpiB,cAIpD,GAHA2zB,EAAe35B,WAAW81B,YAAY6D,GACtC/9B,KAAKm9B,eAAetB,UAEhB77B,KAAKo9B,iBAAkB,KACnBY,EAAmBh+B,KAAKo9B,iBAAiB5Q,SAASpiB,cACxD4zB,EAAiB55B,WAAW81B,YAAY8D,GACxCh+B,KAAKo9B,iBAAiBvB,UAGpB77B,KAAK07B,aAAe17B,KAAK07B,YAAYV,SACvCh7B,KAAK07B,YAAYV,QAAQa,UAG3B77B,KAAKm9B,eAAiB,KACtBn9B,KAAKo9B,iBAAmB,KACxBp9B,KAAK07B,YAAc,MAEvBwB,SC7HEe,eAAA,EACAC,IAAA,2DCFF,IAAAC,GAAA,WA8CE,SAAAA,EAAsCxT,EAAwBJ,GAAxBvqB,KAAA2qB,UAAAA,EAAwB3qB,KAAAuqB,OAAAA,EARrDvqB,KAAA66B,UAA6B,EAE7B76B,KAAAyP,UAAW,EAIDzP,KAAAs9B,aAAe,IAAIn2B,EAAAA,aA2CxC,OAvCEg3B,EAAAj+B,UAAAk+B,cAAA,SAAc5xB,IACU,IAAlBxM,KAAK66B,UAAqB76B,KAAKuqB,OAAOngB,gBAAkBoC,EAAOE,QACjE1M,KAAKg9B,QAAQqB,GAAoBJ,iBAIrCE,EAAAj+B,UAAAo+B,OAAA,SAAO9xB,GACDxM,KAAKyP,WAAajD,EAAO+xB,kBAC3Bv+B,KAAKg9B,QAAQqB,GAAoBH,MAIrCC,EAAAj+B,UAAA88B,QAAA,SAAQC,GAAgBj9B,KAAKs9B,aAAaj1B,KAAK40B,IAE/CkB,EAAAj+B,UAAA8B,SAAA,WAAahC,KAAKw+B,aAAex+B,KAAK2qB,UAAU8O,eAEhD0E,EAAAj+B,UAAAmhB,gBAAA,WACE,IAAKrhB,KAAKuqB,OAAOngB,cAAclG,SAASF,SAASy1B,eAAgB,KACzDgF,EAAgBz+B,KAAKuqB,OAAOngB,cAAc+W,cAAc,kBACxDud,EAAiB3a,GAA6B/jB,KAAKuqB,OAAOngB,eAAe,IAExDq0B,GAAiBC,GAAkB1+B,KAAKuqB,OAAOngB,eACvDgS,UAInB+hB,EAAAj+B,UAAAgP,YAAA,eACQirB,EAAOn6B,KAAK2qB,UAAUwP,KACtBwE,EAAc3+B,KAAKw+B,cAGrBG,GAAeA,EAAmB,OAAKxE,EAAKj2B,SAASy6B,GACtCA,EAEAxE,GAEJ/d,QACfpc,KAAKw+B,aAAe,0BArEvBv8B,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,mBACV4C,KAAM,CACJg4B,UAAW,qEACXl0B,KAAQ,SACRsQ,SAAY,KACZ0lB,cAAe,iBACfx5B,UAAW,wBACXy5B,oBAAqB,OACrBC,yBAA0B,kBAE5B38B,SAAU,0SAmBGoD,EAAAA,OAAM1D,KAAA,CAAC6rB,EAAAA,mBA1CpB1iB,EAAAA,sDAiCCpF,EAAAA,wBACAA,EAAAA,wBACAA,EAAAA,wBACAA,EAAAA,oBACAA,EAAAA,2BACAA,EAAAA,4BAEAkD,EAAAA,OAAMjH,KAAA,CAAC,cA2CVs8B,EAvFA,GCAAY,GAAA,WA8BE,SAAAA,EACYxD,EAAyCH,EAA+CzQ,EACxFqU,EAA+BC,GAF3C,IAAAt3B,EAAA3H,KACYA,KAAAu7B,gBAAAA,EAAyCv7B,KAAAo7B,UAAAA,EAA+Cp7B,KAAA2qB,UAAAA,EACxF3qB,KAAAg/B,WAAAA,EAA+Bh/B,KAAAi/B,iBAAAA,EATnCj/B,KAAAk/B,4BAA8B,IAAI/uB,EAAAA,QAClCnQ,KAAAm/B,kBAA0C,IAAIC,IAC9Cp/B,KAAAq/B,oBAAsB,CAAC,iBACvBr/B,KAAAs/B,WAA4B,GAC5Bt/B,KAAAu/B,kBAAoB,CAAC,iBAAkB,WAAY,WAAY,WAAY,OAAQ,eACnFv/B,KAAAw/B,aAA+C,GAMrDx/B,KAAKk/B,4BAA4BluB,UAAU,WACzC,GAAIrJ,EAAK63B,aAAa7+B,OAAQ,KACtB8+B,EAAmB93B,EAAK63B,aAAa73B,EAAK63B,aAAa7+B,OAAS,GACtEujB,GAAaub,EAAiBjT,SAASpiB,cAAezC,EAAKu3B,6BAC3Dv3B,EAAK+3B,oBACL/3B,EAAKg4B,eAAeF,EAAiBjT,SAASpiB,yBAKpD20B,EAAA7+B,UAAAuc,KAAA,SAAKmjB,EAAqCC,EAA2BrE,EAAc9e,GAAnF,IAAA/U,EAAA3H,KACQ8/B,EACF58B,EAAUwZ,EAAQmQ,WAAa7sB,KAAK2qB,UAAUxJ,cAAczE,EAAQmQ,WAAa7sB,KAAK2qB,UAAUwP,KAC9FL,EAAW95B,KAAKi/B,iBAAiBc,eAAe,KAAM,MAEtDC,EAA4BhgC,KAAKg/B,WAAW5C,aAC5C6D,EAAkB,WACjBt4B,EAAK23B,WAAW3+B,SACnBm5B,EAAS3vB,YAAYxC,EAAKgjB,UAAUwP,KAAM,cAC1CxyB,EAAK+3B,sBAIT,IAAKI,EACH,MAAM,IAAI3iB,MAAM,mCAAkCT,EAAQmQ,WAAa,QAAM,mCAGzEqT,EAAc,IAAInD,GAClBoD,EAAangC,KAAK27B,eAAeiE,EAAWljB,EAAQ0jB,UAAYP,EAAiBrE,EAAS0E,GAE5FG,GACqB,IAArB3jB,EAAQme,SAAqB76B,KAAKsgC,gBAAgBV,EAAWE,GAAe,KAC5ES,EAA8CvgC,KAAKwgC,uBAAuBZ,EAAWE,EAAaK,GAClGM,EAA2B,IAAIvD,GAAYqD,EAAeJ,EAAYE,EAAiB3jB,EAAQgkB,eAiBnG,OAfA1gC,KAAK2gC,kBAAkBF,GACvBzgC,KAAK4gC,oBAAoBL,GACzBE,EAAY7K,OAAOgI,KAAKoC,EAA2BA,GACnDS,EAAY7K,OAAOgI,KAAKqC,EAAiBA,GACzCC,EAAYr2B,MAAQ,SAAC+rB,GAAkB6K,EAAY52B,MAAM+rB,IACzDsK,EAAYlD,QAAU,SAACC,GAAkBwD,EAAYzD,QAAQC,IAE7Dj9B,KAAK6gC,oBAAoBN,EAAcjV,SAAU5O,GAClB,IAA3B1c,KAAKs/B,WAAW3+B,QAClBm5B,EAASxvB,SAAStK,KAAK2qB,UAAUwP,KAAM,cAGrCkG,GAAmBA,EAAgB/U,UACrCtrB,KAAK8gC,sBAAsBT,EAAgB/U,SAAU5O,GAEhD+jB,GAGT1B,EAAA7+B,UAAA6gC,WAAA,SAAW9D,GAAgBj9B,KAAKs/B,WAAWz3B,QAAQ,SAAA44B,GAAe,OAAAA,EAAYzD,QAAQC,MAEtF8B,EAAA7+B,UAAA8gC,cAAA,WAA2B,OAAOhhC,KAAKs/B,WAAW3+B,OAAS,GAEnDo+B,EAAA7+B,UAAAogC,gBAAR,SAAwBV,EAAqCE,OAEvDO,EADkBT,EAAUvT,wBAAwBwQ,IAClB18B,OAAOH,KAAKo7B,WAGlD,OAFAp7B,KAAKu7B,gBAAgBQ,WAAWsE,EAAgBtT,UAChD+S,EAAYhT,YAAYuT,EAAgB7T,SAASpiB,eAC1Ci2B,GAGDtB,EAAA7+B,UAAAsgC,uBAAR,SAA+BZ,EAAqCE,EAAkBK,OAGhFI,EADgBX,EAAUvT,wBAAwB8R,IACpBh+B,OAAOH,KAAKo7B,UAAW+E,EAAWpF,OAGpE,OAFA/6B,KAAKu7B,gBAAgBQ,WAAWwE,EAAcxT,UAC9C+S,EAAYhT,YAAYyT,EAAc/T,SAASpiB,eACxCm2B,GAGDxB,EAAA7+B,UAAA2gC,oBAAR,SAA4BI,EAAgCvkB,GAC1D1c,KAAKu/B,kBAAkB13B,QAAQ,SAACslB,GAC1BjqB,EAAUwZ,EAAQyQ,MACpB8T,EAAe9T,GAAczQ,EAAQyQ,OAKnC4R,EAAA7+B,UAAA4gC,sBAAR,SAA8BI,EAAoCxkB,GAChE1c,KAAKq/B,oBAAoBx3B,QAAQ,SAACslB,GAC5BjqB,EAAUwZ,EAAQyQ,MACpB+T,EAAiB/T,GAAczQ,EAAQyQ,OAKrC4R,EAAA7+B,UAAAy7B,eAAR,SACIiE,EAAqCC,EAA2BrE,EAChE0E,GACF,OAAK1E,EAEMA,aAAmBz1B,EAAAA,YACrB/F,KAAKmhC,uBAAuB3F,EAAS0E,GACnCt9B,EAAS44B,GACXx7B,KAAKohC,kBAAkB5F,GAEvBx7B,KAAKqhC,qBAAqBzB,EAAWC,EAAiBrE,EAAS0E,GAN/D,IAAIpF,GAAW,KAUlBiE,EAAA7+B,UAAAihC,uBAAR,SAA+B3F,EAA2B0E,OAClDrnB,EAAU,CACdC,UAAWonB,EACXr2B,eAAM+rB,GAAUsK,EAAYr2B,MAAM+rB,IAClCoH,iBAAQC,GAAUiD,EAAYlD,QAAQC,KAElCjC,EAAUQ,EAAQM,mBAAmBjjB,GAE3C,OADA7Y,KAAKu7B,gBAAgBQ,WAAWf,GACzB,IAAIF,GAAW,CAACE,EAAQgB,WAAYhB,IAGrC+D,EAAA7+B,UAAAkhC,kBAAR,SAA0B5F,OAClB8F,EAAYthC,KAAK2qB,UAAU4W,eAAe,GAAG/F,GACnD,OAAO,IAAIV,GAAW,CAAC,CAACwG,MAGlBvC,EAAA7+B,UAAAmhC,qBAAR,SACIzB,EAAqCC,EAA2BrE,EAChE3iB,OACI2oB,EAAqB5B,EAAUvT,wBAAwBmP,GACvDiG,EACFC,EAAAA,SAASvhC,OAAO,CAACsN,UAAW,CAAC,CAAChC,QAASsxB,GAAgB4E,SAAU9oB,IAAW+oB,OAAQ/B,IAClF5E,EAAeuG,EAAmBrhC,OAAOshC,GAE/C,OADAzhC,KAAKu7B,gBAAgBQ,WAAWd,EAAalO,UACtC,IAAI+N,GAAW,CAAC,CAACG,EAAazO,SAASpiB,gBAAiB6wB,EAAalO,SAAUkO,IAGhF8D,EAAA7+B,UAAAy/B,eAAR,SAAuBr8B,GAAvB,IAAAqE,EAAA3H,KACQ4hC,EAASt+B,EAAQa,cACnBy9B,GAAUt+B,IAAYtD,KAAK2qB,UAAUwP,OACvCx6B,MAAMqU,KAAK4tB,EAAOC,UAAUh6B,QAAQ,SAAAi6B,GAC9BA,IAAYx+B,GAAgC,WAArBw+B,EAAQC,WACjCp6B,EAAKw3B,kBAAkB6C,IAAIF,EAASA,EAAQG,aAAa,gBACzDH,EAAQI,aAAa,cAAe,WAIxCliC,KAAK2/B,eAAeiC,KAIhB7C,EAAA7+B,UAAAw/B,kBAAR,WACE1/B,KAAKm/B,kBAAkBt3B,QAAQ,SAACpG,EAAO6B,GACjC7B,EACF6B,EAAQ4+B,aAAa,cAAezgC,GAEpC6B,EAAQ6+B,gBAAgB,iBAG5BniC,KAAKm/B,kBAAkBiD,SAGjBrD,EAAA7+B,UAAAygC,kBAAR,SAA0BF,GAA1B,IAAA94B,EAAA3H,KACQqiC,EAAqB,eACnB5nB,EAAQ9S,EAAK23B,WAAW77B,QAAQg9B,GAClChmB,GAAS,GACX9S,EAAK23B,WAAWhoB,OAAOmD,EAAO,IAGlCza,KAAKs/B,WAAW99B,KAAKi/B,GACrBA,EAAY7K,OAAOgI,KAAKyE,EAAoBA,IAGtCtD,EAAA7+B,UAAA0gC,oBAAR,SAA4B0B,GAA5B,IAAA36B,EAAA3H,KACEA,KAAKw/B,aAAah+B,KAAK8gC,GACvBtiC,KAAKk/B,4BAA4B59B,OAEjCghC,EAAcC,UAAU,eAChB9nB,EAAQ9S,EAAK63B,aAAa/7B,QAAQ6+B,GACpC7nB,GAAS,IACX9S,EAAK63B,aAAaloB,OAAOmD,EAAO,GAChC9S,EAAKu3B,4BAA4B59B,+BA5LxCM,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,oDAnBvB0gC,EAAAA,sBAKAd,EAAAA,4CAwB2En8B,EAAAA,OAAM1D,KAAA,CAAC6rB,EAAAA,mBAhB5EyO,UAPNsG,EAAAA,yOARF,GCYAC,GAAA,WAEE,SAAAA,EACYC,EAA8CvH,EAA6BwH,EAC3EC,GADA7iC,KAAA2iC,WAAAA,EAA8C3iC,KAAAo7B,UAAAA,EAA6Bp7B,KAAA4iC,YAAAA,EAC3E5iC,KAAA6iC,QAAAA,SAWZH,EAAAxiC,UAAAuc,KAAA,SAAK+e,EAAc9e,QAAA,IAAAA,IAAAA,EAAA,QACXomB,EAAkBtjC,OAAOa,OAAO,GAAIL,KAAK6iC,QAASnmB,GACxD,OAAO1c,KAAK4iC,YAAYnmB,KAAKzc,KAAK2iC,WAAY3iC,KAAKo7B,UAAWI,EAASsH,IAQzEJ,EAAAxiC,UAAA6gC,WAAA,SAAW9D,GAAgBj9B,KAAK4iC,YAAY7B,WAAW9D,IAOvDyF,EAAAxiC,UAAA8gC,cAAA,WAA2B,OAAOhhC,KAAK4iC,YAAY5B,qCAhCpDp/B,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,oDAZK2rB,EAAAA,gCAAViU,EAAAA,gBAIZ3C,UAFiBnE,gMAUzB,GCZAmI,GAAA,WAWA,SAAAA,KAaA,OADSA,EAAA95B,QAAP,WAAwC,MAAO,CAACC,SAAU65B,wBAZ3D55B,EAAAA,SAAQtH,KAAA,CAAC,CACRuH,aAAc,CAACyzB,GAAkBsB,IACjCjzB,gBAAiB,CAAC2xB,GAAkBsB,IACpC1wB,UAAW,CAACi1B,QAUdK,EAxBA,GCQAC,GAAA,WAAA,SAAAA,IAEEhjC,KAAAkG,UAAW,EACXlG,KAAAijC,eAAgB,EAChBjjC,KAAAkjC,gBAAiB,EACjBljC,KAAAmjC,UAAW,EACXnjC,KAAAojC,QAAU,EACVpjC,KAAAqjC,SAAW,GACXrjC,KAAAsjC,QAAS,6BARV1hC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,gHAAzB,GCkDAyhC,GAAA,WAEE,SAAAA,EAAmBz9B,GAAA9F,KAAA8F,YAAAA,EACrB,2BAHCjB,EAAAA,UAAShD,KAAA,CAAC,CAACK,SAAU,kFAhDpB6D,EAAAA,eAmDFw9B,EAHA,GAUAC,GAAA,WAEE,SAAAA,EAAmB19B,GAAA9F,KAAA8F,YAAAA,EACrB,2BAHCjB,EAAAA,UAAShD,KAAA,CAAC,CAACK,SAAU,+EA1DpB6D,EAAAA,eA6DFy9B,EAHA,GAUAC,GAAA,WAEE,SAAAA,EAAmB39B,GAAA9F,KAAA8F,YAAAA,EACrB,2BAHCjB,EAAAA,UAAShD,KAAA,CAAC,CAACK,SAAU,8EApEpB6D,EAAAA,eAuEF09B,EAHA,GAUAC,GAAA,WAEE,SAAAA,EAAmB59B,GAAA9F,KAAA8F,YAAAA,EACrB,2BAHCjB,EAAAA,UAAShD,KAAA,CAAC,CAACK,SAAU,8EA9EpB6D,EAAAA,eAiFF29B,EAHA,GAUAC,GAAA,WAEE,SAAAA,EAAmB79B,GAAA9F,KAAA8F,YAAAA,EACrB,2BAHCjB,EAAAA,UAAShD,KAAA,CAAC,CAACK,SAAU,gFAxFpB6D,EAAAA,eA2FF49B,EAHA,GAUAC,GAAA,WAEE,SAAAA,EAAmB99B,GAAA9F,KAAA8F,YAAAA,EACrB,2BAHCjB,EAAAA,UAAShD,KAAA,CAAC,CAACK,SAAU,kFAlGpB6D,EAAAA,eAqGF69B,EAHA,GCpFMC,GAAa,CD4FnB,WA6IE,SAAAC,EAAY/8B,GA/EZ/G,KAAA+jC,UAAY,EACZ/jC,KAAAgkC,MAAkB,GAuDThkC,KAAAikC,KAAO,EAcNjkC,KAAAkkC,WAAa,IAAI/8B,EAAAA,cAAqB,GAU9CnH,KAAKkG,SAAWa,EAAOb,SACvBlG,KAAKijC,cAAgBl8B,EAAOk8B,cAC5BjjC,KAAKkjC,eAAiBn8B,EAAOm8B,eAC7BljC,KAAKmjC,SAAWp8B,EAAOo8B,SACvBnjC,KAAKojC,QAAUr8B,EAAOq8B,QACtBpjC,KAAKqjC,SAAWt8B,EAAOs8B,SACvBrjC,KAAKsjC,OAASv8B,EAAOu8B,OACrBtjC,KAAKmkC,KAAOp9B,EAAOo9B,KAwHvB,OArHEL,EAAA5jC,UAAAkkC,YAAA,WAAyB,OAAOpkC,KAAKikC,KAAO,GAE5CH,EAAA5jC,UAAAmkC,QAAA,WAAqB,OAAOrkC,KAAKikC,KAAOjkC,KAAK+jC,WAE7CD,EAAA5jC,UAAA2b,aAAA,WAA0B,OAAQ7b,KAAKqkC,WAAarkC,KAAKkG,UAEzD49B,EAAA5jC,UAAAokC,iBAAA,WAA8B,OAAQtkC,KAAKokC,eAAiBpkC,KAAKkG,UAEjE49B,EAAA5jC,UAAAqkC,WAAA,SAAWC,GAA4BxkC,KAAKykC,aAAaD,IAEzDV,EAAA5jC,UAAA6J,YAAA,SAAYC,GAAgChK,KAAKykC,aAAazkC,KAAKikC,OAEnEH,EAAA5jC,UAAAwkC,WAAA,SAAWF,GAAuB,OAAuB,IAAhBA,GAKjCV,EAAA5jC,UAAAykC,eAAR,SAAuBnnB,EAAeC,GAChCzd,KAAKmjC,WACH3lB,EAAQ,IACNA,EAAQ,GACVxd,KAAKgkC,MAAMlO,SAAS,GAEtB91B,KAAKgkC,MAAMlO,QAAQ,IAEjBrY,EAAMzd,KAAK+jC,YACTtmB,EAAOzd,KAAK+jC,UAAY,GAC1B/jC,KAAKgkC,MAAMxiC,MAAM,GAEnBxB,KAAKgkC,MAAMxiC,KAAKxB,KAAK+jC,cAanBD,EAAA5jC,UAAA0kC,eAAR,eACMpnB,EAAQ,EACRC,EAAMzd,KAAK+jC,UACXc,EAAaliC,KAAKM,MAAMjD,KAAKojC,QAAU,GACvC0B,EAAc9kC,KAAKojC,QAAU,GAAM,EAAIyB,EAAa,EAAIA,EAc5D,OAZI7kC,KAAKikC,MAAQY,EAEfpnB,EAAMzd,KAAKojC,QACFpjC,KAAK+jC,UAAY/jC,KAAKikC,KAAOY,EAEtCrnB,EAAQxd,KAAK+jC,UAAY/jC,KAAKojC,SAG9B5lB,EAAQxd,KAAKikC,KAAOY,EAAa,EACjCpnB,EAAMzd,KAAKikC,KAAOa,GAGb,CAACtnB,EAAOC,IAMTqmB,EAAA5jC,UAAA6kC,iBAAR,eAEMvnB,GADO7a,KAAK8sB,KAAKzvB,KAAKikC,KAAOjkC,KAAKojC,SAAW,GAC9BpjC,KAAKojC,QAGxB,MAAO,CAAC5lB,EAFEA,EAAQxd,KAAKojC,UAKjBU,EAAA5jC,UAAA8kC,gBAAR,SAAwBC,OAChBC,EAAallC,KAAKikC,KACxBjkC,KAAKikC,KAAOzhC,EAAgByiC,EAAWjlC,KAAK+jC,UAAW,GAEnD/jC,KAAKikC,OAASiB,GAAcriC,EAAS7C,KAAKmlC,iBAC5CnlC,KAAKkkC,WAAW77B,KAAKrI,KAAKikC,OAItBH,EAAA5jC,UAAAukC,aAAR,SAAqBW,WACnBplC,KAAK+jC,UAAYphC,KAAK8sB,KAAKzvB,KAAKmlC,eAAiBnlC,KAAKqjC,UAEjDxgC,EAAS7C,KAAK+jC,aACjB/jC,KAAK+jC,UAAY,GAInB/jC,KAAKgkC,MAAMrjC,OAAS,EACpB,IAAK,IAAIH,EAAI,EAAGA,GAAKR,KAAK+jC,UAAWvjC,IACnCR,KAAKgkC,MAAMxiC,KAAKhB,GAOlB,GAHAR,KAAKglC,gBAAgBI,GAGjBplC,KAAKojC,QAAU,GAAKpjC,KAAK+jC,UAAY/jC,KAAKojC,QAAS,KACjD5lB,EAAQ,EACRC,EAAMzd,KAAK+jC,UAGX/jC,KAAKsjC,QACN9lB,GAADkE,EAAA5gB,EAAAd,KAAA4kC,iBAAA,IAAC,GAAOnnB,EAAAiE,EAAA,KAEPlE,GAAD+F,EAAAziB,EAAAd,KAAA+kC,mBAAA,IAAC,GAAOtnB,EAAA8F,EAAA,IAGVvjB,KAAKgkC,MAAQhkC,KAAKgkC,MAAM5gC,MAAMoa,EAAOC,GAGrCzd,KAAK2kC,eAAennB,EAAOC,yBA1QhCxb,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,iBACVsI,gBAAiBC,EAAAA,wBAAwBC,OACzC5F,KAAM,CAAC8D,KAAQ,cACfzG,SAAU,unHA3GJ6gC,2CAwKLxI,EAAAA,aAAY34B,KAAA,CAAC0hC,sBACb/I,EAAAA,aAAY34B,KAAA,CAAC2hC,qBACbhJ,EAAAA,aAAY34B,KAAA,CAAC4hC,qBACbjJ,EAAAA,aAAY34B,KAAA,CAAC6hC,uBACblJ,EAAAA,aAAY34B,KAAA,CAAC8hC,yBACbnJ,EAAAA,aAAY34B,KAAA,CAAC+hC,sBAKbh+B,EAAAA,6BAKAA,EAAAA,8BAKAA,EAAAA,wBAKAA,EAAAA,sBAOAA,EAAAA,8BASAA,EAAAA,uBAKAA,EAAAA,oBAOAA,EAAAA,wBAKAA,EAAAA,0BASAkD,EAAAA,qBAOAlD,EAAAA,SAkIHk+B,EA7QA,GC3FiBP,GAAuBC,GAAoBC,GAAmBC,GAAmBC,GAChGC,IAGFyB,GAAA,WAAA,SAAAA,KASA,OADSA,EAAAp8B,QAAP,WAAwC,MAAO,CAACC,SAAUm8B,wBAR3Dl8B,EAAAA,SAAQtH,KAAA,CAAC,CAACuH,aAAcy6B,GAAYx6B,QAASw6B,GAAYv6B,QAAS,CAACC,EAAAA,kBASpE87B,EATA,GC7BAC,GAAA,WAIE,SAAAA,EAAmB7oB,EAAqB5S,GAArB7J,KAAAyc,KAAAA,EAAqBzc,KAAA6J,MAAAA,EACjCA,IACH7J,KAAK6J,MAAQ4S,GAKnB,OADE6oB,EAAAplC,UAAAqlC,SAAA,WAAa,MAAqB,WAAdvlC,KAAKyc,MAAoC,WAAfzc,KAAK6J,OACrDy7B,EAXA,GAaME,GAAkB,CACtBC,MAAS,CAAC,aAAc,cACxBrpB,MAAS,CAAC,UAAW,iBAiDjBspB,GAAc,SAAIzvB,GAAiB,OAAAA,EAAO,EAAIuN,EAAAA,MAASvN,GAAQ,SAAC+Y,GAAqB,OAAAA,IAiC3F,SAAgB2W,GACZ7L,EAAe1vB,EAAoBw7B,EAAkBC,EAA2BC,EAAQC,EAASC,EACjGC,QADiG,IAAAD,IAAAA,EAAA,QACjG,IAAAC,IAAAA,EAAA,OACIC,EAlFR,SAA8BN,EAAkBO,QAAA,IAAAA,IAAAA,EAAAX,QACxCY,GAAmBR,GAAY,IAAI3b,OAEzC,GAA+B,IAA3Bmc,EAAgBzlC,OAClB,MAAO,OAGHulC,EAAiBE,EAAgB5iC,MAAM,OAAOiF,IAAI,SAAA49B,GAAW,OAAAA,EAAQ7iC,MAAM,OAAMiF,IAAI,SAAC69B,OACtFC,EAAQJ,EAAQG,EAAY,KAAOA,EACvC,OAAO,IAAIhB,GAAQiB,EAAM,GAAIA,EAAM,MAG/BC,EAAiBN,EAAe19B,OAAO,SAAA89B,GAAe,OAAAA,EAAYf,aAExE,GAAIiB,EAAe7lC,OAAS,EAC1B,KAAM,2DAGR,GAA8B,IAA1B6lC,EAAe7lC,QAAgBulC,EAAevlC,OAAS,EACzD,KAAM,0EAGR,OAAOulC,EA4DgBO,CAAcb,GAErC,GAA8B,IAA1BM,EAAevlC,QAAgBulC,EAAe,GAAGX,WACnD,OAAO,iBAGHmB,EA/DR,SAAgC5M,EAAe1vB,EAAoBw7B,EAAqBC,GACtF,OAAO,IAAIc,EAAAA,WAAoB,SAAAC,OACvBC,EAAY,GACZf,EAAS,WAAM,OAAAc,EAAWtlC,MAAK,IAC/BykC,EAAU,WAAM,OAAAa,EAAWtlC,MAAK,IAChCwlC,EAAW,WAAM,OAAAF,EAAWtlC,MAAMukC,MAYxC,OAVAD,EAAS/9B,QAAQ,SAACw+B,GACZA,EAAQ5pB,OAAS4pB,EAAQx8B,MAC3Bg9B,EAAUrlC,KAAKs4B,EAASiN,OAAO38B,EAAei8B,EAAQ5pB,KAAMqqB,IAE5DD,EAAUrlC,KACNs4B,EAASiN,OAAO38B,EAAei8B,EAAQ5pB,KAAMqpB,GAC7ChM,EAASiN,OAAO38B,EAAei8B,EAAQx8B,MAAOk8B,MAI/C,WAAQc,EAAUh/B,QAAQ,SAAAm/B,GAAiB,OAAAA,SA8C/BC,CAAgBnN,EAAU1vB,EAAe87B,EAAgBL,GACpDn1B,KAzC5B,SAA6Bs1B,EAAmBC,EAAoBJ,GAClE,OAAO,SAACqB,OACFC,EAAU,KACRC,EAAiBF,EAAOx2B,KAC1BjI,EAAAA,IAAI,SAAAgU,GAAQ,MAAA,CAAEA,KAAIA,KAAKjU,EAAAA,OAAO,SAAAyW,OACtBooB,EAAgBxB,IACtB,OAAIwB,IAAkBpoB,EAAMxC,MAAU0qB,GAAWA,EAAQ1qB,OAAS4qB,GAI9DF,GAAWA,EAAQ1qB,OAASwC,EAAMxC,OACpC0qB,EAAU,OAEL,IANLA,EAAUloB,GACH,KAOXqoB,EAAAA,SACEC,EAAeH,EAAe12B,KAAKlI,EAAAA,OAAO,SAAAyW,GAAS,OAAAA,EAAMxC,OAAOipB,GAAYM,IAC5EwB,EAAgBJ,EAAe12B,KAAKlI,EAAAA,OAAO,SAAAyW,GAAS,OAACA,EAAMxC,OAAOipB,GAAYO,IACpF,OAAOl1B,EAAAA,MAAMw2B,EAAcC,GACtB92B,KACGlI,EAAAA,OAAO,SAAAyW,GACL,OAAIA,IAAUkoB,IACZA,EAAU,KACHloB,EAAMxC,OAASopB,OAI1Bp9B,EAAAA,IAAI,SAAAwW,GAAS,OAAAA,EAAMxC,SAcEgrB,CAAazB,EAAWC,EAAYJ,IACzC70B,UAAU,SAAAyL,GAAQ,OAACA,EAAOqpB,IAAWC,MAE/D,OAAO,WAAM,OAAAW,EAAazZ,eCrG5B,IAAAya,GAAA,WAAA,SAAAA,IAEE1nC,KAAA8qB,WAA4C,EAC5C9qB,KAAA4mB,UAA4B,OAC5B5mB,KAAA4lC,SAAW,QAEX5lC,KAAA2nC,gBAAiB,EAEjB3nC,KAAAgmC,UAAY,EACZhmC,KAAAimC,WAAa,6BATdrkC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,gHAAzB,GCwBI0C,GAAS,EAEbojC,GAAA,WAAA,SAAAA,KAqBA,OADEA,EAAA1nC,UAAA2nC,gBAAA,WAAoB,OAAO7nC,KAAK8nC,iBAAiB/hC,EAAAA,iCApBlD9D,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,qBACVsI,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjC/F,KAAM,CAACg4B,UAAW,uDAAwDl0B,KAAQ,UAAWm/B,OAAQ,MACrG5lC,SAAU,0iCAUTyD,EAAAA,kBACAA,EAAAA,4BACAA,EAAAA,uBACAA,EAAAA,SAGHgiC,EArBA,GA0BAI,GAAA,WAgHE,SAAAA,EACY7nB,EAA8CxW,EAAsBy2B,EAC5E6H,EAAoDC,EAAoCnhC,EAChFkJ,EAA2C0a,EAAwBC,EACnE2Q,GAJZ,IAAA5zB,EAAA3H,KACYA,KAAAmgB,YAAAA,EAA8CngB,KAAA2J,UAAAA,EAE9C3J,KAAAiQ,QAAAA,EAA2CjQ,KAAA2qB,UAAAA,EAAwB3qB,KAAA4qB,gBAAAA,EACnE5qB,KAAAu7B,gBAAAA,EA1BFv7B,KAAAmoC,MAAQ,IAAIhhC,EAAAA,aAKZnH,KAAAmZ,OAAS,IAAIhS,EAAAA,aAEfnH,KAAAooC,oBAAsB,eAAe5jC,KAoB3CxE,KAAK8qB,UAAY/jB,EAAO+jB,UACxB9qB,KAAK4mB,UAAY7f,EAAO6f,UACxB5mB,KAAK4lC,SAAW7+B,EAAO6+B,SACvB5lC,KAAK6sB,UAAY9lB,EAAO8lB,UACxB7sB,KAAK2nC,eAAiB5gC,EAAO4gC,eAC7B3nC,KAAKqoC,aAAethC,EAAOshC,aAC3BroC,KAAKgmC,UAAYj/B,EAAOi/B,UACxBhmC,KAAKimC,WAAal/B,EAAOk/B,WACzBjmC,KAAKsoC,cAAgB,IAAIpN,GACrB0M,GAAkBxH,EAAU8H,EAAkBv+B,EAAWs+B,EAA0B1M,GAEvFv7B,KAAKorB,kBAAoBnb,EAAQ8Q,SAAS/P,UAAU,WAC9CrJ,EAAK8zB,YACPhV,GACI9e,EAAKwY,YAAY/V,cAAezC,EAAK8zB,WAAWjP,SAASpiB,cAAezC,EAAKif,UAC1D,SAAnBjf,EAAKklB,UAAsB,gBAmGvC,OAjIUmb,EAAA9nC,UAAAqoC,YAAR,WACE,QAAIvoC,KAAK2nC,iBAGJ3nC,KAAKwoC,aAAexoC,KAAKyoC,cAqChCT,EAAA9nC,UAAAuc,KAAA,SAAK5D,GAAL,IAAAlR,EAAA3H,KACOA,KAAKy7B,YAAez7B,KAAKuoC,gBAC5BvoC,KAAKy7B,WAAaz7B,KAAKsoC,cAAc7rB,KAAKzc,KAAKwoC,WAAY3vB,GAC3D7Y,KAAKy7B,WAAWnQ,SAASwc,MAAQ9nC,KAAKyoC,aACtCzoC,KAAKy7B,WAAWnQ,SAASzS,QAAUA,EACnC7Y,KAAKy7B,WAAWnQ,SAAS+c,aAAeroC,KAAKqoC,aAC7CroC,KAAKy7B,WAAWnQ,SAASnlB,GAAKnG,KAAKooC,oBAEnCpoC,KAAK2J,UAAUu4B,aAAaliC,KAAKmgB,YAAY/V,cAAe,mBAAoBpK,KAAKooC,qBAE9D,SAAnBpoC,KAAK6sB,WACP7sB,KAAK2qB,UAAUxJ,cAAcnhB,KAAK6sB,WAAWC,YAAY9sB,KAAKy7B,WAAWjP,SAASpiB,eAMpFpK,KAAKy7B,WAAW9O,kBAAkBC,gBAOlC5sB,KAAKy7B,WAAW9O,kBAAkBxf,eAElCwV,GACI3iB,KAAKiQ,QAASjQ,KAAK2qB,UAAW3qB,KAAK8qB,UAAW,WAAM,OAAAnjB,EAAKkC,SAAS7J,KAAKmZ,OACvE,CAACnZ,KAAKy7B,WAAWjP,SAASpiB,gBAC9BpK,KAAKmoC,MAAM9/B,SASf2/B,EAAA9nC,UAAA2J,MAAA,WACM7J,KAAKy7B,aACPz7B,KAAK2J,UAAUw4B,gBAAgBniC,KAAKmgB,YAAY/V,cAAe,oBAC/DpK,KAAKsoC,cAAcz+B,QACnB7J,KAAKy7B,WAAa,KAClBz7B,KAAKmZ,OAAO9Q,OACZrI,KAAK4qB,gBAAgBzd,iBASzB66B,EAAA9nC,UAAA8H,OAAA,WACMhI,KAAKy7B,WACPz7B,KAAK6J,QAEL7J,KAAKyc,QAOTurB,EAAA9nC,UAAAkG,OAAA,WAAoB,OAA0B,MAAnBpG,KAAKy7B,YAEhCuM,EAAA9nC,UAAA8B,SAAA,WACEhC,KAAK0oC,uBAAyB/C,GAC1B3lC,KAAK2J,UAAW3J,KAAKmgB,YAAY/V,cAAepK,KAAK4lC,SAAU5lC,KAAKoG,OAAOuiC,KAAK3oC,MAAOA,KAAKyc,KAAKksB,KAAK3oC,MACtGA,KAAK6J,MAAM8+B,KAAK3oC,OAAQA,KAAKgmC,WAAYhmC,KAAKimC,aAGpD+B,EAAA9nC,UAAA6J,YAAA,SAAYC,IAELA,EAAoB,YAAKA,EAAsB,cAAKA,EAAwB,iBAAMhK,KAAKuoC,eAC1FvoC,KAAK6J,SAITm+B,EAAA9nC,UAAAgP,YAAA,WACElP,KAAK6J,QAGD7J,KAAK0oC,wBACP1oC,KAAK0oC,yBAEP1oC,KAAKorB,kBAAkB6B,mCArO1BpoB,EAAAA,UAAShD,KAAA,CAAC,CAACK,SAAU,eAAgBwG,SAAU,0DA/C9CsC,EAAAA,kBAFAD,EAAAA,iBADA22B,EAAAA,gBAMAjU,EAAAA,gCADAD,EAAAA,wBAeMka,UAbNt0B,EAAAA,0CA8J8B7N,EAAAA,OAAM1D,KAAA,CAAC6rB,EAAAA,mBA3JrChgB,EAAAA,yBACA80B,EAAAA,qDAoDC58B,EAAAA,0BAOAA,EAAAA,4BAOAA,EAAAA,yBAeAA,EAAAA,wBAQAA,EAAAA,yBAOAA,EAAAA,8BAOAA,EAAAA,4BAOAA,EAAAA,yBAOAA,EAAAA,0BAOAA,EAAAA,qBAKAkD,EAAAA,uBAKAA,EAAAA,UAwIHk/B,EAvOA,GC7DAY,GAAA,WASA,SAAAA,KAcA,OADSA,EAAA3/B,QAAP,WAAwC,MAAO,CAACC,SAAU0/B,wBAb3Dz/B,EAAAA,SAAQtH,KAAA,CAAC,CACRuH,aAAc,CAAC4+B,GAAYJ,IAC3Bv+B,QAAS,CAAC2+B,IACV1+B,QAAS,CAACC,EAAAA,cACV2B,gBAAiB,CAAC08B,QAUpBgB,EAvBA,GCQAC,GAAA,WAAA,SAAAA,IAEE7oC,KAAAyC,IAAM,IACNzC,KAAA8oC,UAAW,EACX9oC,KAAA+oC,SAAU,EAEV/oC,KAAAgpC,WAAY,6BANbpnC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,gHAAzB,GCDAmnC,GAAA,WAyDE,SAAAA,EAAYliC,GATH/G,KAAAyB,MAAQ,EAUfzB,KAAKyC,IAAMsE,EAAOtE,IAClBzC,KAAK8oC,SAAW/hC,EAAO+hC,SACvB9oC,KAAK+oC,QAAUhiC,EAAOgiC,QACtB/oC,KAAK+E,KAAOgC,EAAOhC,KACnB/E,KAAKgpC,UAAYjiC,EAAOiiC,UACxBhpC,KAAKylB,OAAS1e,EAAO0e,OAMzB,OAHEwjB,EAAA/oC,UAAAgpC,SAAA,WAAa,OAAO1mC,EAAgBxC,KAAKyB,MAAOzB,KAAKyC,MAErDwmC,EAAA/oC,UAAAipC,gBAAA,WAAoB,OAAO,IAAMnpC,KAAKkpC,WAAalpC,KAAKyC,yBApEzDR,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,kBACVsI,gBAAiBC,EAAAA,wBAAwBC,OACzCvI,SAAU,0iBARJ0mC,mCAsBLjjC,EAAAA,wBAOAA,EAAAA,uBAKAA,EAAAA,yBAKAA,EAAAA,oBAOAA,EAAAA,qBAOAA,EAAAA,sBAOAA,EAAAA,SAcHqjC,EArEA,GCPAG,GAAA,WAQA,SAAAA,KASA,OADSA,EAAAngC,QAAP,WAAwC,MAAO,CAACC,SAAUkgC,wBAR3DjgC,EAAAA,SAAQtH,KAAA,CAAC,CAACuH,aAAc,CAAC6/B,IAAiB5/B,QAAS,CAAC4/B,IAAiB3/B,QAAS,CAACC,EAAAA,kBAShF6/B,EAjBA,GCQAC,GAAA,WAAA,SAAAA,IAEErpC,KAAAyC,IAAM,GACNzC,KAAAspC,UAAW,EACXtpC,KAAAupC,YAAa,6BAJd3nC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,gHAAzB,GC0BM0nC,GAA4B,CAChC/9B,QAASC,EAAAA,kBACTC,YAAanG,EAAAA,WAAW,WAAM,OAAAikC,KAC9B59B,OAAO,GAMT49B,GAAA,WAuFE,SAAAA,EAAY1iC,EAAiC2iC,GAAA1pC,KAAA0pC,mBAAAA,EAzD7C1pC,KAAA2pC,SAAkC,GAClC3pC,KAAAkG,UAAW,EAqCDlG,KAAAylC,MAAQ,IAAIt+B,EAAAA,aAOZnH,KAAA4pC,MAAQ,IAAIziC,EAAAA,aAOZnH,KAAA6pC,WAAa,IAAI1iC,EAAAA,cAAqB,GAEhDnH,KAAAkM,SAAW,SAACC,KACZnM,KAAAoM,UAAY,aAGVpM,KAAKyC,IAAMsE,EAAOtE,IAClBzC,KAAKspC,SAAWviC,EAAOuiC,SAkG3B,OA/FEG,EAAAvpC,UAAA4pC,cAAA,WAAkB,OAAU9pC,KAAK+pC,SAAQ,WAAW/pC,KAAKyC,KAEzDgnC,EAAAvpC,UAAA8pC,MAAA,SAAMvoC,GACCzB,KAAKspC,UAAatpC,KAAKkG,UAC1BlG,KAAK+c,aAAatb,GAEpBzB,KAAKylC,MAAMp9B,KAAK5G,IAGlBgoC,EAAAvpC,UAAA+pC,WAAA,WAAejqC,KAAKoM,aAEpBq9B,EAAAvpC,UAAAgqC,YAAA,SAAYzoC,GAAiBzB,KAAKmqC,OAAOnqC,KAAKupC,YAAcvpC,KAAKoqC,OAAS3oC,EAAQ,EAAIA,IAEtFgoC,EAAAvpC,UAAAmqC,cAAA,SAAcprB,GAEZ,OAAQA,EAAMC,OACZ,KAAKC,GAAIX,UACT,KAAKW,GAAId,UACPre,KAAKmqC,OAAOnqC,KAAKoqC,KAAO,GACxB,MACF,KAAKjrB,GAAIb,QACT,KAAKa,GAAIZ,WACPve,KAAKmqC,OAAOnqC,KAAKoqC,KAAO,GACxB,MACF,KAAKjrB,GAAIf,KACPpe,KAAKmqC,OAAO,GACZ,MACF,KAAKhrB,GAAIhB,IACPne,KAAKmqC,OAAOnqC,KAAKyC,KACjB,MACF,QACE,OAIJwc,EAAM3W,kBAGRmhC,EAAAvpC,UAAA6J,YAAA,SAAYC,GACNA,EAAc,MAChBhK,KAAKmqC,OAAOnqC,KAAKoqC,OAIrBX,EAAAvpC,UAAA8B,SAAA,WACEhC,KAAK2pC,SAAWhqC,MAAMqU,KAAK,CAACrT,OAAQX,KAAKyC,KAAM,SAAC6nC,EAAGC,GAAM,MAAA,CAAEC,KAAM,EAAG/vB,MAAO8vB,KAC3EvqC,KAAK+c,aAAa/c,KAAKoqC,OAGzBX,EAAAvpC,UAAA2M,iBAAA,SAAiBC,GAAiC9M,KAAKkM,SAAWY,GAElE28B,EAAAvpC,UAAA6M,kBAAA,SAAkBD,GAAuB9M,KAAKoM,UAAYU,GAE1D28B,EAAAvpC,UAAAuqC,MAAA,WACEzqC,KAAK4pC,MAAMvhC,KAAKrI,KAAK+pC,UACrB/pC,KAAK+c,aAAa/c,KAAKoqC,OAGzBX,EAAAvpC,UAAA8M,iBAAA,SAAiBC,GAAuBjN,KAAKkG,SAAW+G,GAExDw8B,EAAAvpC,UAAAiqC,OAAA,SAAO1oC,EAAeipC,QAAA,IAAAA,IAAAA,GAAA,OACdC,EAAUnoC,EAAgBf,EAAOzB,KAAKyC,IAAK,GAC5CzC,KAAKspC,UAAatpC,KAAKkG,UAAYlG,KAAKoqC,OAASO,IACpD3qC,KAAKoqC,KAAOO,EACZ3qC,KAAK6pC,WAAWxhC,KAAKrI,KAAKoqC,OAExBM,IACF1qC,KAAKkM,SAASlM,KAAKoqC,MACnBpqC,KAAKoM,aAEPpM,KAAK+c,aAAa/c,KAAKoqC,OAGzBX,EAAAvpC,UAAA0M,WAAA,SAAWnL,GACTzB,KAAKmqC,OAAO1oC,GAAO,GACnBzB,KAAK0pC,mBAAmBv8B,gBAGlBs8B,EAAAvpC,UAAA0qC,cAAR,SAAsBnwB,OACduW,EAAOhxB,KAAK+pC,SAAWtvB,EAE7B,OAAIuW,GAAQ,EACH,IAELA,EAAO,GAAKA,EAAO,EACd3uB,UAAiB,IAAP2uB,GAAY6Z,QAAQ,GAAI,IAGpC,GAGDpB,EAAAvpC,UAAA6c,aAAR,SAAqB+tB,GAArB,IAAAnjC,EAAA3H,KACEA,KAAK+pC,SAAWe,EAChB9qC,KAAK2pC,SAAS9hC,QAAQ,SAACgR,EAAS4B,GAAU,OAAA5B,EAAQ2xB,KAAO7iC,EAAKijC,cAAcnwB,0BAzL/ExY,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,aACVsI,gBAAiBC,EAAAA,wBAAwBC,OACzC5F,KAAM,CACJ6D,QAAS,gBACTuQ,SAAY,IACZtQ,KAAQ,SACRmiC,gBAAiB,IACjBC,uBAAwB,MACxBC,uBAAwB,WACxBC,wBAAyB,kBACzBC,uBAAwB,yBACxB39B,SAAU,eACV49B,YAAa,wBACbp4B,eAAgB,WAElB7Q,SAAU,ukBAUVsL,UAAW,CAAC+7B,iDAvDNH,UAFN37B,EAAAA,kDAqEC9H,EAAAA,oBAKAA,EAAAA,wBAKAA,EAAAA,0BAKAA,EAAAA,4BAOAA,EAAAA,uCACA40B,EAAAA,aAAY34B,KAAA,CAACkE,EAAAA,4BAOb+C,EAAAA,sBAOAA,EAAAA,2BAOAA,EAAAA,UAyGH2gC,EA3LA,GC3CA4B,GAAA,WAQA,SAAAA,KASA,OADSA,EAAApiC,QAAP,WAAwC,MAAO,CAACC,SAAUmiC,wBAR3DliC,EAAAA,SAAQtH,KAAA,CAAC,CAACuH,aAAc,CAACqgC,IAAYpgC,QAAS,CAACogC,IAAYngC,QAAS,CAACC,EAAAA,kBAStE8hC,EAjBA,GCQAC,GAAA,WAAA,SAAAA,IAEEtrC,KAAAurC,QAA6D,QAC7DvrC,KAAAwrC,YAAyC,aACzCxrC,KAAA+E,KAAyB,kCAJ1BnD,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,gHAAzB,GCKI0C,GAAS,EAObinC,GAAA,WAEE,SAAAA,EAAmB3lC,GAAA9F,KAAA8F,YAAAA,EACrB,2BAHCjB,EAAAA,UAAShD,KAAA,CAAC,CAACK,SAAU,wEAdpB6D,EAAAA,eAiBF0lC,EAHA,GAQAC,GAAA,WAEE,SAAAA,EAAmB5lC,GAAA9F,KAAA8F,YAAAA,EACrB,2BAHCjB,EAAAA,UAAShD,KAAA,CAAC,CAACK,SAAU,0EAtBpB6D,EAAAA,eAyBF2lC,EAHA,GAQAC,GAAA,WAAA,SAAAA,IAOW3rC,KAAAmG,GAAK,WAAW3B,KAYhBxE,KAAAkG,UAAW,EAgBtB,OAREylC,EAAAzrC,UAAAmG,sBAAA,WAKErG,KAAKsG,SAAWtG,KAAKuG,UAAUC,MAC/BxG,KAAK2G,WAAa3G,KAAK4G,YAAYJ,2BAjCtC3B,EAAAA,UAAShD,KAAA,CAAC,CAACK,SAAU,0CAOnB0D,EAAAA,qBAOAA,EAAAA,wBAKAA,EAAAA,yBAKAiB,EAAAA,gBAAehF,KAAA,CAAC4pC,GAAa,CAAC3kC,aAAa,yBAC3CD,EAAAA,gBAAehF,KAAA,CAAC6pC,GAAe,CAAC5kC,aAAa,OAUhD6kC,EAnCA,GC5BMC,GAAwB,CDwF9B,WA8EE,SAAAC,EAAY9kC,GAnCH/G,KAAAiH,eAAgB,EAiCfjH,KAAA8rC,UAAY,IAAI3kC,EAAAA,aAGxBnH,KAAK+E,KAAOgC,EAAOhC,KACnB/E,KAAKurC,QAAUxkC,EAAOwkC,QACtBvrC,KAAKwrC,YAAczkC,EAAOykC,YAiC9B,OAlEEhsC,OAAAoF,eACIinC,EAAA3rC,UAAA,UAAO,KADX,SACYqD,GAERvD,KAAK+rC,aADW,SAAdxoC,GAAsC,cAAdA,EACN,OAAOA,EAEP,mBAAmBA,mCAqC3CsoC,EAAA3rC,UAAAoR,OAAA,SAAO06B,OACDC,EAAcjsC,KAAKksC,YAAYF,GACnC,GAAIC,IAAgBA,EAAY/lC,UAAYlG,KAAKoR,WAAa66B,EAAY9lC,GAAI,KACxEiC,GAAmB,EAEvBpI,KAAK8rC,UAAUzjC,KACX,CAAC+I,SAAUpR,KAAKoR,SAAU5M,OAAQynC,EAAY9lC,GAAImC,eAAgB,WAAQF,GAAmB,KAE5FA,IACHpI,KAAKoR,SAAW66B,EAAY9lC,MAKlC0lC,EAAA3rC,UAAAmG,sBAAA,eAEM8lC,EAAYnsC,KAAKksC,YAAYlsC,KAAKoR,UACtCpR,KAAKoR,SAAW+6B,EAAYA,EAAUhmC,GAAMnG,KAAKosC,KAAKzrC,OAASX,KAAKosC,KAAK5lC,MAAML,GAAK,MAG9E0lC,EAAA3rC,UAAAgsC,YAAR,SAAoB/lC,OACdkmC,EAAuBrsC,KAAKosC,KAAK5jC,OAAO,SAAA8jC,GAAO,OAAAA,EAAInmC,KAAOA,IAC9D,OAAOkmC,EAAW1rC,OAAS0rC,EAAW,GAAK,0BAhH9CpqC,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,aACVwG,SAAU,YACVvG,SAAU,yyCAxFJmpC,oCAoHLzkC,EAAAA,gBAAehF,KAAA,CAAC8pC,sBAOhB/lC,EAAAA,6BAKAA,EAAAA,uBAKAA,EAAAA,2BAYAA,EAAAA,oBASAA,EAAAA,yBAOAkD,EAAAA,UAsCH+iC,EAlHA,GCxF0CF,GAAQD,GAAeD,IAEjEc,GAAA,WAAA,SAAAA,KASA,OADSA,EAAAtjC,QAAP,WAAwC,MAAO,CAACC,SAAUqjC,wBAR3DpjC,EAAAA,SAAQtH,KAAA,CAAC,CAACuH,aAAcwiC,GAAuBviC,QAASuiC,GAAuBtiC,QAAS,CAACC,EAAAA,kBAS1FgjC,EATA,GCVAC,GAAA,WAOE,SAAAA,EAAYC,EAAeC,EAAiBC,GAC1C3sC,KAAKysC,KAAOrqC,EAAUqqC,GACtBzsC,KAAK0sC,OAAStqC,EAAUsqC,GACxB1sC,KAAK2sC,OAASvqC,EAAUuqC,GAwC5B,OArCEH,EAAAtsC,UAAA0sC,WAAA,SAAW/W,QAAA,IAAAA,IAAAA,EAAA,GAAY71B,KAAK6sC,YAAY/pC,MAAM9C,KAAKysC,MAAQ,EAAIzsC,KAAKysC,MAAQ5W,IAE5E2W,EAAAtsC,UAAA2sC,WAAA,SAAWJ,GACL5pC,EAAS4pC,GACXzsC,KAAKysC,MAAQA,EAAO,EAAI,GAAKA,EAAOA,GAAQ,GAE5CzsC,KAAKysC,KAAOK,KAIhBN,EAAAtsC,UAAA6sC,aAAA,SAAalX,QAAA,IAAAA,IAAAA,EAAA,GAAY71B,KAAKgtC,cAAclqC,MAAM9C,KAAK0sC,QAAU,EAAI1sC,KAAK0sC,QAAU7W,IAEpF2W,EAAAtsC,UAAA8sC,aAAA,SAAaN,GACP7pC,EAAS6pC,IACX1sC,KAAK0sC,OAASA,EAAS,GAAK,EAAI,GAAKA,EAAS,GAAKA,EAAS,GAC5D1sC,KAAK4sC,WAAWjqC,KAAKM,MAAMypC,EAAS,MAEpC1sC,KAAK0sC,OAASI,KAIlBN,EAAAtsC,UAAA+sC,aAAA,SAAapX,QAAA,IAAAA,IAAAA,EAAA,GAAY71B,KAAKktC,cAAcpqC,MAAM9C,KAAK2sC,QAAU,EAAI3sC,KAAK2sC,QAAU9W,IAEpF2W,EAAAtsC,UAAAgtC,aAAA,SAAaP,GACP9pC,EAAS8pC,IACX3sC,KAAK2sC,OAASA,EAAS,EAAI,GAAKA,EAAS,GAAKA,EAAS,GACvD3sC,KAAK+sC,aAAapqC,KAAKM,MAAM0pC,EAAS,MAEtC3sC,KAAK2sC,OAASG,KAIlBN,EAAAtsC,UAAAmW,QAAA,SAAQ82B,GACN,YADM,IAAAA,IAAAA,GAAA,GACCtqC,EAAS7C,KAAKysC,OAAS5pC,EAAS7C,KAAK0sC,WAAYS,GAAYtqC,EAAS7C,KAAK2sC,UAGpFH,EAAAtsC,UAAAoC,SAAA,WAAa,OAAUtC,KAAKysC,MAAQ,GAAC,KAAIzsC,KAAK0sC,QAAU,GAAC,KAAI1sC,KAAK2sC,QAAU,IAC9EH,EAlDA,GCQAY,GAAA,WAAA,SAAAA,IAEEptC,KAAAqtC,UAAW,EACXrtC,KAAAstC,UAAW,EACXttC,KAAAutC,SAAU,EACVvtC,KAAAwtC,SAAW,EACXxtC,KAAAytC,WAAa,EACbztC,KAAA0tC,WAAa,EACb1tC,KAAAkG,UAAW,EACXlG,KAAA2tC,gBAAiB,EACjB3tC,KAAAmkC,KAAqC,oCAVtCviC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,gHAAzB,GCJA,SAAgB8rC,KACd,OAAO,IAAIC,GAgBb,IAAAC,GAAA,WAAA,SAAAA,gCAAClsC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,OAAQoT,WAAY04B,sFAA7C,kBAaA,SAAAC,mDAmBA,OAlB0C14B,EAAAA,EAAAA,GAIxC04B,EAAA3tC,UAAA4f,UAAA,SAAU7J,GACR,OAAQA,GAAQlT,EAAUkT,EAAKw2B,OAAS1pC,EAAUkT,EAAKy2B,QACnD,CAACD,KAAMx2B,EAAKw2B,KAAMC,OAAQz2B,EAAKy2B,OAAQC,OAAQ5pC,EAAUkT,EAAK02B,QAAU12B,EAAK02B,OAAS,MACtF,MAMNkB,EAAA3tC,UAAA6f,QAAA,SAAQ9J,GACN,OAAQA,GAAQlT,EAAUkT,EAAKw2B,OAAS1pC,EAAUkT,EAAKy2B,QACnD,CAACD,KAAMx2B,EAAKw2B,KAAMC,OAAQz2B,EAAKy2B,OAAQC,OAAQ5pC,EAAUkT,EAAK02B,QAAU12B,EAAK02B,OAAS,MACtF,0BAjBP/qC,EAAAA,aAmBDisC,GAlB0CC,ICnBpCC,GAAgC,CACpCtiC,QAASC,EAAAA,kBACTC,YAAanG,EAAAA,WAAW,WAAM,OAAAwoC,KAC9BniC,OAAO,GAMTmiC,GAAA,WAmJE,SAAAA,EACqBnL,EAAsCoL,EAC/CliC,GADS/L,KAAA6iC,QAAAA,EAAsC7iC,KAAAiuC,gBAAAA,EAC/CjuC,KAAA+L,IAAAA,EAYZ/L,KAAAkM,SAAW,SAACC,KACZnM,KAAAoM,UAAY,aAZVpM,KAAKqtC,SAAWxK,EAAQwK,SACxBrtC,KAAKstC,SAAWzK,EAAQyK,SACxBttC,KAAKutC,QAAU1K,EAAQ0K,QACvBvtC,KAAKwtC,SAAW3K,EAAQ2K,SACxBxtC,KAAKytC,WAAa5K,EAAQ4K,WAC1BztC,KAAK0tC,WAAa7K,EAAQ6K,WAC1B1tC,KAAKkG,SAAW28B,EAAQ38B,SACxBlG,KAAK2tC,eAAiB9K,EAAQ8K,eAC9B3tC,KAAKmkC,KAAOtB,EAAQsB,KAmGxB,OAnJE3kC,OAAAoF,eACIopC,EAAA9tC,UAAA,WAAQ,KAIZ,WAAyB,OAAOF,KAAKkuC,eALrC,SACarY,GACX71B,KAAKkuC,UAAYnrC,EAAU8yB,GAAQA,EAAO71B,KAAK6iC,QAAQ2K,0CAQzDhuC,OAAAoF,eACIopC,EAAA9tC,UAAA,aAAU,KAId,WAA2B,OAAOF,KAAKmuC,iBALvC,SACetY,GACb71B,KAAKmuC,YAAcprC,EAAU8yB,GAAQA,EAAO71B,KAAK6iC,QAAQ4K,4CAQ3DjuC,OAAAoF,eACIopC,EAAA9tC,UAAA,aAAU,KAId,WAA2B,OAAOF,KAAKouC,iBALvC,SACevY,GACb71B,KAAKouC,YAAcrrC,EAAU8yB,GAAQA,EAAO71B,KAAK6iC,QAAQ6K,4CAgC3DM,EAAA9tC,UAAA0M,WAAA,SAAWnL,OACH4sC,EAAcruC,KAAKiuC,gBAAgBnuB,UAAUre,GACnDzB,KAAKic,MAAQoyB,EAAc,IAAI7B,GAAQ6B,EAAY5B,KAAM4B,EAAY3B,OAAQ2B,EAAY1B,QAAU,IAAIH,GAClGxsC,KAAKutC,SAAac,GAAgBxrC,EAASwrC,EAAY1B,UAC1D3sC,KAAKic,MAAM0wB,OAAS,GAEtB3sC,KAAK+L,IAAIoB,gBAGX6gC,EAAA9tC,UAAA2M,iBAAA,SAAiBC,GAAiC9M,KAAKkM,SAAWY,GAElEkhC,EAAA9tC,UAAA6M,kBAAA,SAAkBD,GAAuB9M,KAAKoM,UAAYU,GAE1DkhC,EAAA9tC,UAAA8M,iBAAA,SAAiBC,GAAuBjN,KAAKkG,SAAW+G,GAExD+gC,EAAA9tC,UAAA0sC,WAAA,SAAW/W,GACT71B,KAAKic,MAAM2wB,WAAW/W,GACtB71B,KAAKsuC,wBAGPN,EAAA9tC,UAAA6sC,aAAA,SAAalX,GACX71B,KAAKic,MAAM8wB,aAAalX,GACxB71B,KAAKsuC,wBAGPN,EAAA9tC,UAAA+sC,aAAA,SAAapX,GACX71B,KAAKic,MAAMgxB,aAAapX,GACxB71B,KAAKsuC,wBAGPN,EAAA9tC,UAAA2sC,WAAA,SAAW0B,OACHC,EAAOxuC,KAAKic,MAAMwwB,MAAQ,GAC1BgC,EAAcrsC,EAAUmsC,GAC1BvuC,KAAKqtC,WAAamB,GAAQC,EAAc,KAAOD,GAAwB,KAAhBC,GACzDzuC,KAAKic,MAAM4wB,WAAW4B,EAAc,IAEpCzuC,KAAKic,MAAM4wB,WAAW4B,GAExBzuC,KAAKsuC,wBAGPN,EAAA9tC,UAAA8sC,aAAA,SAAauB,GACXvuC,KAAKic,MAAM+wB,aAAa5qC,EAAUmsC,IAClCvuC,KAAKsuC,wBAGPN,EAAA9tC,UAAAgtC,aAAA,SAAaqB,GACXvuC,KAAKic,MAAMixB,aAAa9qC,EAAUmsC,IAClCvuC,KAAKsuC,wBAGPN,EAAA9tC,UAAAwuC,eAAA,WACM1uC,KAAKqtC,UACPrtC,KAAK4sC,WAAW,KAIpBoB,EAAA9tC,UAAAyuC,WAAA,SAAWltC,GACT,OAAIoB,EAASpB,GACPzB,KAAKqtC,SACAlqC,EAAU1B,EAAQ,IAAO,EAAI,GAAKA,EAAQ,IAE1C0B,EAAU1B,EAAQ,IAGpB0B,EAAU2pC,MAIrBkB,EAAA9tC,UAAA0uC,aAAA,SAAantC,GAAiB,OAAO0B,EAAU1B,IAE/CjC,OAAAoF,eAAIopC,EAAA9tC,UAAA,cAAW,KAAf,WAA6B,MAAqB,UAAdF,KAAKmkC,sCAEzC3kC,OAAAoF,eAAIopC,EAAA9tC,UAAA,cAAW,KAAf,WAA6B,MAAqB,UAAdF,KAAKmkC,sCAEzC6J,EAAA9tC,UAAA6J,YAAA,SAAYC,GACNA,EAAiB,UAAMhK,KAAKutC,SAAWvtC,KAAKic,QAAUpZ,EAAS7C,KAAKic,MAAM0wB,UAC5E3sC,KAAKic,MAAM0wB,OAAS,EACpB3sC,KAAKsuC,sBAAqB,KAItBN,EAAA9tC,UAAAouC,qBAAR,SAA6BO,QAAA,IAAAA,IAAAA,GAAA,GACvBA,GACF7uC,KAAKoM,YAEHpM,KAAKic,MAAM5F,QAAQrW,KAAKutC,SAC1BvtC,KAAKkM,SACDlM,KAAKiuC,gBAAgBluB,QAAQ,CAAC0sB,KAAMzsC,KAAKic,MAAMwwB,KAAMC,OAAQ1sC,KAAKic,MAAMywB,OAAQC,OAAQ3sC,KAAKic,MAAM0wB,UAEvG3sC,KAAKkM,SAASlM,KAAKiuC,gBAAgBluB,QAAQ,4BA9PhD9d,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,iBACVyI,cAAeC,EAAAA,kBAAkBC,KAEjC1I,SAAU,83KA6EVsL,UAAW,CAACsgC,g2BA7FNX,UACAU,UAbNpgC,EAAAA,uDAuHC9H,EAAAA,wBAKAA,EAAAA,uBAKAA,EAAAA,wBAKAA,EAAAA,0BAUAA,EAAAA,0BAUAA,EAAAA,8BAUAA,EAAAA,oBAKAA,EAAAA,SAgHHooC,EAjQA,GCzBAc,GAAA,WAUA,SAAAA,KASA,OADSA,EAAA7lC,QAAP,WAAwC,MAAO,CAACC,SAAU4lC,wBAR3D3lC,EAAAA,SAAQtH,KAAA,CAAC,CAACuH,aAAc,CAAC4kC,IAAgB3kC,QAAS,CAAC2kC,IAAgB1kC,QAAS,CAACC,EAAAA,kBAS9EulC,EAnBA,GCSAC,GAAA,WAAA,SAAAA,IAEE/uC,KAAA8qB,WAA4C,EAC5C9qB,KAAA4mB,UAA4B,OAC5B5mB,KAAA4lC,SAAW,cAEX5lC,KAAAgvC,gBAAiB,EAEjBhvC,KAAAgmC,UAAY,EACZhmC,KAAAimC,WAAa,6BATdrkC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,gHAAzB,GCsBI0C,GAAS,EAEbyqC,GAAA,WAAA,SAAAA,KAWA,2BAXChtC,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,qBACVsI,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjC/F,KAAM,CAACg4B,UAAW,4DAA6Dl0B,KAAQ,UAAWm/B,OAAQ,MAC1G5lC,SAAU,wxBAITyD,EAAAA,4BACAA,EAAAA,SACHqpC,EAXA,GAgBAC,GAAA,WAyFE,SAAAA,EACY/uB,EAA8CxW,EAAsBy2B,EAC5E6H,EAAoDC,EAAoCnhC,EAChFkJ,EAA2C0a,EAAwBC,EACnE2Q,GAJZ,IAAA5zB,EAAA3H,KACYA,KAAAmgB,YAAAA,EAA8CngB,KAAA2J,UAAAA,EAE9C3J,KAAAiQ,QAAAA,EAA2CjQ,KAAA2qB,UAAAA,EAAwB3qB,KAAA4qB,gBAAAA,EACnE5qB,KAAAu7B,gBAAAA,EAjBFv7B,KAAAmoC,MAAQ,IAAIhhC,EAAAA,aAIZnH,KAAAmZ,OAAS,IAAIhS,EAAAA,aAGfnH,KAAAmvC,oBAAsB,eAAe3qC,KAW3CxE,KAAK8qB,UAAY/jB,EAAO+jB,UACxB9qB,KAAK4mB,UAAY7f,EAAO6f,UACxB5mB,KAAK4lC,SAAW7+B,EAAO6+B,SACvB5lC,KAAK6sB,UAAY9lB,EAAO8lB,UACxB7sB,KAAKgvC,eAAiBjoC,EAAOioC,eAC7BhvC,KAAKovC,aAAeroC,EAAOqoC,aAC3BpvC,KAAKgmC,UAAYj/B,EAAOi/B,UACxBhmC,KAAKimC,WAAal/B,EAAOk/B,WACzBjmC,KAAKsoC,cAAgB,IAAIpN,GACrB+T,GAAkB7O,EAAU8H,EAAkBv+B,EAAWs+B,EAA0B1M,GAEvFv7B,KAAKorB,kBAAoBnb,EAAQ8Q,SAAS/P,UAAU,WAC9CrJ,EAAK8zB,YACPhV,GACI9e,EAAKwY,YAAY/V,cAAezC,EAAK8zB,WAAWjP,SAASpiB,cAAezC,EAAKif,UAC1D,SAAnBjf,EAAKklB,UAAsB,gBA0GvC,OAhGErtB,OAAAoF,eACIsqC,EAAAhvC,UAAA,aAAU,KAOd,WAAmB,OAAOF,KAAKqvC,iBAR/B,SACe5tC,GACbzB,KAAKqvC,YAAc5tC,GACdA,GAASzB,KAAKy7B,YACjBz7B,KAAK6J,yCAYTqlC,EAAAhvC,UAAAuc,KAAA,SAAK5D,GAAL,IAAAlR,EAAA3H,KACOA,KAAKy7B,aAAcz7B,KAAKqvC,aAAgBrvC,KAAKgvC,iBAChDhvC,KAAKy7B,WAAaz7B,KAAKsoC,cAAc7rB,KAAKzc,KAAKqvC,YAAax2B,GAC5D7Y,KAAKy7B,WAAWnQ,SAAS8jB,aAAepvC,KAAKovC,aAC7CpvC,KAAKy7B,WAAWnQ,SAASnlB,GAAKnG,KAAKmvC,oBAEnCnvC,KAAK2J,UAAUu4B,aAAaliC,KAAKmgB,YAAY/V,cAAe,mBAAoBpK,KAAKmvC,qBAE9D,SAAnBnvC,KAAK6sB,WACP7sB,KAAK2qB,UAAUxJ,cAAcnhB,KAAK6sB,WAAWC,YAAY9sB,KAAKy7B,WAAWjP,SAASpiB,eAMpFpK,KAAKy7B,WAAW9O,kBAAkBC,gBAOlC5sB,KAAKy7B,WAAW9O,kBAAkBxf,eAElCwV,GACI3iB,KAAKiQ,QAASjQ,KAAK2qB,UAAW3qB,KAAK8qB,UAAW,WAAM,OAAAnjB,EAAKkC,SAAS7J,KAAKmZ,OACvE,CAACnZ,KAAKy7B,WAAWjP,SAASpiB,gBAE9BpK,KAAKmoC,MAAM9/B,SASf6mC,EAAAhvC,UAAA2J,MAAA,WACyB,MAAnB7J,KAAKy7B,aACPz7B,KAAK2J,UAAUw4B,gBAAgBniC,KAAKmgB,YAAY/V,cAAe,oBAC/DpK,KAAKsoC,cAAcz+B,QACnB7J,KAAKy7B,WAAa,KAClBz7B,KAAKmZ,OAAO9Q,OACZrI,KAAK4qB,gBAAgBzd,iBASzB+hC,EAAAhvC,UAAA8H,OAAA,WACMhI,KAAKy7B,WACPz7B,KAAK6J,QAEL7J,KAAKyc,QAOTyyB,EAAAhvC,UAAAkG,OAAA,WAAoB,OAA0B,MAAnBpG,KAAKy7B,YAEhCyT,EAAAhvC,UAAA8B,SAAA,WACEhC,KAAK0oC,uBAAyB/C,GAC1B3lC,KAAK2J,UAAW3J,KAAKmgB,YAAY/V,cAAepK,KAAK4lC,SAAU5lC,KAAKoG,OAAOuiC,KAAK3oC,MAAOA,KAAKyc,KAAKksB,KAAK3oC,MACtGA,KAAK6J,MAAM8+B,KAAK3oC,OAAQA,KAAKgmC,WAAYhmC,KAAKimC,aAGpDiJ,EAAAhvC,UAAAgP,YAAA,WACElP,KAAK6J,QAGD7J,KAAK0oC,wBACP1oC,KAAK0oC,yBAEP1oC,KAAKorB,kBAAkB6B,mCArN1BpoB,EAAAA,UAAShD,KAAA,CAAC,CAACK,SAAU,eAAgBwG,SAAU,0DApC9CsC,EAAAA,kBAFAD,EAAAA,iBADA22B,EAAAA,gBAMAjU,EAAAA,gCADAD,EAAAA,wBAcMuhB,UAZN37B,EAAAA,0CA4H8B7N,EAAAA,OAAM1D,KAAA,CAAC6rB,EAAAA,mBA1HrChgB,EAAAA,yBACA80B,EAAAA,qDA0CC58B,EAAAA,yBAeAA,EAAAA,wBAQAA,EAAAA,yBAOAA,EAAAA,8BAOAA,EAAAA,4BAOAA,EAAAA,yBAOAA,EAAAA,0BAOAA,EAAAA,qBAKAkD,EAAAA,uBAIAA,EAAAA,2BAuCAlD,EAAAA,SAgGHspC,EAvNA,GCjDAI,GAAA,WAQA,SAAAA,KAQA,OADSA,EAAArmC,QAAP,WAAwC,MAAO,CAACC,SAAUomC,wBAP3DnmC,EAAAA,SAAQtH,KAAA,CAAC,CAACuH,aAAc,CAAC8lC,GAAYD,IAAmB5lC,QAAS,CAAC6lC,IAAahkC,gBAAiB,CAAC+jC,QAQlGK,EAhBA,GCWAC,GAAA,WAAA,SAAAA,IAeWvvC,KAAAwvC,eAAiB,gBAiC5B,OAjBED,EAAArvC,UAAA6J,YAAA,SAAYC,OACJylC,EAAYntC,EAAStC,KAAK41B,QAChC,GAAK6Z,EAAL,KAIIC,EAAwB/vC,MAAM4oB,QAAQvoB,KAAK2vC,MAAQ3vC,KAAK2vC,KAAKlnC,IAAI,SAAAmnC,GAAK,OAAAttC,EAASstC,KAAM,CAACttC,EAAStC,KAAK2vC,OAGxG,IADAD,EAAcA,EAAYlnC,OAAO,SAAAonC,GAAK,OAAAA,KACrBjvC,OAAjB,KAKMkvC,EAAW,IAAIH,EAAYjnC,IAAI,SAAAmnC,GAAK,OAAaA,EpFnB7CE,QAAQ,2BAA4B,UoFmBahsB,KAAK,KAAI,IACpE9jB,KAAK+vC,MAAQN,EAAUjsC,MAAM,IAAIwsC,OAAOH,EAAU,aALhD7vC,KAAK+vC,MAAQ,CAACN,QAPdzvC,KAAK+vC,MAAQ,CAACN,wBAlCnBxtC,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,gBACVsI,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjC1I,SAAU,sRAWTyD,EAAAA,sBAQAA,EAAAA,oBAMAA,EAAAA,SAmBH2pC,EAhDA,GCXAU,GAAA,WAmBA,SAAAA,IAqBEjwC,KAAAkwC,UAAY,EAWHlwC,KAAAmwC,YAAa,EAgBbnwC,KAAAowC,UAAY9tC,EAUHtC,KAAAqwC,YAAc,IAAIlpC,EAAAA,aAEZnH,KAAAswC,kBAAoB,IAAInpC,EAAAA,aA2ClD,OAzCE8oC,EAAA/vC,UAAAqwC,UAAA,WAAc,OAAOvwC,KAAKkwC,WAAa,GAAKlwC,KAAKkwC,UAAYlwC,KAAKwwC,QAAQ7vC,QAE1EsvC,EAAA/vC,UAAAuwC,UAAA,WAAc,OAAOzwC,KAAKwwC,QAAQxwC,KAAKkwC,YAEvCD,EAAA/vC,UAAAwwC,WAAA,SAAWR,GACTlwC,KAAKkwC,UAAYA,EACjBlwC,KAAK2wC,kBAGPV,EAAA/vC,UAAAoB,KAAA,WACMtB,KAAKkwC,YAAclwC,KAAKwwC,QAAQ7vC,OAAS,EAC3CX,KAAKkwC,UAAYlwC,KAAKmwC,YAAcnwC,KAAKkwC,UAAY,GAAKlwC,KAAKwwC,QAAQ7vC,QAAU,EAEjFX,KAAKkwC,YAEPlwC,KAAK2wC,kBAGPV,EAAA/vC,UAAAwR,KAAA,WACM1R,KAAKkwC,UAAY,EACnBlwC,KAAKkwC,UAAYlwC,KAAKwwC,QAAQ7vC,OAAS,EACX,IAAnBX,KAAKkwC,UACdlwC,KAAKkwC,UAAYlwC,KAAKmwC,WAAanwC,KAAKwwC,QAAQ7vC,OAAS,GAAK,EAE9DX,KAAKkwC,YAEPlwC,KAAK2wC,kBAGPV,EAAA/vC,UAAA0wC,YAAA,WACE5wC,KAAKkwC,UAAYlwC,KAAKmwC,WAAa,GAAK,EACxCnwC,KAAK2wC,kBAGPV,EAAA/vC,UAAAoR,OAAA,SAAOkR,GAAQxiB,KAAKqwC,YAAYhoC,KAAKma,IAErCytB,EAAA/vC,UAAA8B,SAAA,WAAahC,KAAK4wC,eAEVX,EAAA/vC,UAAAywC,eAAR,WACE3wC,KAAKswC,kBAAkBjoC,KAAKrI,KAAKkwC,WAAa,EAAIlwC,KAAKmG,GAAK,IAAMnG,KAAKkwC,UAAY3tC,gCArGtFN,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,uBACVwG,SAAU,qBACV5D,KAAM,CAAC+rC,cAAe,0BAA2BloC,QAAS,qBAAsBC,KAAQ,UAAWm/B,OAAQ,MAC3G5lC,SAAU,mtBAuBTyD,EAAAA,0BAKAA,EAAAA,uBAKAA,EAAAA,oBAKAA,EAAAA,yBAMAA,EAAAA,8BAKAA,EAAAA,2BAKAkD,EAAAA,OAAMjH,KAAA,CAAC,qCAEPiH,EAAAA,OAAMjH,KAAA,CAAC,mBA2CVouC,EA1HA,GCQaa,GAAkB,IAAIC,EAAAA,eAC/B,uBAAwB,CAACjvC,WAAY,OAAQkvC,QACjD,WACE,OAAO,OAIT,SAASC,GAAejtC,EAAektC,QAAA,IAAAA,IAAAA,GAAA,OACjC5tC,EAAUU,EAASm2B,KAAKhZ,cAAc,aAc1C,OAZe,MAAX7d,GAAmB4tC,KACrB5tC,EAAUU,EAASq2B,cAAc,QAEzB6H,aAAa,KAAM,YAC3B5+B,EAAQ4+B,aAAa,YAAa,UAClC5+B,EAAQ4+B,aAAa,cAAe,QAEpC5+B,EAAQmlB,UAAUla,IAAI,WAEtBvK,EAASm2B,KAAKrN,YAAYxpB,IAGrBA,EAKT,IAAA6tC,GAAA,WAEE,SAAAA,EAAsCxmB,EAAiDymB,GAAjDpxC,KAAA2qB,UAAAA,EAAiD3qB,KAAAoxC,OAAAA,SAEvFD,EAAAjxC,UAAAgP,YAAA,eACQ5L,EAAU2tC,GAAejxC,KAAK2qB,WAChCrnB,GACFA,EAAQa,cAAc+1B,YAAY52B,IAItC6tC,EAAAjxC,UAAAmxC,IAAA,SAAIC,OACIhuC,EAAU2tC,GAAejxC,KAAK2qB,WAAW,GACzCnH,EAAQxjB,KAAKoxC,OAEnB9tC,EAAQiuC,YAAc,OAChBC,EAAU,WAAM,OAAAluC,EAAQiuC,YAAcD,GAC9B,OAAV9tB,EACFguB,IAEAC,WAAWD,EAAShuB,wBApBzB5hB,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,gFAEVyD,EAAAA,OAAM1D,KAAA,CAAC6rB,EAAAA,+CAAmCnoB,EAAAA,OAAM1D,KAAA,CAACivC,iJAFhE,GC1BAY,GAAA,WAAA,SAAAA,IAGE1xC,KAAA2xC,UAAW,EACX3xC,KAAAmwC,YAAa,EACbnwC,KAAA4xC,UAAW,EACX5xC,KAAA4mB,UAA4B,CAAC,cAAe,eAAgB,WAAY,wCANzEhlB,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,gHAAzB,GC2BM+vC,GAA+B,CACnCpmC,QAASC,EAAAA,kBACTC,YAAanG,EAAAA,WAAW,WAAM,OAAAssC,KAC9BjmC,OAAO,GAkBLkmC,GAAe,EAKnBD,GAAA,WAgIE,SAAAA,EACY3xB,EAAmDkb,EACnD1xB,EAA8ByxB,EAAqB6M,EAC3DlhC,EAA4BirC,EAAwBC,EAAuCtnB,EACnF1a,EAAyB2a,EAA4C2Q,GAJjF,IAAA5zB,EAAA3H,KACYA,KAAAmgB,YAAAA,EAAmDngB,KAAAq7B,kBAAAA,EACnDr7B,KAAA2J,UAAAA,EAA8B3J,KAAAo7B,UAAAA,EACcp7B,KAAAiyC,MAAAA,EAAuCjyC,KAAA2qB,UAAAA,EACnF3qB,KAAAiQ,QAAAA,EAAyBjQ,KAAA4qB,gBAAAA,EAA4C5qB,KAAAu7B,gBAAAA,EA7GzEv7B,KAAAs4B,SAAW,IAAInoB,EAAAA,QAcdnQ,KAAAoN,aAAe,MA4EfpN,KAAA4mB,UAA4B,cAO3B5mB,KAAAkyC,WAAa,IAAI/qC,EAAAA,aAG3BnH,KAAAmyC,QAAU,iBAAiBJ,KAEnB/xC,KAAAkrB,WAAa,aACblrB,KAAAirB,UAAY,SAAC9e,KAOnBnM,KAAK6sB,UAAY9lB,EAAO8lB,UACxB7sB,KAAK2xC,SAAW5qC,EAAO4qC,SACvB3xC,KAAKmwC,WAAappC,EAAOopC,WACzBnwC,KAAK4xC,SAAW7qC,EAAO6qC,SACvB5xC,KAAK4mB,UAAY7f,EAAO6f,UAExB5mB,KAAKoyC,cAAgB7wB,EAAAA,UAAiBpB,EAAY/V,cAAe,SACvCsG,KAAKjI,EAAAA,IAAI,SAAA+D,GAAU,OAACA,EAAa,OAAsB/K,SAEjFzB,KAAKqyC,sBAAwB,IAAIC,EAAAA,gBAAgB,MAEjDtyC,KAAKsoC,cAAgB,IAAIpN,GACrB+U,GAAoB7U,EAAWC,EAAmB1xB,EAAWs+B,EAA0B1M,GAE3Fv7B,KAAKorB,kBAAoB4mB,EAAOjxB,SAAS/P,UAAU,WAC7CrJ,EAAK4qC,eACP9rB,GACI9e,EAAKwY,YAAY/V,cAAezC,EAAK8zB,WAAWjP,SAASpiB,cAAezC,EAAKif,UAC1D,SAAnBjf,EAAKklB,aAwMjB,OAnMEilB,EAAA5xC,UAAA8B,SAAA,WAAA,IAAA2F,EAAA3H,KAQQwyC,EAPexyC,KAAKoyC,cAAc1hC,KAAK+hC,EAAAA,IAAI,SAAAhxC,GAC/CkG,EAAK+qC,kBAAoB/qC,EAAKiqC,SAAWnwC,EAAQ,KAC7CkG,EAAKgqC,UACPhqC,EAAKsjB,UAAUxpB,MAGWiP,KAAK1Q,KAAK2yC,cACLjiC,KAAK+hC,EAAAA,IAAI,WACrC9qC,EAAKgqC,UACRhqC,EAAKsjB,UAAU1oB,cAGbqwC,EAAa5yC,KAAKqyC,sBAAsB3hC,KAAKE,EAAAA,UAAU,WAAM,OAAA4hC,KACnExyC,KAAK6yC,cAAgB7yC,KAAK8yC,sBAAsBF,IAGlDd,EAAA5xC,UAAAgP,YAAA,WACElP,KAAK+yC,cACL/yC,KAAKgzC,4BACLhzC,KAAKorB,kBAAkB6B,eAGzB6kB,EAAA5xC,UAAA2M,iBAAA,SAAiBC,GAAiC9M,KAAKirB,UAAYne,GAEnEglC,EAAA5xC,UAAA6M,kBAAA,SAAkBD,GAAuB9M,KAAKkrB,WAAape,GAE3DglC,EAAA5xC,UAAA0M,WAAA,SAAWnL,GACTzB,KAAKizC,iBAAiBjzC,KAAKkzC,oBAAoBzxC,IAC3CzB,KAAK4xC,WACP5xC,KAAK0yC,kBAAoBjxC,IAI7BqwC,EAAA5xC,UAAA8M,iBAAA,SAAiBC,GACfjN,KAAK2J,UAAUqF,YAAYhP,KAAKmgB,YAAY/V,cAAe,WAAY6C,IAMzE6kC,EAAA5xC,UAAAizC,aAAA,WACMnzC,KAAKuyC,gBACPvyC,KAAKqyC,sBAAsB/wC,KAAK,MAChCtB,KAAK+yC,cACD/yC,KAAK4xC,UAAuC,OAA3B5xC,KAAK0yC,mBACxB1yC,KAAKizC,iBAAiBjzC,KAAK0yC,mBAE7B1yC,KAAK4qB,gBAAgBzd,iBAOzB2kC,EAAA5xC,UAAAqyC,YAAA,WAAgB,OAA0B,MAAnBvyC,KAAKy7B,YAE5BqW,EAAA5xC,UAAA+pC,WAAA,WACEjqC,KAAKqyC,sBAAsB/wC,KAAK,MAChCtB,KAAKkrB,cAGP4mB,EAAA5xC,UAAAmqC,cAAA,SAAcprB,GACZ,GAAKjf,KAAKuyC,cAKV,OAAQtzB,EAAMC,OACZ,KAAKC,GAAIX,UACPS,EAAM3W,iBACNtI,KAAKy7B,WAAWnQ,SAAShqB,OACzBtB,KAAKozC,YACL,MACF,KAAKj0B,GAAIb,QACPW,EAAM3W,iBACNtI,KAAKy7B,WAAWnQ,SAAS5Z,OACzB1R,KAAKozC,YACL,MACF,KAAKj0B,GAAIrB,MACT,KAAKqB,GAAItB,QACD+X,EAAS51B,KAAKy7B,WAAWnQ,SAASmlB,YACpCvtC,EAAU0yB,KACZ3W,EAAM3W,iBACN2W,EAAMI,kBACNrf,KAAKqzC,cAAczd,IAErB51B,KAAK+yC,gBAKHjB,EAAA5xC,UAAAozC,WAAR,WAAA,IAAA3rC,EAAA3H,KACOA,KAAKuyC,gBACRvyC,KAAK0yC,kBAAoB1yC,KAAKmgB,YAAY/V,cAAc3I,MACxDzB,KAAKy7B,WAAaz7B,KAAKsoC,cAAc7rB,OACrCzc,KAAKy7B,WAAWnQ,SAASnlB,GAAKnG,KAAKmyC,QACnCnyC,KAAKy7B,WAAWnQ,SAAS+kB,YAAYr/B,UAAU,SAAC4kB,GAAgB,OAAAjuB,EAAK4rC,wBAAwB3d,KAC7F51B,KAAKy7B,WAAWnQ,SAASglB,kBAAkBt/B,UAAU,SAACI,GAAqB,OAAAzJ,EAAK6rC,iBAAmBpiC,IAE5E,SAAnBpR,KAAK6sB,WACP/H,OAAO9gB,SAASmd,cAAcnhB,KAAK6sB,WAAWC,YAAY9sB,KAAKy7B,WAAWjP,SAASpiB,eAGrFpK,KAAK4qB,gBAAgBzd,eAErBwV,GACI3iB,KAAKiQ,QAASjQ,KAAK2qB,UAAW,UAAW,WAAM,OAAAhjB,EAAKwrC,gBAAgBnzC,KAAKs4B,SACzE,CAACt4B,KAAKmgB,YAAY/V,cAAepK,KAAKy7B,WAAWjP,SAASpiB,kBAI1D0nC,EAAA5xC,UAAA6yC,YAAR,WACE/yC,KAAKs4B,SAASh3B,OACdtB,KAAKsoC,cAAcz+B,QACnB7J,KAAKy7B,WAAa,KAClBz7B,KAAKwzC,iBAAmBjxC,WAGlBuvC,EAAA5xC,UAAAmzC,cAAR,SAAsBzd,OAChB2I,GAAmB,EACvBv+B,KAAKkyC,WAAW7pC,KAAK,CAACma,KAAMoT,EAAQttB,eAAgB,WAAQi2B,GAAmB,KAC/Ev+B,KAAKqyC,sBAAsB/wC,KAAK,MAE3Bi9B,IACHv+B,KAAK4M,WAAWgpB,GAChB51B,KAAKirB,UAAU2K,KAIXkc,EAAA5xC,UAAAqzC,wBAAR,SAAgC3d,GAC9B51B,KAAKqzC,cAAczd,GACnB51B,KAAK+yC,eAGCjB,EAAA5xC,UAAAkzC,UAAR,WACE,GAAIpzC,KAAK4xC,UAAY5xC,KAAKy7B,WAAWnQ,SAASilB,aAAyC,MAA1BvwC,KAAK0yC,kBAA2B,KACrFe,EAAqBzzC,KAAK0yC,kBAAkBgB,cAC5CC,EAAe3zC,KAAKkzC,oBAAoBlzC,KAAKy7B,WAAWnQ,SAASmlB,aAEnEgD,IAAuBE,EAAaC,OAAO,EAAG5zC,KAAK0yC,kBAAkB/xC,QAAQ+yC,eAC/E1zC,KAAKizC,iBAAiBjzC,KAAK0yC,kBAAoBiB,EAAaC,OAAO5zC,KAAK0yC,kBAAkB/xC,SAC1FX,KAAKmgB,YAAY/V,cAAiC,kBAAEvJ,MAChDb,KAAKmgB,YAAY/V,cAAe,CAACpK,KAAK0yC,kBAAkB/xC,OAAQgzC,EAAahzC,UAEjFX,KAAKizC,iBAAiBU,KAKpB7B,EAAA5xC,UAAAgzC,oBAAR,SAA4B1wB,GAC1B,OAAe,MAARA,GAAgBxiB,KAAK6zC,eAAiB7zC,KAAK6zC,eAAerxB,GAAQlgB,EAASkgB,IAG5EsvB,EAAA5xC,UAAA+yC,iBAAR,SAAyBxxC,GACvBzB,KAAK2J,UAAUqF,YAAYhP,KAAKmgB,YAAY/V,cAAe,QAAS9H,EAASb,KAGvEqwC,EAAA5xC,UAAA4yC,sBAAR,SAA8BF,GAA9B,IAAAjrC,EAAA3H,KACE,OAAO4yC,EAAW5hC,UAAU,SAACw/B,GACtBA,GAA8B,IAAnBA,EAAQ7vC,QAGtBgH,EAAK2rC,aACL3rC,EAAK8zB,WAAWnQ,SAAS6kB,WAAaxoC,EAAKwoC,WAC3CxoC,EAAK8zB,WAAWnQ,SAASklB,QAAUA,EACnC7oC,EAAK8zB,WAAWnQ,SAASqkB,KAAOhoC,EAAKwY,YAAY/V,cAAc3I,MAC3DkG,EAAKmsC,kBACPnsC,EAAK8zB,WAAWnQ,SAAS8kB,UAAYzoC,EAAKmsC,iBAExCnsC,EAAKosC,iBACPpsC,EAAK8zB,WAAWnQ,SAASyoB,eAAiBpsC,EAAKosC,gBAEjDpsC,EAAK8zB,WAAWnQ,SAASslB,cAKzBjpC,EAAK8zB,WAAW9O,kBAAkBC,gBAElCjlB,EAAKyrC,aAnBLzrC,EAAKorC,kBAuBDiB,EAAQxD,EAAUA,EAAQ7vC,OAAS,EACzCgH,EAAKsqC,MAAMZ,IAAc,IAAV2C,EAAc,uBAA4BA,EAAK,WAAoB,IAAVA,EAAc,GAAK,KAAG,iBAI1FlC,EAAA5xC,UAAA8yC,0BAAR,WACMhzC,KAAK6yC,eACP7yC,KAAK6yC,cAAc5lB,cAErBjtB,KAAK6yC,cAAgB,0BA7VxBhuC,EAAAA,UAAShD,KAAA,CAAC,CACTK,SAAU,sBACVwG,SAAU,eACV5D,KAAM,CACJ0I,SAAU,eACVymC,eAAgB,gBAChB7I,YAAa,wBACb8I,iBAAkB,eAClBC,eAAkB,MAClBC,YAAe,MACfxrC,KAAQ,WACRyrC,iBAAkB,QAClBC,2BAA4B,6BAC5BC,+BAAgC,mBAChCC,mBAAoB,iCACpBtvC,uBAAwB,iBAE1BuI,UAAW,CAACokC,iDA1EZ7mC,EAAAA,kBAYAwiB,EAAAA,wBAFAziB,EAAAA,iBANA22B,EAAAA,gBAPAjU,EAAAA,gCA8BMikB,UArBNt+B,EAAAA,cAcM+9B,sCAwKgE5rC,EAAAA,OAAM1D,KAAA,CAAC6rB,EAAAA,mBAtL7Eta,EAAAA,cAVA1F,EAAAA,yBAiBA80B,EAAAA,wDAiFC58B,EAAAA,yBAOAA,EAAAA,wBAKAA,EAAAA,0BAKAA,EAAAA,8BAQAA,EAAAA,4BAaAA,EAAAA,+BASAA,EAAAA,8BASAA,EAAAA,wBAKAA,EAAAA,yBAeAA,EAAAA,0BAOAkD,EAAAA,UAuOHgpC,EA/VA,GCsDM2C,GAAc,CAClBzrC,EAAoBiC,EAAgBoE,EAAkBiE,GAAmBK,GAAmB0iB,GAC5FsE,GAAmBoI,GAAgBsC,GAAqBuD,GAAkBQ,GAAsBiC,GAChGkB,GAAiBuC,GAAqBQ,GCvHxC,WAYA,SAAAoF,KAcA,OADSA,EAAAzrC,QAAP,WAAwC,MAAO,CAACC,SAAUwrC,wBAb3DvrC,EAAAA,SAAQtH,KAAA,CAAC,CACRuH,aAAc,CAAC0oC,GAAcvC,GAAcU,IAC3C5mC,QAAS,CAACyoC,GAAcvC,IACxBjmC,QAAS,CAACC,EAAAA,cACV2B,gBAAiB,CAAC+kC,QAUpByE,EA1BA,ID0HAC,GAAA,WAAA,SAAAA,KASA,OADSA,EAAA1rC,QAAP,WAAwC,MAAO,CAACC,SAAUyrC,wBAR3DxrC,EAAAA,SAAQtH,KAAA,CAAC,CAACyH,QAASmrC,GAAaprC,QAASorC,OAS1CE,EATA,GE1HaC,GAAe,CACxB,SACA,UACA,WACA,iBACA,UACA,aACA,WACA,cACA,uBACA,WACA,UACA,UACA,OACA,SACA,OACA,QACA,WACA,UACA,SACA,WACA,YACA,gBACA,WACA,QACA,WACA,YACA,WACA,cACA,UACA,iBACA,gBACA,WACA,gBACA,aACA,aACA,SACA,WACA,OACA,WACA,SACA,eACA,cACA,eACA,iBACA,eACA,YACA,QACA,OACA,WACA,iBACA,UACA,aACA,YACA,gBACA,WAGSC,GAAgB,CAAC,OAAQ,SAAU,0BAEnCC,GAAc,CACvB,QACA,4BACA,mCACA,4CACA,QACA,0BAESC,GAA4B,CAAC,UAAW,WAExCC,GAAmB,CAAC,qBAAsB,yBAA0B,0BAEpEC,GAAwB,CACjC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,uBACA,uBACA,qBACA,yCACA,uDACA,2BACA,qBACA,oBACA,kBACA,kBACA,0BC5FJC,GAAA,WAUA,OAVA,aAAA,GCEAC,GAAA,WAsBA,OAtBA,aAAA,GCAAC,GAAA,WAcA,OAdA,aAAA,GCFAC,GAAA,WASE,SAAAA,EAAoBC,GAAAt1C,KAAAs1C,OAAAA,EAClBt1C,KAAKs1C,OAASA,SAGhBD,EAAAn1C,UAAAq1C,QAAA,SAAQzN,EAAe0N,GACrBx1C,KAAKs1C,OAAOC,QAAQC,EAAM1N,IAG5BuN,EAAAn1C,UAAAu1C,KAAA,SAAK3N,EAAe0N,GACjBx1C,KAAKs1C,OAAOG,KAAKD,EAAM1N,IAG3BuN,EAAAn1C,UAAAw1C,QAAA,SAAQ5N,EAAe0N,GACpBx1C,KAAKs1C,OAAOI,QAAQF,EAAM1N,IAG7BuN,EAAAn1C,UAAAy1C,OAAA,SAAO7N,EAAe0N,GACrBx1C,KAAKs1C,OAAO5zC,MAAM8zC,EAAM1N,wBAvBzBlmC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAHL8zC,EAAAA,qJADT,GCAAC,GAAA,WAgBE,SAAAA,EAAoBC,EAA0BC,GAA1B/1C,KAAA81C,KAAAA,EAA0B91C,KAAA+1C,eAAAA,EAF9C/1C,KAAAg2C,IAAM,4CAGCH,EAAA31C,UAAA+1C,gBAAP,SAAuBC,OACfC,EAAiBn2C,KAAKg2C,IAAG,oBAAoBE,EACnD,OAAOl2C,KAAK81C,KAAKM,IAAgBD,IAG5BN,EAAA31C,UAAAm2C,gBAAP,WAAA,IAAA1uC,EAAA3H,KACQm2C,EAAiBn2C,KAAKg2C,IAAG,mBAC/B,OAAOh2C,KAAK81C,KAAKM,IAAkBD,GAAazlC,KAAK4lC,EAAAA,WAAU,SAAEC,GAE/D,OADA5uC,EAAKouC,eAAeJ,OAAO,QAAS,wDAC7Ba,EAAAA,UAIJX,EAAA31C,UAAAu2C,eAAP,SAAsBC,GAAtB,IAAA/uC,EAAA3H,KACQm2C,EAAiBn2C,KAAKg2C,IAAG,mBAAmBU,EAClD,OAAO12C,KAAK81C,KAAKM,IAAkBD,GAAazlC,KAAK4lC,EAAAA,WAAU,SAAEC,GAE/D,OADA5uC,EAAKouC,eAAeJ,OAAO,QAAS,wDAC7Ba,EAAAA,UAIJX,EAAA31C,UAAAy2C,iBAAP,SAAwBC,GACtBC,QAAQC,IAAI,gCAEZ,OAAO92C,KAAK81C,KAAKiB,KADG,sDACeH,IA6BrCf,EAAA31C,UAAA82C,eAAA,SAAe7wC,EAAY8wC,GAA3B,IAAAtvC,EAAA3H,KACQm2C,EAAiBn2C,KAAKg2C,IAAG,mBAAmB7vC,EAClD,OAAOnG,KAAK81C,KAAKoB,IAAsBf,EAAac,GAAkBvmC,KAAK4lC,EAAAA,WAAU,SAAEC,GAErF,OADA5uC,EAAKouC,eAAeJ,OAAO,QAAS,0BAC7Ba,EAAAA,8BAjEZ50C,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDATLq1C,EAAAA,kBAEA9B,sJAHT,GCAA+B,GAAA,WASE,SAAAA,gCANDx1C,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,wJAJd,GCAAu1C,GAAA,WA2BE,SAAAA,EAAmBnX,EAAqCoX,EAA0CC,EAAsCC,GAArHx3C,KAAAkgC,YAAAA,EAAqClgC,KAAAs3C,gBAAAA,EAA0Ct3C,KAAAu3C,cAAAA,EAAsCv3C,KAAAw3C,GAAAA,EAPxIx3C,KAAAg3C,eAAiB,IAAI5B,GACrBp1C,KAAAy3C,oBAAsB,IAAItC,GAC1Bn1C,KAAA03C,sBAAwB,IAAIxC,GAC5Bl1C,KAAA23C,aAAe/C,GAEf50C,KAAA43C,OAAQ,EA8DV,OA1DEP,EAAAn3C,UAAA8B,SAAA,WACEhC,KAAKy3C,oBAAsBz3C,KAAKu3C,cAAcX,WAE9C52C,KAAK03C,sBAAwB,CAC3BG,aAAc,KACdC,aAAc,KACdC,KAAM,KACNlhC,MAAO,KACPmhC,QAAS,KACTC,OAAQ,KACR9xC,GAAI,KACJ+xC,mBAAoB,KACpBC,mBAAoB,MAGtBn4C,KAAKg3C,eAAiB,CACpBoB,cAAe,KACfC,UAAW,KACXC,YAAa,KACbC,mBAAoB,KACpBC,eAAgB,KAChBC,OAAQ,KACRh1B,KAAM,KACNi1B,UAAW,KACXC,OAAQ,KACRC,2BAA4B,KAC5BT,mBAAoB,KACpBD,mBAAoB,KACpBW,QAAS,CAAC74C,KAAK03C,wBAGjB13C,KAAK84C,YAAc94C,KAAKw3C,GAAGuB,MAAM,CAC/BlB,aAAc,CAAC,MACfC,aAAc,CAAC,MACfC,KAAM,CAAC,MACPlhC,MAAO,CAAC,MACRmhC,QAAS,CAAC,MACVC,OAAQ,CAAC,SAIbZ,EAAAn3C,UAAA2J,MAAA,WACE7J,KAAKkgC,YAAYr2B,MAAM,gBAGzBwtC,EAAAn3C,UAAA84C,sBAAA,WAAA,IAAArxC,EAAA3H,KACE62C,QAAQC,IAAI92C,KAAKg3C,gBACjBH,QAAQC,IAAI92C,KAAK03C,uBAEjB13C,KAAKmG,GAAKnG,KAAKu3C,cAAcX,WAAWV,WACxCl2C,KAAKs3C,gBAAgBN,eAAeh3C,KAAKmG,GAAInG,KAAKg3C,gBAC/ChmC,UAAS,SAACgmC,GAAoBrvC,EAAKqvC,eAAiBA,IACvDh3C,KAAK6J,SAGPwtC,EAAAn3C,UAAA+4C,UAAA,SAAUC,EAASC,GACjB,OAAOD,GAAMC,EAAKD,EAAG/yC,KAAOgzC,EAAGhzC,GAAK+yC,IAAOC,uBA3E9Cl3C,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,4BACVC,SAAA,kvOAXO46B,EAAAA,sBAMA8Y,UACAuB,UANWgC,EAAAA,gDAcjBxzC,EAAAA,SAuEHyxC,EAvFA,GCAAgC,GAAA,WA2BE,SAAAA,EAAmBnZ,EAAqCoX,EAA0CC,EAAsCC,GAArHx3C,KAAAkgC,YAAAA,EAAqClgC,KAAAs3C,gBAAAA,EAA0Ct3C,KAAAu3C,cAAAA,EAAsCv3C,KAAAw3C,GAAAA,EAVxIx3C,KAAAg3C,eAAiB,IAAI5B,GACrBp1C,KAAAy3C,oBAAuB,IAAItC,GAE3Bn1C,KAAAs5C,cAAgBzE,GAChB70C,KAAAu5C,YAAczE,GACd90C,KAAAw5C,iBAAmBxE,GACnBh1C,KAAAy5C,sBAAwBxE,GACxBj1C,KAAA05C,0BAA4B3E,GAC5B/0C,KAAA43C,OAAQ,EA0EV,OAtEEyB,EAAAn5C,UAAA8B,SAAA,WACEhC,KAAKy3C,oBAAsBz3C,KAAKu3C,cAAcX,WAE9C52C,KAAKg3C,eAAiB,CACpBoB,cAAe,KACfC,UAAW,KACXC,YAAa,KACbC,mBAAoB,KACpBC,eAAgB,KAChBC,OAAQ,KACRh1B,KAAM,KACNi1B,UAAW,KACXC,OAAQ,KACRC,2BAA4B,KAC5BT,mBAAoB,KACpBD,mBAAoB,KACpBW,QAAS,MAGX74C,KAAK84C,YAAc94C,KAAKw3C,GAAGuB,MAAM,CAC/BY,IAAK,CAAC,MACNC,oBAAqB,CAAC,MACtBC,UAAW,CAAC,KAAKC,EAAAA,WAAWC,UAAU,IACtCC,SAAU,CAAC,KAAKF,EAAAA,WAAWC,UAAU,IACrC3B,cAAe,CAAC,KAAK0B,EAAAA,WAAWC,UAAU,IAC1C1B,UAAW,CAAC,KAAKyB,EAAAA,WAAWC,UAAU,IACtCzB,YAAa,CAAC,MAGdC,mBAAoB,CAAC,MACrBE,OAAQ,CAAC,MACTD,eAAgB,CAAC,MACjB/0B,KAAM,CAAC,MACPi1B,UAAW,CAAC,SAIhBW,EAAAn5C,UAAA2J,MAAA,WACE7J,KAAKkgC,YAAYr2B,MAAM,gBAGzBwvC,EAAAn5C,UAAA84C,sBAAA,WAAA,IAAArxC,EAAA3H,KACEA,KAAKg3C,eAAiB,CACpBoB,cAAep4C,KAAKy3C,oBAAoBW,cACxCC,UAAWr4C,KAAKy3C,oBAAoBY,UACpCC,YAAat4C,KAAKy3C,oBAAoBa,YACtCC,mBAAoBv4C,KAAKy3C,oBAAoBc,mBAC7CE,OAAQz4C,KAAKy3C,oBAAoBgB,OACjCD,eAAgBx4C,KAAKy3C,oBAAoBe,eACzC/0B,KAAMzjB,KAAKy3C,oBAAoBh0B,KAC/Bi1B,UAAW14C,KAAKy3C,oBAAoBiB,UACpCC,OAAQ,KACRC,2BAA4B,KAC5BT,mBAAoB,KACpBD,mBAAoB,KACpBW,QAAS,MAKX74C,KAAKmG,GAAKnG,KAAKu3C,cAAcX,WAAWV,WACxCl2C,KAAKs3C,gBAAgBN,eAAeh3C,KAAKmG,GAAInG,KAAKg3C,gBAC/ChmC,UAAS,SAACgmC,GAAoBrvC,EAAKqvC,eAAiBA,IACvDh3C,KAAK6J,SAGPwvC,EAAAn5C,UAAA+4C,UAAA,SAAUC,EAASC,GACjB,OAAOD,GAAMC,EAAKD,EAAG/yC,KAAOgzC,EAAGhzC,GAAK+yC,IAAOC,uBAvF9Cl3C,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,4BACVC,SAAA,8whBAVO46B,EAAAA,sBAKA8Y,UACAuB,UALWgC,EAAAA,8CAajBxzC,EAAAA,SAoFHyzC,EAnGA,GCAAY,GAAA,WAEA,SAAAA,KAkCA,OAhCIA,EAAA/5C,UAAAwnB,UAAA,SAAUiyB,OACFO,EAAiB,GACrB,GAAiB,GAAdP,EAAIh5C,OAAa,CAChB,IAAI,IAAIqzC,EAAQ,EAAGA,EAAQ2F,EAAIh5C,OAAQqzC,IACtB,GAATA,GAAyB,GAATA,IAChBkG,GAAU,KAIVA,GADAlG,GAAS,GAAOA,GAAS,EACf,IAEA2F,EAAIQ,OAAOnG,GAG7B,OAAOkG,EACJ,GAAiB,GAAdP,EAAIh5C,OAAa,CACvB,IAAQqzC,EAAQ,EAAGA,EAAQ,EAAGA,IACb,GAATA,GAAyB,GAATA,IAChBkG,GAAU,KAIVA,GADAlG,GAAS,GAAOA,GAAS,EACf,IAEA2F,EAAIQ,OAAOnG,EAAQ,GAGrC,OAAOkG,EAEP,OAAOP,uBA/BlBS,EAAAA,KAAIv4C,KAAA,CAAC,CAACmM,KAAM,iBAkCbisC,EApCA,GCAAI,GAAA,WAMI,SAAAA,EAAoBC,GAAAt6C,KAAAs6C,SAAAA,EAcxB,OAZID,EAAAn6C,UAAAwnB,UAAA,SAAU4wB,GAUN,OAPyB,IAAtBA,EAAY33C,OACMX,KAAKs6C,SAAS5yB,UAAU4wB,EAAa,kBAC1B,IAAtBA,EAAY33C,OACDX,KAAKs6C,SAAS5yB,UAAU4wB,EAAa,qBAErCA,uBAb5B8B,EAAAA,KAAIv4C,KAAA,CAAC,CAACmM,KAAM,4DAFJusC,EAAAA,YAmBTF,EApBA,GCAAG,GAAA,WAGA,SAAAA,KAqBA,OAnBIA,EAAAt6C,UAAAwnB,UAAA,SAAUmxB,OACF4B,EAAqB,GAgBzB,OAdIA,GAAc5B,EAAQ,GAAGhB,aAEK,MAA3BgB,EAAQ,GAAGf,eACV2C,GAAc,KACdA,GAAc5B,EAAQ,GAAGf,cAG7B2C,EAAaA,EAAa,OAAc5B,EAAQ,GAAGd,KAAO,KAAOc,EAAQ,GAAGhiC,MAAQ,KAAOgiC,EAAQ,GAAGb,QAE9E,MAArBa,EAAQ,GAAGZ,SACVwC,GAAc,IACdA,GAAc5B,EAAQ,GAAGZ,QAG1BwC,uBAnBdL,EAAAA,KAAIv4C,KAAA,CAAC,CAACmM,KAAM,qBAqBbwsC,EAxBA,GCAAE,GAAA,WAMI,SAAAA,EAAoBC,GAAA36C,KAAA26C,SAAAA,EAOxB,OALID,EAAAx6C,UAAAwnB,UAAA,SAAUzT,GAGN,OADUjU,KAAK26C,SAASjzB,UAAUzT,EAAM,mCAP/CmmC,EAAAA,KAAIv4C,KAAA,CAAC,CAACmM,KAAM,2DAFJ4sC,EAAAA,YAYTF,EAbA,GCAAG,GAAA,WAeA,SAAAA,KA6BgC,2BA7B/B1xC,EAAAA,SAAQtH,KAAA,CAAC,CACRuH,aAAc,CACZrH,EACAs3C,GACAhC,GACA4C,GACAI,GACAG,GACAE,IAEFpxC,QAAS,CACPqrC,GACA3d,EAAAA,YACA8jB,EAAAA,oBACAvxC,EAAAA,aACAwxC,EAAAA,iBAEF1xC,QAAS,CACPtH,EACAs1C,GACAgC,GACAY,GACAI,GACAG,GACAE,IAEFxvC,gBAAiB,CAACmuC,GAA8BhC,IAChD5pC,UAAW,CAACmtC,EAAAA,SAAUL,EAAAA,cAEQM,EA5ChC","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OptLibraryService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'opt-opt-library',\n  template: `\n    <p>\n      opt-library works!\n    </p>\n  `,\n  styles: []\n})\nexport class OptLibraryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\n\nexport function toString(value: any): string {\n  return (value !== undefined && value !== null) ? `${value}` : '';\n}\n\nexport function getValueInRange(value: number, max: number, min = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\n\nexport function isInteger(value: any): value is number {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nexport function isDefined(value: any): boolean {\n  return value !== undefined && value !== null;\n}\n\nexport function padNumber(value: number) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\n\nexport function regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\nexport function hasClassName(element: any, className: string): boolean {\n  return element && element.className && element.className.split &&\n      element.className.split(/\\s+/).indexOf(className) >= 0;\n}\n\nif (typeof Element !== 'undefined' && !Element.prototype.closest) {\n  // Polyfill for ie10+\n\n  if (!Element.prototype.matches) {\n    // IE uses the non-standard name: msMatchesSelector\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  Element.prototype.closest = function(s: string) {\n    let el = this;\n    if (!document.documentElement.contains(el)) {\n      return null;\n    }\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  };\n}\n\nexport function closest(element: HTMLElement, selector): HTMLElement {\n  if (!selector) {\n    return null;\n  }\n\n  return element.closest(selector);\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAccordionConfig {\n  closeOthers = false;\n  type: string;\n}\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\n\nimport {isString} from '../util/util';\n\nimport {NgbAccordionConfig} from './accordion-config';\n\nlet nextId = 0;\n\n/**\n * The context for the [NgbPanelHeader](#/components/accordion/api#NgbPanelHeader) template\n *\n * @since 4.1.0\n */\nexport interface NgbPanelHeaderContext {\n  /**\n   * `True` if current panel is opened\n   */\n  opened: boolean;\n}\n\n/**\n * A directive to put on a button that toggles panel opening and closing.\n *\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n *\n * @since 4.1.0\n */\n@Directive({\n  selector: 'button[ngbPanelToggle]',\n  host: {\n    'type': 'button',\n    '[disabled]': 'panel.disabled',\n    '[class.collapsed]': '!panel.isOpen',\n    '[attr.aria-expanded]': 'panel.isOpen',\n    '[attr.aria-controls]': 'panel.id',\n    '(click)': 'accordion.toggle(panel.id)'\n  }\n})\nexport class NgbPanelToggle {\n  @Input()\n  set ngbPanelToggle(panel: NgbPanel) {\n    if (panel) {\n      this.panel = panel;\n    }\n  }\n\n  constructor(\n      @Inject(forwardRef(() => NgbAccordion)) public accordion: NgbAccordion,\n      @Optional() @Host() @Inject(forwardRef(() => NgbPanel)) public panel: NgbPanel) {}\n}\n\n/**\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\n *\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPanelHeader]'})\nexport class NgbPanelHeader {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps only the panel title with HTML markup inside.\n *\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n */\n@Directive({selector: 'ng-template[ngbPanelTitle]'})\nexport class NgbPanelTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps the accordion panel content.\n */\n@Directive({selector: 'ng-template[ngbPanelContent]'})\nexport class NgbPanelContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps an individual accordion panel with title and collapsible content.\n */\n@Directive({selector: 'ngb-panel'})\nexport class NgbPanel implements AfterContentChecked {\n  /**\n   *  If `true`, the panel is disabled an can't be toggled.\n   */\n  @Input() disabled = false;\n\n  /**\n   *  An optional id for the panel that must be unique on the page.\n   *\n   *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n   */\n  @Input() id = `ngb-panel-${nextId++}`;\n\n  isOpen = false;\n\n  /**\n   *  The panel title.\n   *\n   *  You can alternatively use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to set panel title.\n   */\n  @Input() title: string;\n\n  /**\n   * Type of the current panel.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  titleTpl: NgbPanelTitle | null;\n  headerTpl: NgbPanelHeader | null;\n  contentTpl: NgbPanelContent | null;\n\n  @ContentChildren(NgbPanelTitle, {descendants: false}) titleTpls: QueryList<NgbPanelTitle>;\n  @ContentChildren(NgbPanelHeader, {descendants: false}) headerTpls: QueryList<NgbPanelHeader>;\n  @ContentChildren(NgbPanelContent, {descendants: false}) contentTpls: QueryList<NgbPanelContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.headerTpl = this.headerTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * An event emitted right before toggling an accordion panel.\n */\nexport interface NgbPanelChangeEvent {\n  /**\n   * The id of the accordion panel that is being toggled.\n   */\n  panelId: string;\n\n  /**\n   * The next state of the panel.\n   *\n   * `true` if it will be opened, `false` if closed.\n   */\n  nextState: boolean;\n\n  /**\n   * Calling this function will prevent panel toggling.\n   */\n  preventDefault: () => void;\n}\n\n/**\n * Accordion is a collection of collapsible panels (bootstrap cards).\n *\n * It can ensure only one panel is opened at a time and allows to customize panel\n * headers.\n */\n@Component({\n  selector: 'ngb-accordion',\n  exportAs: 'ngbAccordion',\n  host: {'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels'},\n  template: `\n    <ng-template #t ngbPanelHeader let-panel>\n      <button class=\"btn btn-link\" [ngbPanelToggle]=\"panel\">\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n      </button>\n    </ng-template>\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div class=\"card\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <ng-template [ngTemplateOutlet]=\"panel.headerTpl?.templateRef || t\"\n                       [ngTemplateOutletContext]=\"{$implicit: panel, opened: panel.isOpen}\"></ng-template>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             class=\"collapse\" [class.show]=\"panel.isOpen\" *ngIf=\"!destroyOnHide || panel.isOpen\">\n          <div class=\"card-body\">\n               <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbAccordion implements AfterContentChecked {\n  @ContentChildren(NgbPanel) panels: QueryList<NgbPanel>;\n\n  /**\n   * An array or comma separated strings of panel ids that should be opened **initially**.\n   *\n   * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n   * the `(panelChange)` event.\n   */\n  @Input() activeIds: string | string[] = [];\n\n  /**\n   *  If `true`, only one panel could be opened at a time.\n   *\n   *  Opening a new panel will close others.\n   */\n  @Input('closeOthers') closeOtherPanels: boolean;\n\n  /**\n   * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * Type of panels.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  /**\n   * Event emitted right before the panel toggle happens.\n   *\n   * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n   */\n  @Output() panelChange = new EventEmitter<NgbPanelChangeEvent>();\n\n  constructor(config: NgbAccordionConfig) {\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n\n  /**\n   * Checks if a panel with a given id is expanded.\n   */\n  isExpanded(panelId: string): boolean { return this.activeIds.indexOf(panelId) > -1; }\n\n  /**\n   * Expands a panel with a given id.\n   *\n   * Has no effect if the panel is already expanded or disabled.\n   */\n  expand(panelId: string): void { this._changeOpenState(this._findPanelById(panelId), true); }\n\n  /**\n   * Expands all panels, if `[closeOthers]` is `false`.\n   *\n   * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n   */\n  expandAll(): void {\n    if (this.closeOtherPanels) {\n      if (this.activeIds.length === 0 && this.panels.length) {\n        this._changeOpenState(this.panels.first, true);\n      }\n    } else {\n      this.panels.forEach(panel => this._changeOpenState(panel, true));\n    }\n  }\n\n  /**\n   * Collapses a panel with the given id.\n   *\n   * Has no effect if the panel is already collapsed or disabled.\n   */\n  collapse(panelId: string) { this._changeOpenState(this._findPanelById(panelId), false); }\n\n  /**\n   * Collapses all opened panels.\n   */\n  collapseAll() {\n    this.panels.forEach((panel) => { this._changeOpenState(panel, false); });\n  }\n\n  /**\n   * Toggles a panel with the given id.\n   *\n   * Has no effect if the panel is disabled.\n   */\n  toggle(panelId: string) {\n    const panel = this._findPanelById(panelId);\n    if (panel) {\n      this._changeOpenState(panel, !panel.isOpen);\n    }\n  }\n\n  ngAfterContentChecked() {\n    // active id updates\n    if (isString(this.activeIds)) {\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n    }\n\n    // update panels open states\n    this.panels.forEach(panel => panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1);\n\n    // closeOthers updates\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\n      this._closeOthers(this.activeIds[0]);\n      this._updateActiveIds();\n    }\n  }\n\n  private _changeOpenState(panel: NgbPanel, nextState: boolean) {\n    if (panel && !panel.disabled && panel.isOpen !== nextState) {\n      let defaultPrevented = false;\n\n      this.panelChange.emit(\n          {panelId: panel.id, nextState: nextState, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        panel.isOpen = nextState;\n\n        if (nextState && this.closeOtherPanels) {\n          this._closeOthers(panel.id);\n        }\n        this._updateActiveIds();\n      }\n    }\n  }\n\n  private _closeOthers(panelId: string) {\n    this.panels.forEach(panel => {\n      if (panel.id !== panelId) {\n        panel.isOpen = false;\n      }\n    });\n  }\n\n  private _findPanelById(panelId: string): NgbPanel | null { return this.panels.find(p => p.id === panelId); }\n\n  private _updateActiveIds() {\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle} from './accordion';\n\nexport {\n  NgbAccordion,\n  NgbPanel,\n  NgbPanelTitle,\n  NgbPanelContent,\n  NgbPanelChangeEvent,\n  NgbPanelHeader,\n  NgbPanelHeaderContext,\n  NgbPanelToggle\n} from './accordion';\nexport {NgbAccordionConfig} from './accordion-config';\n\nconst NGB_ACCORDION_DIRECTIVES =\n    [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n\n@NgModule({declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule]})\nexport class NgbAccordionModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbAccordionModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAlertConfig {\n  dismissible = true;\n  type = 'warning';\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  Renderer2,\n  ElementRef,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {NgbAlertConfig} from './alert-config';\n\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\n@Component({\n  selector: 'ngb-alert',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'role': 'alert', 'class': 'alert', '[class.alert-dismissible]': 'dismissible'},\n  template: `\n    <ng-content></ng-content>\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"closeHandler()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    `,\n  styleUrls: ['./alert.scss']\n})\nexport class NgbAlert implements OnInit,\n    OnChanges {\n  /**\n   * If `true`, alert can be dismissed by the user.\n   *\n   * The close button (ÃÂ) will be displayed and you can be notified\n   * of the event with the `(close)` output.\n   */\n  @Input() dismissible: boolean;\n  /**\n   * Type of the alert.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n  /**\n   * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n   */\n  @Output() close = new EventEmitter<void>();\n\n  constructor(config: NgbAlertConfig, private _renderer: Renderer2, private _element: ElementRef) {\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n  }\n\n  closeHandler() { this.close.emit(null); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const typeChange = changes['type'];\n    if (typeChange && !typeChange.firstChange) {\n      this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n      this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n    }\n  }\n\n  ngOnInit() { this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`); }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAlert} from './alert';\n\nexport {NgbAlert} from './alert';\nexport {NgbAlertConfig} from './alert-config';\n\n@NgModule({declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert]})\nexport class NgbAlertModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbAlertModule}; }\n}\n","import {Directive} from '@angular/core';\n\n@Directive({\n  selector: '[ngbButtonLabel]',\n  host:\n      {'[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused'}\n})\nexport class NgbButtonLabel {\n  active: boolean;\n  disabled: boolean;\n  focused: boolean;\n}\n","import {ChangeDetectorRef, Directive, forwardRef, Input} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbCheckBox),\n  multi: true\n};\n\n\n/**\n * Allows to easily create Bootstrap-style checkbox buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n@Directive({\n  selector: '[ngbButton][type=checkbox]',\n  host: {\n    'autocomplete': 'off',\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '(change)': 'onInputChange($event)',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  },\n  providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n})\nexport class NgbCheckBox implements ControlValueAccessor {\n  checked;\n\n  /**\n   * If `true`, the checkbox button will be disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * The form control value when the checkbox is checked.\n   */\n  @Input() valueChecked = true;\n\n  /**\n   * The form control value when the checkbox is unchecked.\n   */\n  @Input() valueUnChecked = false;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  set focused(isFocused: boolean) {\n    this._label.focused = isFocused;\n    if (!isFocused) {\n      this.onTouched();\n    }\n  }\n\n  constructor(private _label: NgbButtonLabel, private _cd: ChangeDetectorRef) {}\n\n  onInputChange($event) {\n    const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n    this.onChange(modelToPropagate);\n    this.onTouched();\n    this.writeValue(modelToPropagate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._label.disabled = isDisabled;\n  }\n\n  writeValue(value) {\n    this.checked = value === this.valueChecked;\n    this._label.active = this.checked;\n\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    this._cd.markForCheck();\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, forwardRef, Input, OnDestroy, Renderer2} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRadioGroup),\n  multi: true\n};\n\nlet nextId = 0;\n\n/**\n * Allows to easily create Bootstrap-style radio buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n@Directive({selector: '[ngbRadioGroup]', host: {'role': 'radiogroup'}, providers: [NGB_RADIO_VALUE_ACCESSOR]})\nexport class NgbRadioGroup implements ControlValueAccessor {\n  private _radios: Set<NgbRadio> = new Set<NgbRadio>();\n  private _value = null;\n  private _disabled: boolean;\n\n  get disabled() { return this._disabled; }\n  set disabled(isDisabled: boolean) { this.setDisabledState(isDisabled); }\n\n  /**\n   * Name of the radio group applied to radio input elements.\n   *\n   * Will be applied to all radio input elements inside the group,\n   * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\n   *\n   * If not provided, will be generated in the `ngb-radio-xx` format.\n   */\n  @Input() name = `ngb-radio-${nextId++}`;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  onRadioChange(radio: NgbRadio) {\n    this.writeValue(radio.value);\n    this.onChange(radio.value);\n  }\n\n  onRadioValueUpdate() { this._updateRadiosValue(); }\n\n  register(radio: NgbRadio) { this._radios.add(radio); }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateRadiosDisabled();\n  }\n\n  unregister(radio: NgbRadio) { this._radios.delete(radio); }\n\n  writeValue(value) {\n    this._value = value;\n    this._updateRadiosValue();\n  }\n\n  private _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n  private _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\n}\n\n\n/**\n * A directive that marks an input of type \"radio\" as a part of the\n * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\n */\n@Directive({\n  selector: '[ngbButton][type=radio]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '[name]': 'nameAttr',\n    '(change)': 'onChange()',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  }\n})\nexport class NgbRadio implements OnDestroy {\n  private _checked: boolean;\n  private _disabled: boolean;\n  private _value: any = null;\n\n  /**\n   * The value for the 'name' property of the input element.\n   *\n   * All inputs of the radio group should have the same name. If not specified,\n   * the name of the enclosing group is used.\n   */\n  @Input() name: string;\n\n  /**\n   * The form control value when current radio button is checked.\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    const stringValue = value ? value.toString() : '';\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n    this._group.onRadioValueUpdate();\n  }\n\n  /**\n   * If `true`, current radio button will be disabled.\n   */\n  @Input('disabled')\n  set disabled(isDisabled: boolean) {\n    this._disabled = isDisabled !== false;\n    this.updateDisabled();\n  }\n\n  set focused(isFocused: boolean) {\n    if (this._label) {\n      this._label.focused = isFocused;\n    }\n    if (!isFocused) {\n      this._group.onTouched();\n    }\n  }\n\n  get checked() { return this._checked; }\n\n  get disabled() { return this._group.disabled || this._disabled; }\n\n  get value() { return this._value; }\n\n  get nameAttr() { return this.name || this._group.name; }\n\n  constructor(\n      private _group: NgbRadioGroup, private _label: NgbButtonLabel, private _renderer: Renderer2,\n      private _element: ElementRef<HTMLInputElement>, private _cd: ChangeDetectorRef) {\n    this._group.register(this);\n    this.updateDisabled();\n  }\n\n  ngOnDestroy() { this._group.unregister(this); }\n\n  onChange() { this._group.onRadioChange(this); }\n\n  updateValue(value) {\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    if (this.value !== value) {\n      this._cd.markForCheck();\n    }\n\n    this._checked = this.value === value;\n    this._label.active = this._checked;\n  }\n\n  updateDisabled() { this._label.disabled = this.disabled; }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbButtonLabel} from './label';\nimport {NgbCheckBox} from './checkbox';\nimport {NgbRadio, NgbRadioGroup} from './radio';\n\nexport {NgbButtonLabel} from './label';\nexport {NgbCheckBox} from './checkbox';\nexport {NgbRadio, NgbRadioGroup} from './radio';\n\n\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\n\n@NgModule({declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES})\nexport class NgbButtonsModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbButtonsModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbCarouselConfig {\n  interval = 5000;\n  wrap = true;\n  keyboard = true;\n  pauseOnHover = true;\n  showNavigationArrows = true;\n  showNavigationIndicators = true;\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\nimport {NgbCarouselConfig} from './carousel-config';\n\nimport {merge, Subject, timer} from 'rxjs';\nimport {filter, map, switchMap, takeUntil} from 'rxjs/operators';\n\nlet nextId = 0;\n\n/**\n * A directive that wraps the individual carousel slide.\n */\n@Directive({selector: 'ng-template[ngbSlide]'})\nexport class NgbSlide {\n  /**\n   * Slide id that must be unique for the entire document.\n   *\n   * If not provided, will be generated in the `ngb-slide-xx` format.\n   */\n  @Input() id = `ngb-slide-${nextId++}`;\n  constructor(public tplRef: TemplateRef<any>) {}\n}\n\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\n@Component({\n  selector: 'ngb-carousel',\n  exportAs: 'ngbCarousel',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'carousel slide',\n    '[style.display]': '\"block\"',\n    'tabIndex': '0',\n    '(mouseenter)': 'pauseOnHover && pause()',\n    '(mouseleave)': 'pauseOnHover && cycle()',\n    '(keydown.arrowLeft)': 'keyboard && prev()',\n    '(keydown.arrowRight)': 'keyboard && next()'\n  },\n  template: `\n    <ol class=\"carousel-indicators\" *ngIf=\"showNavigationIndicators\">\n      <li *ngFor=\"let slide of slides\" [id]=\"slide.id\" [class.active]=\"slide.id === activeId\"\n          (click)=\"select(slide.id); pauseOnHover && pause()\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides\" class=\"carousel-item\" [class.active]=\"slide.id === activeId\">\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"prev()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"next()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </a>\n  `\n})\nexport class NgbCarousel implements AfterContentChecked,\n    AfterContentInit, OnChanges, OnDestroy {\n  @ContentChildren(NgbSlide) slides: QueryList<NgbSlide>;\n\n  private _destroy$ = new Subject<void>();\n  private _start$ = new Subject<void>();\n  private _stop$ = new Subject<void>();\n\n  /**\n   * The slide id that should be displayed **initially**.\n   *\n   * For subsequent interactions use methods `select()`, `next()`, etc. and the `(slide)` output.\n   */\n  @Input() activeId: string;\n\n  /**\n   * Time in milliseconds before the next slide is shown.\n   */\n  @Input() interval: number;\n\n  /**\n   * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n   */\n  @Input() wrap: boolean;\n\n  /**\n   * If `true`, allows to interact with carousel using keyboard 'arrow left' and 'arrow right'.\n   */\n  @Input() keyboard: boolean;\n\n  /**\n   * If `true`, will pause slide switching when mouse cursor hovers the slide.\n   *\n   * @since 2.2.0\n   */\n  @Input() pauseOnHover: boolean;\n\n  /**\n   * If `true`, 'previous' and 'next' navigation arrows will be visible on the slide.\n   *\n   * @since 2.2.0\n   */\n  @Input() showNavigationArrows: boolean;\n\n  /**\n   * If `true`, navigation indicators at the bottom of the slide will be visible.\n   *\n   * @since 2.2.0\n   */\n  @Input() showNavigationIndicators: boolean;\n\n  /**\n   * An event emitted right after the slide transition is completed.\n   *\n   * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n   */\n  @Output() slide = new EventEmitter<NgbSlideEvent>();\n\n  constructor(\n      config: NgbCarouselConfig, @Inject(PLATFORM_ID) private _platformId, private _ngZone: NgZone,\n      private _cd: ChangeDetectorRef) {\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n\n  ngAfterContentInit() {\n    // setInterval() doesn't play well with SSR and protractor,\n    // so we should run it in the browser and outside Angular\n    if (isPlatformBrowser(this._platformId)) {\n      this._ngZone.runOutsideAngular(() => {\n        this._start$\n            .pipe(\n                map(() => this.interval), filter(interval => interval > 0 && this.slides.length > 0),\n                switchMap(interval => timer(interval).pipe(takeUntil(merge(this._stop$, this._destroy$)))))\n            .subscribe(() => this._ngZone.run(() => this.next()));\n\n        this._start$.next();\n      });\n    }\n\n    this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(() => this._cd.markForCheck());\n  }\n\n  ngAfterContentChecked() {\n    let activeSlide = this._getSlideById(this.activeId);\n    this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\n  }\n\n  ngOnDestroy() { this._destroy$.next(); }\n\n  ngOnChanges(changes) {\n    if ('interval' in changes && !changes['interval'].isFirstChange()) {\n      this._start$.next();\n    }\n  }\n\n  /**\n   * Navigates to a slide with the specified identifier.\n   */\n  select(slideId: string) { this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId)); }\n\n  /**\n   * Navigates to the previous slide.\n   */\n  prev() { this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT); }\n\n  /**\n   * Navigates to the next slide.\n   */\n  next() { this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT); }\n\n  /**\n   * Pauses cycling through the slides.\n   */\n  pause() { this._stop$.next(); }\n\n  /**\n   * Restarts cycling through the slides from left to right.\n   */\n  cycle() { this._start$.next(); }\n\n  private _cycleToSelected(slideIdx: string, direction: NgbSlideEventDirection) {\n    let selectedSlide = this._getSlideById(slideIdx);\n    if (selectedSlide && selectedSlide.id !== this.activeId) {\n      this.slide.emit({prev: this.activeId, current: selectedSlide.id, direction: direction});\n      this._start$.next();\n      this.activeId = selectedSlide.id;\n    }\n\n    // we get here after the interval fires or any external API call like next(), prev() or select()\n    this._cd.markForCheck();\n  }\n\n  private _getSlideEventDirection(currentActiveSlideId: string, nextActiveSlideId: string): NgbSlideEventDirection {\n    const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n    const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n  }\n\n  private _getSlideById(slideId: string): NgbSlide { return this.slides.find(slide => slide.id === slideId); }\n\n  private _getSlideIdxById(slideId: string): number {\n    return this.slides.toArray().indexOf(this._getSlideById(slideId));\n  }\n\n  private _getNextSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isLastSlide = currentSlideIdx === slideArr.length - 1;\n\n    return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n                         slideArr[currentSlideIdx + 1].id;\n  }\n\n  private _getPrevSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isFirstSlide = currentSlideIdx === 0;\n\n    return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n                          slideArr[currentSlideIdx - 1].id;\n  }\n}\n\n/**\n * A slide change event emitted right after the slide transition is completed.\n */\nexport interface NgbSlideEvent {\n  /**\n   * The previous slide id.\n   */\n  prev: string;\n\n  /**\n   * The current slide id.\n   */\n  current: string;\n\n  /**\n   * The slide event direction.\n   *\n   * Possible values are `'left' | 'right'`.\n   */\n  direction: NgbSlideEventDirection;\n}\n\n/**\n * Defines the carousel slide transition direction.\n */\nexport enum NgbSlideEventDirection {\n  LEFT = <any>'left',\n  RIGHT = <any>'right'\n}\n\nexport const NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NGB_CAROUSEL_DIRECTIVES} from './carousel';\n\nexport {NgbCarousel, NgbSlide, NgbSlideEvent} from './carousel';\nexport {NgbCarouselConfig} from './carousel-config';\n\n@NgModule({declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule]})\nexport class NgbCarouselModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbCarouselModule}; }\n}\n","import {Directive, Input} from '@angular/core';\n\n/**\n * A directive to provide a simple way of hiding and showing elements on the page.\n */\n@Directive({\n  selector: '[ngbCollapse]',\n  exportAs: 'ngbCollapse',\n  host: {'[class.collapse]': 'true', '[class.show]': '!collapsed'}\n})\nexport class NgbCollapse {\n  /**\n   * If `true`, will collapse the element or show it otherwise.\n   */\n  @Input('ngbCollapse') collapsed = false;\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbCollapse} from './collapse';\n\nexport {NgbCollapse} from './collapse';\n\n@NgModule({declarations: [NgbCollapse], exports: [NgbCollapse]})\nexport class NgbCollapseModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbCollapseModule}; }\n}\n","import {NgbDateStruct} from './ngb-date-struct';\nimport {isInteger} from '../util/util';\n\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\nexport class NgbDate implements NgbDateStruct {\n  /**\n   * The year, for example 2016\n   */\n  year: number;\n\n  /**\n   * The month, for example 1=Jan ... 12=Dec as in ISO 8601\n   */\n  month: number;\n\n  /**\n   * The day of month, starting with 1\n   */\n  day: number;\n\n  /**\n   * A **static method** that creates a new date object from the `NgbDateStruct`,\n   *\n   * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n   *\n   * If the `date` is already of `NgbDate` type, the method will return the same object.\n   */\n  static from(date: NgbDateStruct): NgbDate {\n    if (date instanceof NgbDate) {\n      return date;\n    }\n    return date ? new NgbDate(date.year, date.month, date.day) : null;\n  }\n\n  constructor(year: number, month: number, day: number) {\n    this.year = isInteger(year) ? year : null;\n    this.month = isInteger(month) ? month : null;\n    this.day = isInteger(day) ? day : null;\n  }\n\n  /**\n   * Checks if the current date is equal to another date.\n   */\n  equals(other: NgbDateStruct): boolean {\n    return other && this.year === other.year && this.month === other.month && this.day === other.day;\n  }\n\n  /**\n   * Checks if the current date is before another date.\n   */\n  before(other: NgbDateStruct): boolean {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day < other.day;\n      } else {\n        return this.month < other.month;\n      }\n    } else {\n      return this.year < other.year;\n    }\n  }\n\n  /**\n   * Checks if the current date is after another date.\n   */\n  after(other: NgbDateStruct): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day > other.day;\n      } else {\n        return this.month > other.month;\n      }\n    } else {\n      return this.year > other.year;\n    }\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {Injectable} from '@angular/core';\nimport {isInteger} from '../util/util';\n\nexport function fromJSDate(jsDate: Date) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nexport function toJSDate(date: NgbDate) {\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n  // this is done avoid 30 -> 1930 conversion\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n  return jsDate;\n}\n\nexport type NgbPeriod = 'y' | 'm' | 'd';\n\nexport function NGB_DATEPICKER_CALENDAR_FACTORY() {\n  return new NgbCalendarGregorian();\n}\n\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY})\nexport abstract class NgbCalendar {\n  /**\n   * Returns the number of days per week.\n   */\n  abstract getDaysPerWeek(): number;\n\n  /**\n   * Returns an array of months per year.\n   *\n   * With default calendar we use ISO 8601 and return [1, 2, ..., 12];\n   */\n  abstract getMonths(year?: number): number[];\n\n  /**\n   * Returns the number of weeks per month.\n   */\n  abstract getWeeksPerMonth(): number;\n\n  /**\n   * Returns the weekday number for a given day.\n   *\n   * With the default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  abstract getWeekday(date: NgbDate): number;\n\n  /**\n   * Adds a number of years, months or days to a given date.\n   *\n   * * `period` can be `y`, `m` or `d` and defaults to day.\n   * * `number` defaults to 1.\n   *\n   * Always returns a new date.\n   */\n  abstract getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Subtracts a number of years, months or days from a given date.\n   *\n   * * `period` can be `y`, `m` or `d` and defaults to day.\n   * * `number` defaults to 1.\n   *\n   * Always returns a new date.\n   */\n  abstract getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Returns the week number for a given week.\n   */\n  abstract getWeekNumber(week: NgbDate[], firstDayOfWeek: number): number;\n\n  /**\n   * Returns the today's date.\n   */\n  abstract getToday(): NgbDate;\n\n  /**\n   * Checks if a date is valid in the current calendar.\n   */\n  abstract isValid(date: NgbDate): boolean;\n}\n\n@Injectable()\nexport class NgbCalendarGregorian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    let jsDate = toJSDate(date);\n\n    switch (period) {\n      case 'y':\n        return new NgbDate(date.year + number, 1, 1);\n      case 'm':\n        jsDate = new Date(date.year, date.month + number - 1, 1, 12);\n        break;\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        break;\n      default:\n        return date;\n    }\n\n    return fromJSDate(jsDate);\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    let jsDate = toJSDate(date);\n    let day = jsDate.getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let date = week[thursdayIndex];\n\n    const jsDate = toJSDate(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    jsDate.setMonth(0);  // Compare with Jan 1\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromJSDate(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    }\n\n    // year 0 doesn't exist in Gregorian calendar\n    if (date.year === 0) {\n      return false;\n    }\n\n    const jsDate = toJSDate(date);\n\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n        jsDate.getDate() === date.day;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {DatepickerViewModel, DayViewModel, MonthViewModel} from './datepicker-view-model';\nimport {NgbCalendar} from './ngb-calendar';\nimport {isDefined} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport function isChangedDate(prev: NgbDate, next: NgbDate) {\n  return !dateComparator(prev, next);\n}\n\nexport function isChangedMonth(prev: NgbDate, next: NgbDate) {\n  return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\n\nexport function dateComparator(prev: NgbDate, next: NgbDate) {\n  return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\n\nexport function checkMinBeforeMax(minDate: NgbDate, maxDate: NgbDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n  }\n}\n\nexport function checkDateInRange(date: NgbDate, minDate: NgbDate, maxDate: NgbDate): NgbDate {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n\n  return date;\n}\n\nexport function isDateSelectable(date: NgbDate, state: DatepickerViewModel) {\n  const {minDate, maxDate, disabled, markDisabled} = state;\n  // clang-format off\n  return !(\n    !isDefined(date) ||\n    disabled ||\n    (markDisabled && markDisabled(date, {year: date.year, month: date.month})) ||\n    (minDate && date.before(minDate)) ||\n    (maxDate && date.after(maxDate))\n  );\n  // clang-format on\n}\n\nexport function generateSelectBoxMonths(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  let months = calendar.getMonths(date.year);\n\n  if (minDate && date.year === minDate.year) {\n    const index = months.findIndex(month => month === minDate.month);\n    months = months.slice(index);\n  }\n\n  if (maxDate && date.year === maxDate.year) {\n    const index = months.findIndex(month => month === maxDate.month);\n    months = months.slice(0, index + 1);\n  }\n\n  return months;\n}\n\nexport function generateSelectBoxYears(date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  const start = minDate && minDate.year || date.year - 10;\n  const end = maxDate && maxDate.year || date.year + 10;\n\n  return Array.from({length: end - start + 1}, (e, i) => start + i);\n}\n\nexport function nextMonthDisabled(calendar: NgbCalendar, date: NgbDate, maxDate: NgbDate) {\n  return maxDate && calendar.getNext(date, 'm').after(maxDate);\n}\n\nexport function prevMonthDisabled(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate) {\n  const prevDate = calendar.getPrev(date, 'm');\n  return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n                     prevDate.year < minDate.year && minDate.month === 1);\n}\n\nexport function buildMonths(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    force: boolean): MonthViewModel[] {\n  const {displayMonths, months} = state;\n  // move old months to a temporary array\n  const monthsToReuse = months.splice(0, months.length);\n\n  // generate new first dates, nullify or reuse months\n  const firstDates = Array.from({length: displayMonths}, (_, i) => {\n    const firstDate = calendar.getNext(date, 'm', i);\n    months[i] = null;\n\n    if (!force) {\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\n      // move reused month back to months\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n\n    return firstDate;\n  });\n\n  // rebuild nullified months\n  firstDates.forEach((firstDate, i) => {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {} as MonthViewModel);\n    }\n  });\n\n  return months;\n}\n\nexport function buildMonth(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    month: MonthViewModel = {} as MonthViewModel): MonthViewModel {\n  const {dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays} = state;\n  const calendarToday = calendar.getToday();\n\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\n\n  // month has weeks\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    let weekObject = month.weeks[week];\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {number: 0, days: [], collapsed: true};\n    }\n    const days = weekObject.days;\n\n    // week has days\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0) {\n        month.weekdays[day] = calendar.getWeekday(date);\n      }\n\n      const newDate = new NgbDate(date.year, date.month, date.day);\n      const nextDate = calendar.getNext(newDate);\n\n      const ariaLabel = i18n.getDayAriaLabel(newDate);\n\n      // marking date as disabled\n      let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {month: month.number, year: month.year});\n      }\n\n      // today\n      let today = newDate.equals(calendarToday);\n\n      // adding user-provided data to the context\n      let contextUserData =\n          dayTemplateData ? dayTemplateData(newDate, {month: month.number, year: month.year}) : undefined;\n\n      // saving first date of the month\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      }\n\n      // saving last date of the month\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      let dayObject = days[day];\n      if (!dayObject) {\n        dayObject = days[day] = {} as DayViewModel;\n      }\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        $implicit: newDate,\n        date: newDate,\n        data: contextUserData,\n        currentMonth: month.number, disabled,\n        focused: false,\n        selected: false, today\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n\n      date = nextDate;\n    }\n\n    weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek);\n\n    // marking week as collapsed\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n        days[days.length - 1].date.month !== month.number;\n  }\n\n  return month;\n}\n\nexport function getFirstViewDate(calendar: NgbCalendar, date: NgbDate, firstDayOfWeek: number): NgbDate {\n  const daysPerWeek = calendar.getDaysPerWeek();\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth, formatDate} from '@angular/common';\nimport {NgbDateStruct} from './ngb-date-struct';\n\nexport function NGB_DATEPICKER_18N_FACTORY(locale) {\n  return new NgbDatepickerI18nDefault(locale);\n}\n\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbDatepickerI18n {\n  /**\n   * Returns the short weekday name to display in the heading of the month view.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  abstract getWeekdayShortName(weekday: number): string;\n\n  /**\n   * Returns the short month name to display in the date picker navigation.\n   *\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   */\n  abstract getMonthShortName(month: number, year?: number): string;\n\n  /**\n   * Returns the full month name to display in the date picker navigation.\n   *\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   */\n  abstract getMonthFullName(month: number, year?: number): string;\n\n  /**\n   * Returns the value of the `aria-label` attribute for a specific date.\n   *\n   * @since 2.0.0\n   */\n  abstract getDayAriaLabel(date: NgbDateStruct): string;\n\n  /**\n   * Returns the textual representation of a day that is rendered in a day cell.\n   *\n   * @since 3.0.0\n   */\n  getDayNumerals(date: NgbDateStruct): string { return `${date.day}`; }\n\n  /**\n   * Returns the textual representation of a week number rendered by datepicker.\n   *\n   * @since 3.0.0\n   */\n  getWeekNumerals(weekNumber: number): string { return `${weekNumber}`; }\n\n  /**\n   * Returns the textual representation of a year that is rendered in the datepicker year select box.\n   *\n   * @since 3.0.0\n   */\n  getYearNumerals(year: number): string { return `${year}`; }\n}\n\n@Injectable()\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n  private _weekdaysShort: Array<string>;\n  private _monthsShort: Array<string>;\n  private _monthsFull: Array<string>;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string) {\n    super();\n\n    const weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n    this._weekdaysShort = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n\n    this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n  }\n\n  getWeekdayShortName(weekday: number): string { return this._weekdaysShort[weekday - 1]; }\n\n  getMonthShortName(month: number): string { return this._monthsShort[month - 1]; }\n\n  getMonthFullName(month: number): string { return this._monthsFull[month - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    const jsDate = new Date(date.year, date.month - 1, date.day);\n    return formatDate(jsDate, 'fullDate', this._locale);\n  }\n}\n","import {NgbCalendar, NgbPeriod} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DatepickerViewModel, NgbDayTemplateData, NgbMarkDisabled} from './datepicker-view-model';\nimport {Injectable} from '@angular/core';\nimport {isInteger, toInteger} from '../util/util';\nimport {Observable, Subject} from 'rxjs';\nimport {\n  buildMonths,\n  checkDateInRange,\n  checkMinBeforeMax,\n  isChangedDate,\n  isChangedMonth,\n  isDateSelectable,\n  generateSelectBoxYears,\n  generateSelectBoxMonths,\n  prevMonthDisabled,\n  nextMonthDisabled\n} from './datepicker-tools';\n\nimport {filter} from 'rxjs/operators';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Injectable()\nexport class NgbDatepickerService {\n  private _model$ = new Subject<DatepickerViewModel>();\n\n  private _select$ = new Subject<NgbDate>();\n\n  private _state: DatepickerViewModel = {\n    disabled: false,\n    displayMonths: 1,\n    firstDayOfWeek: 1,\n    focusVisible: false,\n    months: [],\n    navigation: 'select',\n    outsideDays: 'visible',\n    prevDisabled: false,\n    nextDisabled: false,\n    selectBoxes: {years: [], months: []},\n    selectedDate: null\n  };\n\n  get model$(): Observable<DatepickerViewModel> { return this._model$.pipe(filter(model => model.months.length > 0)); }\n\n  get select$(): Observable<NgbDate> { return this._select$.pipe(filter(date => date !== null)); }\n\n  set dayTemplateData(dayTemplateData: NgbDayTemplateData) {\n    if (this._state.dayTemplateData !== dayTemplateData) {\n      this._nextState({dayTemplateData});\n    }\n  }\n\n  set disabled(disabled: boolean) {\n    if (this._state.disabled !== disabled) {\n      this._nextState({disabled});\n    }\n  }\n\n  set displayMonths(displayMonths: number) {\n    displayMonths = toInteger(displayMonths);\n    if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n      this._nextState({displayMonths});\n    }\n  }\n\n  set firstDayOfWeek(firstDayOfWeek: number) {\n    firstDayOfWeek = toInteger(firstDayOfWeek);\n    if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n      this._nextState({firstDayOfWeek});\n    }\n  }\n\n  set focusVisible(focusVisible: boolean) {\n    if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n      this._nextState({focusVisible});\n    }\n  }\n\n  set maxDate(date: NgbDate) {\n    const maxDate = this.toValidDate(date, null);\n    if (isChangedDate(this._state.maxDate, maxDate)) {\n      this._nextState({maxDate});\n    }\n  }\n\n  set markDisabled(markDisabled: NgbMarkDisabled) {\n    if (this._state.markDisabled !== markDisabled) {\n      this._nextState({markDisabled});\n    }\n  }\n\n  set minDate(date: NgbDate) {\n    const minDate = this.toValidDate(date, null);\n    if (isChangedDate(this._state.minDate, minDate)) {\n      this._nextState({minDate});\n    }\n  }\n\n  set navigation(navigation: 'select' | 'arrows' | 'none') {\n    if (this._state.navigation !== navigation) {\n      this._nextState({navigation});\n    }\n  }\n\n  set outsideDays(outsideDays: 'visible' | 'collapsed' | 'hidden') {\n    if (this._state.outsideDays !== outsideDays) {\n      this._nextState({outsideDays});\n    }\n  }\n\n  constructor(private _calendar: NgbCalendar, private _i18n: NgbDatepickerI18n) {}\n\n  focus(date: NgbDate) {\n    if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n      this._nextState({focusDate: date});\n    }\n  }\n\n  focusMove(period?: NgbPeriod, number?: number) {\n    this.focus(this._calendar.getNext(this._state.focusDate, period, number));\n  }\n\n  focusSelect() {\n    if (isDateSelectable(this._state.focusDate, this._state)) {\n      this.select(this._state.focusDate, {emitEvent: true});\n    }\n  }\n\n  open(date: NgbDate) {\n    const firstDate = this.toValidDate(date, this._calendar.getToday());\n    if (!this._state.disabled && (!this._state.firstDate || isChangedMonth(this._state.firstDate, date))) {\n      this._nextState({firstDate});\n    }\n  }\n\n  select(date: NgbDate, options: {emitEvent?: boolean} = {}) {\n    const selectedDate = this.toValidDate(date, null);\n    if (!this._state.disabled) {\n      if (isChangedDate(this._state.selectedDate, selectedDate)) {\n        this._nextState({selectedDate});\n      }\n\n      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n        this._select$.next(selectedDate);\n      }\n    }\n  }\n\n  toValidDate(date: NgbDateStruct, defaultValue?: NgbDate): NgbDate {\n    const ngbDate = NgbDate.from(date);\n    if (defaultValue === undefined) {\n      defaultValue = this._calendar.getToday();\n    }\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n  }\n\n  private _nextState(patch: Partial<DatepickerViewModel>) {\n    const newState = this._updateState(patch);\n    this._patchContexts(newState);\n    this._state = newState;\n    this._model$.next(this._state);\n  }\n\n  private _patchContexts(state: DatepickerViewModel) {\n    const {months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays} = state;\n    state.months.forEach(month => {\n      month.weeks.forEach(week => {\n        week.days.forEach(day => {\n\n          // patch focus flag\n          if (focusDate) {\n            day.context.focused = focusDate.equals(day.date) && focusVisible;\n          }\n\n          // calculating tabindex\n          day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n\n          // override context disabled\n          if (disabled === true) {\n            day.context.disabled = true;\n          }\n\n          // patch selection flag\n          if (selectedDate !== undefined) {\n            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n          }\n\n          // visibility\n          if (month.number !== day.date.month) {\n            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                 day.date.before(months[displayMonths - 1].lastDate));\n          }\n        });\n      });\n    });\n  }\n\n  private _updateState(patch: Partial<DatepickerViewModel>): DatepickerViewModel {\n    // patching fields\n    const state = Object.assign({}, this._state, patch);\n\n    let startDate = state.firstDate;\n\n    // min/max dates changed\n    if ('minDate' in patch || 'maxDate' in patch) {\n      checkMinBeforeMax(state.minDate, state.maxDate);\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n    }\n\n    // disabled\n    if ('disabled' in patch) {\n      state.focusVisible = false;\n    }\n\n    // initial rebuild via 'select()'\n    if ('selectedDate' in patch && this._state.months.length === 0) {\n      startDate = state.selectedDate;\n    }\n\n    // terminate early if only focus visibility was changed\n    if ('focusVisible' in patch) {\n      return state;\n    }\n\n    // focus date changed\n    if ('focusDate' in patch) {\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n\n      // nothing to rebuild if only focus changed and it is still visible\n      if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n          !state.focusDate.after(state.lastDate)) {\n        return state;\n      }\n    }\n\n    // first date changed\n    if ('firstDate' in patch) {\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.firstDate;\n    }\n\n    // rebuilding months\n    if (startDate) {\n      const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch ||\n          'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n\n      const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n\n      // updating months and boundary dates\n      state.months = months;\n      state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n      state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n\n      // reset selected date if 'markDisabled' returns true\n      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n        state.selectedDate = null;\n      }\n\n      // adjusting focus after months were built\n      if ('firstDate' in patch) {\n        if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n            state.focusDate.after(state.lastDate)) {\n          state.focusDate = startDate;\n        }\n      }\n\n      // adjusting months/years for the select box navigation\n      const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n      const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n      if (state.navigation === 'select') {\n        // years ->  boundaries (min/max were changed)\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n        }\n\n        // months -> when current year or boundaries change\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n          state.selectBoxes.months =\n              generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n        }\n      } else {\n        state.selectBoxes = {years: [], months: []};\n      }\n\n      // updating navigation arrows -> boundaries change (min/max) or month/year changes\n      if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n          (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n      }\n    }\n\n    return state;\n  }\n}\n","export enum Key {\n  Tab = 9,\n  Enter = 13,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {NgbCalendar} from './ngb-calendar';\nimport {Key} from '../util/key';\nimport {NgbDate} from './ngb-date';\n\n@Injectable()\nexport class NgbDatepickerKeyMapService {\n  private _minDate: NgbDate;\n  private _maxDate: NgbDate;\n  private _firstViewDate: NgbDate;\n  private _lastViewDate: NgbDate;\n\n  constructor(private _service: NgbDatepickerService, private _calendar: NgbCalendar) {\n    _service.model$.subscribe(model => {\n      this._minDate = model.minDate;\n      this._maxDate = model.maxDate;\n      this._firstViewDate = model.firstDate;\n      this._lastViewDate = model.lastDate;\n    });\n  }\n\n  processKey(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.PageUp:\n        this._service.focusMove(event.shiftKey ? 'y' : 'm', -1);\n        break;\n      case Key.PageDown:\n        this._service.focusMove(event.shiftKey ? 'y' : 'm', 1);\n        break;\n      case Key.End:\n        this._service.focus(event.shiftKey ? this._maxDate : this._lastViewDate);\n        break;\n      case Key.Home:\n        this._service.focus(event.shiftKey ? this._minDate : this._firstViewDate);\n        break;\n      case Key.ArrowLeft:\n        this._service.focusMove('d', -1);\n        break;\n      case Key.ArrowUp:\n        this._service.focusMove('d', -this._calendar.getDaysPerWeek());\n        break;\n      case Key.ArrowRight:\n        this._service.focusMove('d', 1);\n        break;\n      case Key.ArrowDown:\n        this._service.focusMove('d', this._calendar.getDaysPerWeek());\n        break;\n      case Key.Enter:\n      case Key.Space:\n        this._service.focusSelect();\n        break;\n      default:\n        return;\n    }\n\n    // note 'return' in default case\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\nexport type NgbMarkDisabled = (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\nexport type NgbDayTemplateData = (date: NgbDateStruct, current: {year: number, month: number}) => any;\n\nexport type DayViewModel = {\n  date: NgbDate,\n  context: DayTemplateContext,\n  tabindex: number,\n  ariaLabel: string,\n  hidden: boolean\n};\n\nexport type WeekViewModel = {\n  number: number,\n  days: DayViewModel[],\n  collapsed: boolean\n};\n\nexport type MonthViewModel = {\n  firstDate: NgbDate,\n  lastDate: NgbDate,\n  number: number,\n  year: number,\n  weeks: WeekViewModel[],\n  weekdays: number[]\n};\n\n// clang-format off\nexport type DatepickerViewModel = {\n  dayTemplateData?: NgbDayTemplateData,\n  disabled: boolean,\n  displayMonths: number,\n  firstDate?: NgbDate,\n  firstDayOfWeek: number,\n  focusDate?: NgbDate,\n  focusVisible: boolean,\n  lastDate?: NgbDate,\n  markDisabled?: NgbMarkDisabled,\n  maxDate?: NgbDate,\n  minDate?: NgbDate,\n  months: MonthViewModel[],\n  navigation: 'select' | 'arrows' | 'none',\n  outsideDays: 'visible' | 'collapsed' | 'hidden',\n  prevDisabled: boolean,\n  nextDisabled: boolean,\n  selectBoxes: {\n    years: number[],\n    months: number[]\n  },\n  selectedDate: NgbDate\n};\n// clang-format on\n\nexport enum NavigationEvent {\n  PREV,\n  NEXT\n}\n","import {Injectable, TemplateRef} from '@angular/core';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerConfig {\n  dayTemplate: TemplateRef<DayTemplateContext>;\n  dayTemplateData: (date: NgbDateStruct, current: {year: number, month: number}) => any;\n  footerTemplate: TemplateRef<any>;\n  displayMonths = 1;\n  firstDayOfWeek = 1;\n  markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n  minDate: NgbDateStruct;\n  maxDate: NgbDateStruct;\n  navigation: 'select' | 'arrows' | 'none' = 'select';\n  outsideDays: 'visible' | 'collapsed' | 'hidden' = 'visible';\n  showWeekdays = true;\n  showWeekNumbers = false;\n  startDate: {year: number, month: number};\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\nexport function NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n  return new NgbDateStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY})\nexport abstract class NgbDateAdapter<D> {\n  /**\n   * Converts a user-model date of type `D` to an `NgbDateStruct` for internal use.\n   */\n  abstract fromModel(value: D): NgbDateStruct;\n\n  /**\n   * Converts an internal `NgbDateStruct` date to a user-model date of type `D`.\n   */\n  abstract toModel(date: NgbDateStruct): D;\n}\n\n@Injectable()\nexport class NgbDateStructAdapter extends NgbDateAdapter<NgbDateStruct> {\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  fromModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  toModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n}\n","import {fromEvent, merge, Subject} from 'rxjs';\nimport {filter, take, takeUntil} from 'rxjs/operators';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {NgbDatepickerKeyMapService} from './datepicker-keymap-service';\nimport {DatepickerViewModel, NavigationEvent} from './datepicker-view-model';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {isChangedDate, isChangedMonth} from './datepicker-tools';\nimport {hasClassName} from '../util/util';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbDatepicker),\n  multi: true\n};\n\n/**\n * An event emitted right before the navigation happens and the month displayed by the datepicker changes.\n */\nexport interface NgbDatepickerNavigateEvent {\n  /**\n   * The currently displayed month.\n   */\n  current: {year: number, month: number};\n\n  /**\n   * The month we're navigating to.\n   */\n  next: {year: number, month: number};\n\n  /**\n   * Calling this function will prevent navigation from happening.\n   *\n   * @since 4.1.0\n   */\n  preventDefault: () => void;\n}\n\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\n@Component({\n  exportAs: 'ngbDatepicker',\n  selector: 'ngb-datepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker.scss'],\n  template: `\n    <ng-template #dt let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header bg-light\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div #months class=\"ngb-dp-months\" (keydown)=\"onKeyDown($event)\">\n      <ng-template ngFor let-month [ngForOf]=\"model.months\" let-i=\"index\">\n        <div class=\"ngb-dp-month\">\n          <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\"\n                class=\"ngb-dp-month-name bg-light\">\n            {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n          </div>\n          <ngb-datepicker-month-view\n            [month]=\"month\"\n            [dayTemplate]=\"dayTemplate || dt\"\n            [showWeekdays]=\"showWeekdays\"\n            [showWeekNumbers]=\"showWeekNumbers\"\n            (select)=\"onDateSelect($event)\">\n          </ngb-datepicker-month-view>\n        </div>\n      </ng-template>\n    </div>\n\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n  `,\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService, NgbDatepickerKeyMapService]\n})\nexport class NgbDatepicker implements OnDestroy,\n    OnChanges, OnInit, AfterViewInit, ControlValueAccessor {\n  model: DatepickerViewModel;\n\n  @ViewChild('months') private _monthsEl: ElementRef<HTMLElement>;\n  private _controlValue: NgbDate;\n  private _destroyed$ = new Subject<void>();\n\n  /**\n   * The reference to a custom template for the day.\n   *\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\n   *\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * The callback to pass any arbitrary data to the template cell via the\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * The number of months to display.\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * The first day of the week.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * The reference to the custom template for the datepicker footer.\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * The callback to mark some dates as disabled.\n   *\n   * It is called for each new date when navigating to a different month.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * The latest date that can be displayed or selected.\n   *\n   * If not provided, 'year' select box will display 10 years after the current month.\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * The earliest date that can be displayed or selected.\n   *\n   * If not provided, 'year' select box will display 10 years before the current month.\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * Navigation type.\n   *\n   * * `\"select\"` - select boxes for month and navigation arrows\n   * * `\"arrows\"` - only navigation arrows\n   * * `\"none\"` - no navigation visible at all\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way of displaying days that don't belong to the current month.\n   *\n   * * `\"visible\"` - days are visible\n   * * `\"hidden\"` - days are hidden, white space preserved\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n   *\n   * For the 2+ months view, days in between months are never shown.\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * If `true`, weekdays will be displayed.\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * If `true`, week numbers will be displayed.\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * The date to open calendar with.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date is provided, calendar will open with current month.\n   *\n   * You could use `navigateTo(date)` method as an alternative.\n   */\n  @Input() startDate: {year: number, month: number, day?: number};\n\n  /**\n   * An event emitted right before the navigation happens and displayed month changes.\n   *\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   */\n  @Output() select = new EventEmitter<NgbDate>();\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(\n      private _keyMapService: NgbDatepickerKeyMapService, public _service: NgbDatepickerService,\n      private _calendar: NgbCalendar, public i18n: NgbDatepickerI18n, config: NgbDatepickerConfig,\n      private _cd: ChangeDetectorRef, private _elementRef: ElementRef<HTMLElement>,\n      private _ngbDateAdapter: NgbDateAdapter<any>, private _ngZone: NgZone) {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n        .forEach(input => this[input] = config[input]);\n\n    _service.select$.pipe(takeUntil(this._destroyed$)).subscribe(date => { this.select.emit(date); });\n\n    _service.model$.pipe(takeUntil(this._destroyed$)).subscribe(model => {\n      const newDate = model.firstDate;\n      const oldDate = this.model ? this.model.firstDate : null;\n\n      let navigationPrevented = false;\n      // emitting navigation event if the first month changes\n      if (!newDate.equals(oldDate)) {\n        this.navigate.emit({\n          current: oldDate ? {year: oldDate.year, month: oldDate.month} : null,\n          next: {year: newDate.year, month: newDate.month},\n          preventDefault: () => navigationPrevented = true\n        });\n\n        // can't prevent the very first navigation\n        if (navigationPrevented && oldDate !== null) {\n          this._service.open(oldDate);\n          return;\n        }\n      }\n\n      const newSelectedDate = model.selectedDate;\n      const newFocusedDate = model.focusDate;\n      const oldFocusedDate = this.model ? this.model.focusDate : null;\n\n      this.model = model;\n\n      // handling selection change\n      if (isChangedDate(newSelectedDate, this._controlValue)) {\n        this._controlValue = newSelectedDate;\n        this.onTouched();\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n      }\n\n      // handling focus change\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        this.focus();\n      }\n\n      _cd.markForCheck();\n    });\n  }\n\n  focus() {\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      const elementToFocus =\n          this._elementRef.nativeElement.querySelector<HTMLDivElement>('div.ngb-dp-day[tabindex=\"0\"]');\n      if (elementToFocus) {\n        elementToFocus.focus();\n      }\n    });\n  }\n\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n  navigateTo(date?: {year: number, month: number, day?: number}) {\n    this._service.open(NgbDate.from(date ? date.day ? date as NgbDateStruct : {...date, day: 1} : null));\n  }\n\n  ngAfterViewInit() {\n    this._ngZone.runOutsideAngular(() => {\n      const focusIns$ = fromEvent<FocusEvent>(this._monthsEl.nativeElement, 'focusin');\n      const focusOuts$ = fromEvent<FocusEvent>(this._monthsEl.nativeElement, 'focusout');\n\n      // we're changing 'focusVisible' only when entering or leaving months view\n      // and ignoring all focus events where both 'target' and 'related' target are day cells\n      merge(focusIns$, focusOuts$)\n          .pipe(\n              filter(\n                  ({target, relatedTarget}) =>\n                      !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day'))),\n              takeUntil(this._destroyed$))\n          .subscribe(({type}) => this._ngZone.run(() => this._service.focusVisible = type === 'focusin'));\n    });\n  }\n\n  ngOnDestroy() { this._destroyed$.next(); }\n\n  ngOnInit() {\n    if (this.model === undefined) {\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n       'outsideDays']\n          .forEach(input => this._service[input] = this[input]);\n      this.navigateTo(this.startDate);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n     'outsideDays']\n        .filter(input => input in changes)\n        .forEach(input => this._service[input] = this[input]);\n\n    if ('startDate' in changes) {\n      const {currentValue, previousValue} = changes.startDate;\n      if (isChangedMonth(previousValue, currentValue)) {\n        this.navigateTo(this.startDate);\n      }\n    }\n  }\n\n  onDateSelect(date: NgbDate) {\n    this._service.focus(date);\n    this._service.select(date, {emitEvent: true});\n  }\n\n  onKeyDown(event: KeyboardEvent) { this._keyMapService.processKey(event); }\n\n  onNavigateDateSelect(date: NgbDate) { this._service.open(date); }\n\n  onNavigateEvent(event: NavigationEvent) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n        break;\n      case NavigationEvent.NEXT:\n        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n        break;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this._service.disabled = isDisabled; }\n\n  writeValue(value) {\n    this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n    this._service.select(this._controlValue);\n  }\n}\n","import {Component, Input, TemplateRef, Output, EventEmitter, ViewEncapsulation} from '@angular/core';\nimport {MonthViewModel, DayViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\n@Component({\n  selector: 'ngb-datepicker-month-view',\n  host: {'role': 'grid'},\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-month-view.scss'],\n  template: `\n    <div *ngIf=\"showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays bg-light\">\n      <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of month.weekdays\" class=\"ngb-dp-weekday small\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"month.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day)\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [class.ngb-dp-today]=\"day.context.today\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbDatepickerMonthView {\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n  @Input() month: MonthViewModel;\n  @Input() showWeekdays;\n  @Input() showWeekNumbers;\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  doSelect(day: DayViewModel) {\n    if (!day.context.disabled && !day.hidden) {\n      this.select.emit(day.date);\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {NavigationEvent, MonthViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-navigation.scss'],\n  template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"navigate.emit(navigation.PREV)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"navigate.emit(navigation.NEXT)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `\n})\nexport class NgbDatepickerNavigation {\n  navigation = NavigationEvent;\n\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: MonthViewModel[] = [];\n  @Input() showSelect: boolean;\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() selectBoxes: {years: number[], months: number[]};\n\n  @Output() navigate = new EventEmitter<NavigationEvent>();\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n}\n","import {NgZone} from '@angular/core';\nimport {fromEvent, Observable, race} from 'rxjs';\nimport {delay, filter, map, takeUntil, withLatestFrom} from 'rxjs/operators';\nimport {Key} from './key';\nimport {closest} from './util';\n\nconst isContainedIn = (element: HTMLElement, array?: HTMLElement[]) =>\n    array ? array.some(item => item.contains(element)) : false;\n\nconst matchesSelectorIfAny = (element: HTMLElement, selector?: string) =>\n    !selector || closest(element, selector) != null;\n\n// we'll have to use 'touch' events instead of 'mouse' events on iOS and add a more significant delay\n// to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\nlet iOS = false;\nif (typeof navigator !== 'undefined') {\n  iOS = !!navigator.userAgent && /iPad|iPhone|iPod/.test(navigator.userAgent);\n}\n\nexport function ngbAutoClose(\n    zone: NgZone, document: any, type: boolean | 'inside' | 'outside', close: () => void, closed$: Observable<any>,\n    insideElements: HTMLElement[], ignoreElements?: HTMLElement[], insideSelector?: string) {\n  // closing on ESC and outside clicks\n  if (type) {\n    zone.runOutsideAngular(() => {\n\n      const shouldCloseOnClick = (event: MouseEvent | TouchEvent) => {\n        const element = event.target as HTMLElement;\n        if ((event instanceof MouseEvent && event.button === 2) || isContainedIn(element, ignoreElements)) {\n          return false;\n        }\n        if (type === 'inside') {\n          return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n        } else if (type === 'outside') {\n          return !isContainedIn(element, insideElements);\n        } else /* if (type === true) */ {\n          return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n        }\n      };\n\n      const escapes$ = fromEvent<KeyboardEvent>(document, 'keydown')\n                           .pipe(\n                               takeUntil(closed$),\n                               // tslint:disable-next-line:deprecation\n                               filter(e => e.which === Key.Escape));\n\n\n      // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown/touchstart',\n      // because on 'mouseup/touchend' DOM nodes might be detached\n      const mouseDowns$ = fromEvent<MouseEvent>(document, iOS ? 'touchstart' : 'mousedown')\n                              .pipe(map(shouldCloseOnClick), takeUntil(closed$));\n\n      const closeableClicks$ = fromEvent<MouseEvent>(document, iOS ? 'touchend' : 'mouseup')\n                                   .pipe(\n                                       withLatestFrom(mouseDowns$), filter(([_, shouldClose]) => shouldClose),\n                                       delay(iOS ? 16 : 0), takeUntil(closed$));\n\n\n      race<Event>([escapes$, closeableClicks$]).subscribe(() => zone.run(close));\n    });\n  }\n}\n","import {fromEvent, Observable} from 'rxjs';\nimport {filter, map, takeUntil, withLatestFrom} from 'rxjs/operators';\n\nimport {Key} from '../util/key';\n\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n  'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n  'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nexport function getFocusableBoundaryElements(element: HTMLElement): HTMLElement[] {\n  const list: HTMLElement[] =\n      Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR) as NodeListOf<HTMLElement>)\n          .filter(el => el.tabIndex !== -1);\n  return [list[0], list[list.length - 1]];\n}\n\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\nexport const ngbFocusTrap = (element: HTMLElement, stopFocusTrap$: Observable<any>, refocusOnClick = false) => {\n  // last focused element\n  const lastFocusedElement$ =\n      fromEvent<FocusEvent>(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target));\n\n  // 'tab' / 'shift+tab' stream\n  fromEvent<KeyboardEvent>(element, 'keydown')\n      .pipe(\n          takeUntil(stopFocusTrap$),\n          // tslint:disable:deprecation\n          filter(e => e.which === Key.Tab),\n          // tslint:enable:deprecation\n          withLatestFrom(lastFocusedElement$))\n      .subscribe(([tabEvent, focusedElement]) => {\n        const[first, last] = getFocusableBoundaryElements(element);\n\n        if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n          last.focus();\n          tabEvent.preventDefault();\n        }\n\n        if (focusedElement === last && !tabEvent.shiftKey) {\n          first.focus();\n          tabEvent.preventDefault();\n        }\n      });\n\n  // inside click\n  if (refocusOnClick) {\n    fromEvent(element, 'click')\n        .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1] as HTMLElement))\n        .subscribe(lastFocusedElement => lastFocusedElement.focus());\n  }\n};\n","// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nexport class Positioning {\n  private getAllStyles(element: HTMLElement) { return window.getComputedStyle(element); }\n\n  private getStyle(element: HTMLElement, prop: string): string { return this.getAllStyles(element)[prop]; }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n\n  position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0};\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      elPosition = element.getBoundingClientRect();\n      elPosition = {\n        top: elPosition.top,\n        bottom: elPosition.bottom,\n        left: elPosition.left,\n        right: elPosition.right,\n        height: elPosition.height,\n        width: elPosition.width\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  /*\n    Return false if the element to position is outside the viewport\n  */\n  positionElements(hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean):\n      boolean {\n    const[placementPrimary = 'top', placementSecondary = 'center'] = placement.split('-');\n\n    const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n\n    const marginTop = parseFloat(targetElStyles.marginTop);\n    const marginBottom = parseFloat(targetElStyles.marginBottom);\n    const marginLeft = parseFloat(targetElStyles.marginLeft);\n    const marginRight = parseFloat(targetElStyles.marginRight);\n\n    let topPosition = 0;\n    let leftPosition = 0;\n\n    switch (placementPrimary) {\n      case 'top':\n        topPosition = (hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom));\n        break;\n      case 'bottom':\n        topPosition = (hostElPosition.top + hostElPosition.height);\n        break;\n      case 'left':\n        leftPosition = (hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight));\n        break;\n      case 'right':\n        leftPosition = (hostElPosition.left + hostElPosition.width);\n        break;\n    }\n\n    switch (placementSecondary) {\n      case 'top':\n        topPosition = hostElPosition.top;\n        break;\n      case 'bottom':\n        topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n        break;\n      case 'left':\n        leftPosition = hostElPosition.left;\n        break;\n      case 'right':\n        leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n        break;\n      case 'center':\n        if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n          leftPosition = (hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2);\n        } else {\n          topPosition = (hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2);\n        }\n        break;\n    }\n\n    /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\n    // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\n    targetElement.style.transform = `translate(${Math.round(leftPosition)}px, ${Math.round(topPosition)}px)`;\n\n    // Check if the targetElement is inside the viewport\n    const targetElBCR = targetElement.getBoundingClientRect();\n    const html = document.documentElement;\n    const windowHeight = window.innerHeight || html.clientHeight;\n    const windowWidth = window.innerWidth || html.clientWidth;\n\n    return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth &&\n        targetElBCR.bottom <= windowHeight;\n  }\n}\n\nconst placementSeparator = /\\s+/;\nconst positionService = new Positioning();\n\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\nexport function positionElements(\n    hostElement: HTMLElement, targetElement: HTMLElement, placement: string | Placement | PlacementArray,\n    appendToBody?: boolean, baseClass?: string): Placement {\n  let placementVals: Array<Placement> =\n      Array.isArray(placement) ? placement : placement.split(placementSeparator) as Array<Placement>;\n\n  const allowedPlacements = [\n    'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom',\n    'right-top', 'right-bottom'\n  ];\n\n  const classList = targetElement.classList;\n  const addClassesToTarget = (targetPlacement: Placement): Array<string> => {\n    const[primary, secondary] = targetPlacement.split('-');\n    const classes = [];\n    if (baseClass) {\n      classes.push(`${baseClass}-${primary}`);\n      if (secondary) {\n        classes.push(`${baseClass}-${primary}-${secondary}`);\n      }\n\n      classes.forEach((classname) => { classList.add(classname); });\n    }\n    return classes;\n  };\n\n  // Remove old placement classes to avoid issues\n  if (baseClass) {\n    allowedPlacements.forEach((placementToRemove) => { classList.remove(`${baseClass}-${placementToRemove}`); });\n  }\n\n  // replace auto placement with other placements\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\n  if (hasAuto >= 0) {\n    allowedPlacements.forEach(function(obj) {\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n        placementVals.splice(hasAuto++, 1, obj as Placement);\n      }\n    });\n  }\n\n  // coordinates where to position\n\n  // Required for transform:\n  const style = targetElement.style;\n  style.position = 'absolute';\n  style.top = '0';\n  style.left = '0';\n  style['will-change'] = 'transform';\n\n  let testPlacement: Placement;\n  let isInViewport = false;\n  for (testPlacement of placementVals) {\n    let addedClasses = addClassesToTarget(testPlacement);\n\n    if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\n      isInViewport = true;\n      break;\n    }\n\n    // Remove the baseClasses for further calculation\n    if (baseClass) {\n      addedClasses.forEach((classname) => { classList.remove(classname); });\n    }\n  }\n\n  if (!isInViewport) {\n    // If nothing match, the first placement is the default one\n    testPlacement = placementVals[0];\n    addClassesToTarget(testPlacement);\n    positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\n  }\n\n  return testPlacement;\n}\n\nexport type Placement = 'auto' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' |\n    'bottom-right' | 'left-top' | 'left-bottom' | 'right-top' | 'right-bottom';\n\nexport type PlacementArray = Placement | Array<Placement>| string;\n","import {padNumber, toInteger, isNumber} from '../util/util';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {Injectable} from '@angular/core';\n\nexport function NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n  return new NgbDateISOParserFormatter();\n}\n\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY})\nexport abstract class NgbDateParserFormatter {\n  /**\n   * Parses the given `string` to an `NgbDateStruct`.\n   *\n   * Implementations should try their best to provide a result, even\n   * partial. They must return `null` if the value can't be parsed.\n   */\n  abstract parse(value: string): NgbDateStruct;\n\n  /**\n   * Formats the given `NgbDateStruct` to a `string`.\n   *\n   * Implementations should return an empty string if the given date is `null`,\n   * and try their best to provide a partial result if the given date is incomplete or invalid.\n   */\n  abstract format(date: NgbDateStruct): string;\n}\n\n@Injectable()\nexport class NgbDateISOParserFormatter extends NgbDateParserFormatter {\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-');\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {year: toInteger(dateParts[0]), month: null, day: null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n\n  format(date: NgbDateStruct): string {\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator} from '@angular/forms';\n\nimport {ngbAutoClose} from '../util/autoclose';\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {PlacementArray, positionElements} from '../util/positioning';\n\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\nimport {NgbDateStruct} from './ngb-date-struct';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\nconst NGB_DATEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\n@Directive({\n  selector: 'input[ngbDatepicker]',\n  exportAs: 'ngbDatepicker',\n  host: {\n    '(input)': 'manualDateChange($event.target.value)',\n    '(change)': 'manualDateChange($event.target.value, true)',\n    '(blur)': 'onBlur()',\n    '[disabled]': 'disabled'\n  },\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NGB_DATEPICKER_VALIDATOR, NgbDatepickerService]\n})\nexport class NgbInputDatepicker implements OnChanges,\n    OnDestroy, ControlValueAccessor, Validator {\n  private _cRef: ComponentRef<NgbDatepicker> = null;\n  private _disabled = false;\n  private _model: NgbDate;\n  private _inputValue: string;\n  private _zoneSubscription: any;\n\n  /**\n   * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n   *\n   * * `true` - the popup will close on both date selection and outside click.\n   * * `false` - the popup can only be closed manually via `close()` or `toggle()` methods.\n   * * `\"inside\"` - the popup will close on date selection, but not outside clicks.\n   * * `\"outside\"` - the popup will close only on the outside click and not on date selection/inside clicks.\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside' = true;\n\n  /**\n   * The reference to a custom template for the day.\n   *\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\n   *\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * The callback to pass any arbitrary data to the template cell via the\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * The number of months to display.\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * The first day of the week.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * The reference to the custom template for the datepicker footer.\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * The callback to mark some dates as disabled.\n   *\n   * It is called for each new date when navigating to a different month.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * The earliest date that can be displayed or selected. Also used for form validation.\n   *\n   * If not provided, 'year' select box will display 10 years before the current month.\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * The latest date that can be displayed or selected. Also used for form validation.\n   *\n   * If not provided, 'year' select box will display 10 years after the current month.\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * Navigation type.\n   *\n   * * `\"select\"` - select boxes for month and navigation arrows\n   * * `\"arrows\"` - only navigation arrows\n   * * `\"none\"` - no navigation visible at all\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way of displaying days that don't belong to the current month.\n   *\n   * * `\"visible\"` - days are visible\n   * * `\"hidden\"` - days are hidden, white space preserved\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n   *\n   * For the 2+ months view, days in between months are never shown.\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * The preferred placement of the datepicker popup.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n\n  /**\n   * If `true`, weekdays will be displayed.\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * If `true`, week numbers will be displayed.\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * The date to open calendar with.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date is provided, calendar will open with current month.\n   *\n   * You could use `navigateTo(date)` method as an alternative.\n   */\n  @Input() startDate: {year: number, month: number, day?: number};\n\n  /**\n   * A selector specifying the element the datepicker popup should be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * A css selector or html element specifying the element the datepicker popup should be positioned against.\n   *\n   * By default the input is used as a target.\n   *\n   * @since 4.2.0\n   */\n  @Input() positionTarget: string | HTMLElement;\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @since 1.1.1\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * Event emitted right after the navigation happens and displayed month changes.\n   *\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event fired after closing datepicker window.\n   *\n   * @since 4.2.0\n   */\n  @Output() closed = new EventEmitter<void>();\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: any) {\n    this._disabled = value === '' || (value && value !== 'false');\n\n    if (this.isOpen()) {\n      this._cRef.instance.setDisabledState(this._disabled);\n    }\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n  private _validatorChange = () => {};\n\n\n  constructor(\n      private _parserFormatter: NgbDateParserFormatter, private _elRef: ElementRef<HTMLInputElement>,\n      private _vcRef: ViewContainerRef, private _renderer: Renderer2, private _cfr: ComponentFactoryResolver,\n      private _ngZone: NgZone, private _service: NgbDatepickerService, private _calendar: NgbCalendar,\n      private _dateAdapter: NgbDateAdapter<any>, @Inject(DOCUMENT) private _document: any,\n      private _changeDetector: ChangeDetectorRef) {\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => this._updatePopupPosition());\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  registerOnValidatorChange(fn: () => void): void { this._validatorChange = fn; }\n\n  setDisabledState(isDisabled: boolean): void { this.disabled = isDisabled; }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    const value = c.value;\n\n    if (value === null || value === undefined) {\n      return null;\n    }\n\n    const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n    if (!this._calendar.isValid(ngbDate)) {\n      return {'ngbDate': {invalid: c.value}};\n    }\n\n    if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n      return {'ngbDate': {requiredBefore: this.minDate}};\n    }\n\n    if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n      return {'ngbDate': {requiredAfter: this.maxDate}};\n    }\n  }\n\n  writeValue(value) {\n    this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n    this._writeModelValue(this._model);\n  }\n\n  manualDateChange(value: string, updateView = false) {\n    const inputValueChanged = value !== this._inputValue;\n    if (inputValueChanged) {\n      this._inputValue = value;\n      this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n    }\n    if (inputValueChanged || !updateView) {\n      this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\n    }\n    if (updateView && this._model) {\n      this._writeModelValue(this._model);\n    }\n  }\n\n  isOpen() { return !!this._cRef; }\n\n  /**\n   * Opens the datepicker popup.\n   *\n   * If the related form control contains a valid date, the corresponding month will be opened.\n   */\n  open() {\n    if (!this.isOpen()) {\n      const cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n      this._cRef = this._vcRef.createComponent(cf);\n\n      this._applyPopupStyling(this._cRef.location.nativeElement);\n      this._applyDatepickerInputs(this._cRef.instance);\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\n      this._cRef.instance.ngOnInit();\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n\n      // date selection event handling\n      this._cRef.instance.registerOnChange((selectedDate) => {\n        this.writeValue(selectedDate);\n        this._onChange(selectedDate);\n        this._onTouched();\n      });\n\n      this._cRef.changeDetectorRef.detectChanges();\n\n      this._cRef.instance.setDisabledState(this.disabled);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n      }\n\n      // focus handling\n      ngbFocusTrap(this._cRef.location.nativeElement, this.closed, true);\n      this._cRef.instance.focus();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.closed, [],\n          [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n    }\n  }\n\n  /**\n   * Closes the datepicker popup.\n   */\n  close() {\n    if (this.isOpen()) {\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n      this._cRef = null;\n      this.closed.emit();\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the datepicker popup.\n   */\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n  navigateTo(date?: {year: number, month: number, day?: number}) {\n    if (this.isOpen()) {\n      this._cRef.instance.navigateTo(date);\n    }\n  }\n\n  onBlur() { this._onTouched(); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['minDate'] || changes['maxDate']) {\n      this._validatorChange();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _applyDatepickerInputs(datepickerInstance: NgbDatepicker): void {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n        .forEach((optionName: string) => {\n          if (this[optionName] !== undefined) {\n            datepickerInstance[optionName] = this[optionName];\n          }\n        });\n    datepickerInstance.startDate = this.startDate || this._model;\n  }\n\n  private _applyPopupStyling(nativeElement: any) {\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\n    this._renderer.addClass(nativeElement, 'show');\n\n    if (this.container === 'body') {\n      this._renderer.addClass(nativeElement, 'ngb-dp-body');\n    }\n  }\n\n  private _subscribeForDatepickerOutputs(datepickerInstance: NgbDatepicker) {\n    datepickerInstance.navigate.subscribe(navigateEvent => this.navigate.emit(navigateEvent));\n    datepickerInstance.select.subscribe(date => {\n      this.dateSelect.emit(date);\n      if (this.autoClose === true || this.autoClose === 'inside') {\n        this.close();\n      }\n    });\n  }\n\n  private _writeModelValue(model: NgbDate) {\n    const value = this._parserFormatter.format(model);\n    this._inputValue = value;\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n    if (this.isOpen()) {\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n      this._onTouched();\n    }\n  }\n\n  private _fromDateStruct(date: NgbDateStruct): NgbDate {\n    const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n    return this._calendar.isValid(ngbDate) ? ngbDate : null;\n  }\n\n  private _updatePopupPosition() {\n    if (!this._cRef) {\n      return;\n    }\n\n    let hostElement: HTMLElement;\n    if (typeof this.positionTarget === 'string') {\n      hostElement = window.document.querySelector(this.positionTarget);\n    } else if (this.positionTarget instanceof HTMLElement) {\n      hostElement = this.positionTarget;\n    } else {\n      hostElement = this._elRef.nativeElement;\n    }\n\n    if (this.positionTarget && !hostElement) {\n      throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n    }\n\n    positionElements(hostElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: '[ngbDatepickerDayView]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-day-view.scss'],\n  host: {\n    'class': 'btn-light',\n    '[class.bg-primary]': 'selected',\n    '[class.text-white]': 'selected',\n    '[class.text-muted]': 'isMuted()',\n    '[class.outside]': 'isMuted()',\n    '[class.active]': 'focused'\n  },\n  template: `{{ i18n.getDayNumerals(date) }}`\n})\nexport class NgbDatepickerDayView {\n  @Input() currentMonth: number;\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() focused: boolean;\n  @Input() selected: boolean;\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {toInteger} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation-select',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-navigation-select.scss'],\n  template: `\n    <select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.month\"\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\n      (change)=\"changeMonth($event.target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\n    </select><select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.year\"\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\n      (change)=\"changeYear($event.target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  `\n})\nexport class NgbDatepickerNavigationSelect {\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: number[];\n  @Input() years: number[];\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  changeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n\n  changeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbPeriod, NgbCalendar} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\n\n@Injectable()\nexport abstract class NgbCalendarHijri extends NgbCalendar {\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  abstract getDaysPerMonth(month: number, year: number): number;\n\n  /**\n   * Returns the equivalent Hijri date value for a give input Gregorian date.\n   * `gDate` is s JS Date to be converted to Hijri.\n   */\n  abstract fromGregorian(gDate: Date): NgbDate;\n\n  /**\n   * Converts the current Hijri date to Gregorian.\n   */\n  abstract toGregorian(hDate: NgbDate): Date;\n\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = this._setYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = this._setMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return this._setDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = this.toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = this.toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));  // Compare with Muharram 1\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return this.fromGregorian(new Date()); }\n\n\n  isValid(date: NgbDate): boolean {\n    return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n        !isNaN(this.toGregorian(date).getTime());\n  }\n\n  private _setDay(date: NgbDate, day: number): NgbDate {\n    day = +day;\n    let mDays = this.getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n      while (day <= 0) {\n        date = this._setMonth(date, date.month - 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n        day += mDays;\n      }\n    } else if (day > mDays) {\n      while (day > mDays) {\n        day -= mDays;\n        date = this._setMonth(date, date.month + 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n      }\n    }\n    date.day = day;\n    return date;\n  }\n\n  private _setMonth(date: NgbDate, month: number): NgbDate {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n  }\n\n  private _setYear(date: NgbDate, year: number): NgbDate {\n    date.year = +year;\n    return date;\n  }\n}\n","import {NgbCalendarHijri} from './ngb-calendar-hijri';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear: number): boolean {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear(gDate: Date): boolean {\n  const year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear: number, hMonth: number): number {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year: number): number {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\nconst GREGORIAN_EPOCH = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\n\n@Injectable()\nexport class NgbCalendarIslamicCivil extends NgbCalendarHijri {\n  /**\n   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n   * `gDate` is a JS Date to be converted to Hijri.\n   */\n  fromGregorian(gDate: Date): NgbDate {\n    const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\n\n    let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n        -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor(\n            (367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay) + 0.5;\n\n    const days = julianDay - ISLAMIC_EPOCH;\n    const hYear = Math.floor((30 * days + 10646) / 10631.0);\n    let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n    hMonth = Math.min(hMonth, 11);\n    const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n    return new NgbDate(hYear, hMonth + 1, hDay);\n  }\n\n  /**\n   * Returns the equivalent JS date value for a give input islamic(civil) date.\n   * `hDate` is an islamic(civil) date to be converted to Gregorian.\n   */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    const julianDay =\n        hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n\n    const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH,\n          quadricent = Math.floor(depoch / 146097), dqc = mod(depoch, 146097), cent = Math.floor(dqc / 36524),\n          dcent = mod(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod(dcent, 1461),\n          yindex = Math.floor(dquad / 365);\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n    if (!(cent === 4 || yindex === 4)) {\n      year++;\n    }\n\n    const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400);\n\n    const yearday = wjd - gYearStart;\n\n    const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n\n    const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n\n    const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n    const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) +\n        Math.floor(\n            (367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n            1);\n\n    const day = wjd - tjd2 + 1;\n\n    return new Date(year, month - 1, day);\n  }\n\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  getDaysPerMonth(month: number, year: number): number {\n    year = year + Math.floor(month / 13);\n    month = ((month - 1) % 12) + 1;\n    let length = 29 + month % 2;\n    if (month === 12 && isIslamicLeapYear(year)) {\n      length++;\n    }\n    return length;\n  }\n}\n","import {NgbCalendarIslamicCivil} from './ngb-calendar-islamic-civil';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\n\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\n\nconst MONTH_LENGTH = [\n  // 1300-1304\n  '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n  // 1305-1309\n  '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n  // 1310-1314\n  '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n  // 1315-1319\n  '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n  // 1320-1324\n  '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n  // 1325-1329\n  '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n  // 1330-1334\n  '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n  // 1335-1339\n  '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n  // 1340-1344\n  '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n  // 1345-1349\n  '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n  // 1350-1354\n  '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n  // 1355-1359\n  '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n  // 1360-1364\n  '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n  // 1365-1369\n  '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n  // 1370-1374\n  '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n  // 1375-1379\n  '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n  // 1380-1384\n  '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n  // 1385-1389\n  '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n  // 1390-1394\n  '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n  // 1395-1399\n  '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n  // 1400-1404\n  '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n  // 1405-1409\n  '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n  // 1410-1414\n  '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n  // 1415-1419\n  '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n  // 1420-1424\n  '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n  // 1425-1429\n  '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n  // 1430-1434\n  '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n  // 1435-1439\n  '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n  // 1440-1444\n  '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n  // 1445-1449\n  '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n  // 1450-1454\n  '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n  // 1455-1459\n  '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n  // 1460-1464\n  '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n  // 1465-1469\n  '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n  // 1470-1474\n  '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n  // 1475-1479\n  '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n  // 1480-1484\n  '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n  // 1485-1489\n  '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n  // 1490-1494\n  '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n  // 1495-1499\n  '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n  // 1500-1504\n  '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n  // 1505-1509\n  '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n  // 1510-1514\n  '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n  // 1515-1519\n  '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n  // 1520-1524\n  '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n  // 1525-1529\n  '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n  // 1530-1534\n  '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n  // 1535-1539\n  '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n  // 1540-1544\n  '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n  // 1545-1549\n  '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n  // 1550-1554\n  '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n  // 1555-1559\n  '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n  // 1560-1564\n  '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n  // 1565-1569\n  '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n  // 1570-1574\n  '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n  // 1575-1579\n  '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n  // 1580-1584\n  '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n  // 1585-1589\n  '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n  // 1590-1594\n  '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n  // 1595-1599\n  '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n  // 1600\n  '001010011101'\n];\n\nfunction getDaysDiff(date1: Date, date2: Date): number {\n  const diff = Math.abs(date1.getTime() - date2.getTime());\n  return Math.round(diff / ONE_DAY);\n}\n\n@Injectable()\nexport class NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n  /**\n  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n  * `gdate` is s JS Date to be converted to Hijri.\n  */\n  fromGregorian(gDate: Date): NgbDate {\n    let hDay = 1, hMonth = 0, hYear = 1300;\n    let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n      let year = 1300;\n      for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n        for (let j = 0; j < 12; j++) {\n          let numOfDays = +MONTH_LENGTH[i][j] + 29;\n          if (daysDiff <= numOfDays) {\n            hDay = daysDiff + 1;\n            if (hDay > numOfDays) {\n              hDay = 1;\n              j++;\n            }\n            if (j > 11) {\n              j = 0;\n              year++;\n            }\n            hMonth = j;\n            hYear = year;\n            return new NgbDate(hYear, hMonth + 1, hDay);\n          }\n          daysDiff = daysDiff - numOfDays;\n        }\n      }\n    } else {\n      return super.fromGregorian(gDate);\n    }\n  }\n  /**\n  * Converts the current Hijri date to Gregorian.\n  */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    let gDate = new Date(GREGORIAN_FIRST_DATE);\n    let dayDiff = hDay - 1;\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n        for (let m = 0; m < 12; m++) {\n          dayDiff += +MONTH_LENGTH[y][m] + 29;\n        }\n      }\n      for (let m = 0; m < hMonth; m++) {\n        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n      }\n      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n    } else {\n      gDate = super.toGregorian(hDate);\n    }\n    return gDate;\n  }\n  /**\n  * Returns the number of days in a specific Hijri hMonth.\n  * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n  * `hYear` is any Hijri hYear.\n  */\n  getDaysPerMonth(hMonth: number, hYear: number): number {\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      const pos = hYear - HIJRI_BEGIN;\n      return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n    }\n    return super.getDaysPerMonth(hMonth, hYear);\n  }\n}\n","import {NgbDate} from '../ngb-date';\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nexport function toGregorian(jalaliDate: NgbDate): Date {\n  let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  let date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\n\nexport function setJalaliYear(date: NgbDate, yearValue: number): NgbDate {\n  date.year = +yearValue;\n  return date;\n}\n\nexport function setJalaliMonth(date: NgbDate, month: number): NgbDate {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\n\nexport function setJalaliDay(date: NgbDate, day: number): NgbDate {\n  let mDays = getDaysPerMonth(date.month, date.year);\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n  date.day = day;\n  return date;\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\nfunction div(a: number, b: number) {\n  return Math.trunc(a / b);\n}\n\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear: number) {\n  // Jalali years starting the 33-year rule.\n  let breaks =\n      [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  const breaksLength = breaks.length;\n  const gYear = jalaliYear + 621;\n  let leapJ = -14;\n  let jp = breaks[0];\n\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  }\n\n  // Find the limiting years for the Jalali year jalaliYear.\n  let jump;\n  for (let i = 1; i < breaksLength; i += 1) {\n    const jm = breaks[i];\n    jump = jm - jp;\n    if (jalaliYear < jm) {\n      break;\n    }\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n    jp = jm;\n  }\n  let n = jalaliYear - jp;\n\n  // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n  if (mod(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  }\n\n  // And the same in the Gregorian calendar (until the year gYear).\n  const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n\n  // Determine the Gregorian date of Farvardin the 1st.\n  const march = 20 + leapJ - leapG;\n\n  // Find how many years have passed since the last leap year.\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n  let leap = mod(mod(n + 1, 33) - 1, 4);\n  if (leap === -1) {\n    leap = 4;\n  }\n\n  return {leap: leap, gy: gYear, march: march};\n}\n\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian(julianDayNumber: number) {\n  let j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  const i = div(mod(j, 1461), 4) * 5 + 308;\n  const gDay = div(mod(i, 153), 5) + 1;\n  const gMonth = mod(div(i, 153), 12) + 1;\n  const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian(gy: number, gm: number, gd: number) {\n  let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber: number) {\n  let gy = julianToGregorian(julianDayNumber).getFullYear()  // Calculate Gregorian year (gy).\n      ,\n      jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian(gy, 3, r.march), jalaliDay,\n      jalaliMonth, numberOfDays;\n\n  // Find number of days that passed since 1 Farvardin.\n  numberOfDays = julianDayNumber - gregorianDay;\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod(numberOfDays, 30) + 1;\n\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear: number, jMonth: number, jDay: number) {\n  let r = jalCal(jYear);\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth(month: number, year: number): number {\n  if (month <= 6) {\n    return 31;\n  }\n  if (month <= 11) {\n    return 30;\n  }\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n  return 29;\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDate} from '../ngb-date';\nimport {NgbCalendar, NgbPeriod} from '../ngb-calendar';\nimport {isInteger} from '../../util/util';\n\nimport {fromGregorian, setJalaliDay, setJalaliMonth, setJalaliYear, toGregorian} from './jalali';\n\n@Injectable()\nexport class NgbCalendarPersian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = setJalaliYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setJalaliMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setJalaliDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n    return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\n        !isNaN(toGregorian(date).getTime());\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbDateStruct} from '../ngb-date-struct';\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\n\nfunction isGregorianLeapYear(year: number): boolean {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\nfunction numberOfFirstDayInYear(year: number): number {\n  let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n  let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n  let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n  let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n\n  let dayOfWeek = dayNumber % 7;  // 0 == Monday\n\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n    dayNumber++;\n    dayOfWeek = dayNumber % 7;\n  }\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n    dayNumber += 2;\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n    dayNumber++;\n  }\n  return dayNumber;\n}\n\nfunction getDaysInGregorianMonth(month: number, year: number): number {\n  let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  if (isGregorianLeapYear(year)) {\n    days[1]++;\n  }\n  return days[month - 1];\n}\n\nfunction getHebrewMonths(year: number): number {\n  return isHebrewLeapYear(year) ? 13 : 12;\n}\n\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year: number): number {\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n\nexport function isHebrewLeapYear(year: number): boolean {\n  let b = (year * 12 + 17) % 19;\n  return b >= ((b < 0) ? -7 : 12);\n}\n\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nexport function getDaysInHebrewMonth(month: number, year: number): number {\n  let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n  let yearType = (yearLength <= 380 ? yearLength : (yearLength - 30)) - 353;\n  let leapYear = isHebrewLeapYear(year);\n  let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] :\n                               [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n  if (yearType > 0) {\n    daysInMonth[2]++;  // Kislev gets an extra day in normal or complete years.\n  }\n  if (yearType > 1) {\n    daysInMonth[1]++;  // Heshvan gets an extra day in complete years only.\n  }\n  return daysInMonth[month - 1];\n}\n\nexport function getDayNumberInHebrewYear(date: NgbDate): number {\n  let numberOfDay = 0;\n  for (let i = 1; i < date.month; i++) {\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\n  }\n  return numberOfDay + date.day;\n}\n\nexport function setHebrewMonth(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getHebrewMonths(date.year) - date.month) {\n        val -= getHebrewMonths(date.year) - date.month + 1;\n        date.year++;\n        date.month = 1;\n      } else {\n        date.month += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.month) {\n        date.year--;\n        val -= date.month;\n        date.month = getHebrewMonths(date.year);\n      } else {\n        date.month -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\nexport function setHebrewDay(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n        date.year++;\n        date.month = 1;\n        date.day = 1;\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n        date.month++;\n        date.day = 1;\n      } else {\n        date.day += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.day) {\n        val -= date.day;\n        date.month--;\n        if (date.month === 0) {\n          date.year--;\n          date.month = getHebrewMonths(date.year);\n        }\n        date.day = getDaysInHebrewMonth(date.month, date.year);\n      } else {\n        date.day -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  const date = new Date(gdate);\n  const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n  let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) -\n      Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n      Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n  julianDay = Math.floor(julianDay + 0.5);\n  let daysSinceHebEpoch = julianDay - 347997;\n  let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n  let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n  let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n  let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  while (dayOfYear < 1) {\n    hYear--;\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  }\n  let hMonth = 1;\n  let hDay = dayOfYear;\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\n    hMonth++;\n  }\n  return new NgbDate(hYear, hMonth, hDay);\n}\n\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nexport function toGregorian(hebrewDate: NgbDateStruct | NgbDate): Date {\n  const hYear = hebrewDate.year;\n  const hMonth = hebrewDate.month;\n  const hDay = hebrewDate.day;\n  let days = numberOfFirstDayInYear(hYear);\n  for (let i = 1; i < hMonth; i++) {\n    days += getDaysInHebrewMonth(i, hYear);\n  }\n  days += hDay;\n  let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n  let after = diffDays >= 0;\n  if (!after) {\n    diffDays = -diffDays;\n  }\n  let gYear = 1970;\n  let gMonth = 1;\n  let gDay = 1;\n  while (diffDays > 0) {\n    if (after) {\n      if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n        gYear++;\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        gMonth++;\n      } else {\n        gDay += diffDays;\n        diffDays = 0;\n      }\n    } else {\n      if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n        gYear--;\n      } else {\n        if (gMonth > 1) {\n          gMonth--;\n        } else {\n          gMonth = 12;\n          gYear--;\n        }\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        } else {\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n          diffDays = 0;\n        }\n      }\n    }\n  }\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\nexport function hebrewNumerals(numerals: number): string {\n  if (!numerals) {\n    return '';\n  }\n  const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n  const hArray10_19 = [\n    '\\u05d9', '\\u05d9\\u05d0', '\\u05d9\\u05d1', '\\u05d9\\u05d2', '\\u05d9\\u05d3', '\\u05d8\\u05d5', '\\u05d8\\u05d6',\n    '\\u05d9\\u05d6', '\\u05d9\\u05d7', '\\u05d9\\u05d8'\n  ];\n  const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n  const hArray100_900 = [\n    '', '\\u05e7', '\\u05e8', '\\u05e9', '\\u05ea', '\\u05ea\\u05e7', '\\u05ea\\u05e8', '\\u05ea\\u05e9', '\\u05ea\\u05ea',\n    '\\u05ea\\u05ea\\u05e7'\n  ];\n  const hArray1000_9000 = [\n    '', '\\u05d0', '\\u05d1', '\\u05d1\\u05d0', '\\u05d1\\u05d1', '\\u05d4', '\\u05d4\\u05d0', '\\u05d4\\u05d1',\n    '\\u05d4\\u05d1\\u05d0', '\\u05d4\\u05d1\\u05d1'\n  ];\n  const geresh = '\\u05f3', gershaim = '\\u05f4';\n  let mem = 0;\n  let result = [];\n  let step = 0;\n  while (numerals > 0) {\n    let m = numerals % 10;\n    if (step === 0) {\n      mem = m;\n    } else if (step === 1) {\n      if (m !== 1) {\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\n      } else {\n        result.unshift(hArray10_19[mem]);\n      }\n    } else if (step === 2) {\n      result.unshift(hArray100_900[m]);\n    } else {\n      if (m !== 5) {\n        result.unshift(hArray1000_9000[m], geresh, ' ');\n      }\n      break;\n    }\n    numerals = Math.floor(numerals / 10);\n    if (step === 0 && numerals === 0) {\n      result.unshift(hArray0_9[m]);\n    }\n    step++;\n  }\n  result = result.join('').split('');\n  if (result.length === 1) {\n    result.push(geresh);\n  } else if (result.length > 1) {\n    result.splice(result.length - 1, 0, gershaim);\n  }\n  return result.join('');\n}\n","import {NgbDate} from '../ngb-date';\nimport {fromJSDate, NgbCalendar, NgbPeriod, toJSDate} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\nimport {\n  fromGregorian,\n  getDayNumberInHebrewYear,\n  getDaysInHebrewMonth,\n  isHebrewLeapYear,\n  toGregorian,\n  setHebrewDay,\n  setHebrewMonth\n} from './hebrew';\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbCalendarHebrew extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths(year?: number) {\n    if (year && isHebrewLeapYear(year)) {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    } else {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }\n\n  getWeeksPerMonth() { return 6; }\n\n  isValid(date: NgbDate): boolean {\n    let b = date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n    b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n    b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n    return b && !isNaN(toGregorian(date).getTime());\n  }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date.year += number;\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setHebrewMonth(date, number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setHebrewDay(date, number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    const date = week[week.length - 1];\n    return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  /**\n   * @since 3.4.0\n   */\n  toGregorian(date: NgbDate): NgbDate { return fromJSDate(toGregorian(date)); }\n\n  /**\n   * @since 3.4.0\n   */\n  fromGregorian(date: NgbDate): NgbDate { return fromGregorian(toJSDate(date)); }\n}\n","import {NgbDatepickerI18n} from '../datepicker-i18n';\nimport {NgbDateStruct} from '../../index';\nimport {hebrewNumerals, isHebrewLeapYear} from './hebrew';\nimport {Injectable} from '@angular/core';\n\n\nconst WEEKDAYS = ['ÃÂ©ÃÂ ÃÂ', 'ÃÂ©ÃÂÃÂÃÂ©ÃÂ', 'ÃÂ¨ÃÂÃÂÃÂ¢ÃÂ', 'ÃÂÃÂÃÂÃÂ©ÃÂ', 'ÃÂ©ÃÂÃÂ©ÃÂ', 'ÃÂ©ÃÂÃÂª', 'ÃÂ¨ÃÂÃÂ©ÃÂÃÂ'];\nconst MONTHS = ['ÃÂªÃÂ©ÃÂ¨ÃÂ', 'ÃÂÃÂ©ÃÂÃÂ', 'ÃÂÃÂ¡ÃÂÃÂ', 'ÃÂÃÂÃÂª', 'ÃÂ©ÃÂÃÂ', 'ÃÂÃÂÃÂ¨', 'ÃÂ ÃÂÃÂ¡ÃÂ', 'ÃÂÃÂÃÂÃÂ¨', 'ÃÂ¡ÃÂÃÂÃÂ', 'ÃÂªÃÂÃÂÃÂ', 'ÃÂÃÂ', 'ÃÂÃÂÃÂÃÂ'];\nconst MONTHS_LEAP =\n    ['ÃÂªÃÂ©ÃÂ¨ÃÂ', 'ÃÂÃÂ©ÃÂÃÂ', 'ÃÂÃÂ¡ÃÂÃÂ', 'ÃÂÃÂÃÂª', 'ÃÂ©ÃÂÃÂ', 'ÃÂÃÂÃÂ¨ ÃÂÃÂ³', 'ÃÂÃÂÃÂ¨ ÃÂÃÂ³', 'ÃÂ ÃÂÃÂ¡ÃÂ', 'ÃÂÃÂÃÂÃÂ¨', 'ÃÂ¡ÃÂÃÂÃÂ', 'ÃÂªÃÂÃÂÃÂ', 'ÃÂÃÂ', 'ÃÂÃÂÃÂÃÂ'];\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n  getMonthShortName(month: number, year?: number): string { return this.getMonthFullName(month, year); }\n\n  getMonthFullName(month: number, year?: number): string {\n    return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] : MONTHS[month - 1];\n  }\n\n  getWeekdayShortName(weekday: number): string { return WEEKDAYS[weekday - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n  }\n\n  getDayNumerals(date: NgbDateStruct): string { return hebrewNumerals(date.day); }\n\n  getWeekNumerals(weekNumber: number): string { return hebrewNumerals(weekNumber); }\n\n  getYearNumerals(year: number): string { return hebrewNumerals(year); }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {NgbDatepicker} from './datepicker';\nimport {NgbDatepickerMonthView} from './datepicker-month-view';\nimport {NgbDatepickerNavigation} from './datepicker-navigation';\nimport {NgbInputDatepicker} from './datepicker-input';\nimport {NgbDatepickerDayView} from './datepicker-day-view';\nimport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\n\nexport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nexport {NgbInputDatepicker} from './datepicker-input';\nexport {NgbCalendar, NgbPeriod, NgbCalendarGregorian} from './ngb-calendar';\nexport {NgbCalendarIslamicCivil} from './hijri/ngb-calendar-islamic-civil';\nexport {NgbCalendarIslamicUmalqura} from './hijri/ngb-calendar-islamic-umalqura';\nexport {NgbCalendarPersian} from './jalali/ngb-calendar-persian';\nexport {NgbCalendarHebrew} from './hebrew/ngb-calendar-hebrew';\nexport {NgbDatepickerI18nHebrew} from './hebrew/datepicker-i18n-hebrew';\nexport {NgbDatepickerMonthView} from './datepicker-month-view';\nexport {NgbDatepickerDayView} from './datepicker-day-view';\nexport {NgbDatepickerNavigation} from './datepicker-navigation';\nexport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\nexport {NgbDatepickerConfig} from './datepicker-config';\nexport {NgbDatepickerI18n} from './datepicker-i18n';\nexport {NgbDateStruct} from './ngb-date-struct';\nexport {NgbDate} from './ngb-date';\nexport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nexport {NgbDateNativeAdapter} from './adapters/ngb-date-native-adapter';\nexport {NgbDateNativeUTCAdapter} from './adapters/ngb-date-native-utc-adapter';\nexport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\n\n@NgModule({\n  declarations: [\n    NgbDatepicker, NgbDatepickerMonthView, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView,\n    NgbInputDatepicker\n  ],\n  exports: [NgbDatepicker, NgbInputDatepicker],\n  imports: [CommonModule, FormsModule],\n  entryComponents: [NgbDatepicker]\n})\nexport class NgbDatepickerModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbDatepickerModule}; }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {NgbDateNativeAdapter} from './ngb-date-native-adapter';\n\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n    // avoid 30 -> 1930 conversion\n    jsDate.setUTCFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateAdapter} from './ngb-date-adapter';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter<Date> {\n  /**\n   * Converts a native `Date` to a `NgbDateStruct`.\n   */\n  fromModel(date: Date): NgbDateStruct {\n    return (date instanceof Date && !isNaN(date.getTime())) ? this._fromNativeDate(date) : null;\n  }\n\n  /**\n   * Converts a `NgbDateStruct` to a native `Date`.\n   */\n  toModel(date: NgbDateStruct): Date {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) :\n                                                                                          null;\n  }\n\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // avoid 30 -> 1930 conversion\n    jsDate.setFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDropdownConfig {\n  autoClose: boolean | 'outside' | 'inside' = true;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n  container: null | 'body';\n}\n","import {\n  ChangeDetectorRef,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  Renderer2,\n  SimpleChanges,\n  Optional\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {Subject, Subscription} from 'rxjs';\n\nimport {Placement, PlacementArray, positionElements} from '../util/positioning';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {Key} from '../util/key';\n\nimport {NgbDropdownConfig} from './dropdown-config';\n\n@Directive({selector: '.navbar'})\nexport class NgbNavbar {\n}\n\n/**\n * A directive you should put put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\n@Directive({selector: '[ngbDropdownItem]', host: {'class': 'dropdown-item', '[class.disabled]': 'disabled'}})\nexport class NgbDropdownItem {\n  private _disabled = false;\n\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = <any>value === '' || value === true;  // accept an empty attribute as true\n  }\n\n  get disabled(): boolean { return this._disabled; }\n\n  constructor(public elementRef: ElementRef<HTMLElement>) {}\n}\n\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\n@Directive({\n  selector: '[ngbDropdownMenu]',\n  host: {\n    '[class.dropdown-menu]': 'true',\n    '[class.show]': 'dropdown.isOpen()',\n    '[attr.x-placement]': 'placement',\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n    '(keydown.End)': 'dropdown.onKeyDown($event)',\n    '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n    '(keydown.Space)': 'dropdown.onKeyDown($event)'\n  }\n})\nexport class NgbDropdownMenu {\n  placement: Placement = 'bottom';\n  isOpen = false;\n\n  @ContentChildren(NgbDropdownItem) menuItems: QueryList<NgbDropdownItem>;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown: NgbDropdown) {}\n}\n\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\n@Directive({\n  selector: '[ngbDropdownAnchor]',\n  host: {'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()'}\n})\nexport class NgbDropdownAnchor {\n  anchorEl;\n\n  constructor(\n      @Inject(forwardRef(() => NgbDropdown)) public dropdown: NgbDropdown,\n      private _elementRef: ElementRef<HTMLElement>) {\n    this.anchorEl = _elementRef.nativeElement;\n  }\n\n  getNativeElement() { return this._elementRef.nativeElement; }\n}\n\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\n@Directive({\n  selector: '[ngbDropdownToggle]',\n  host: {\n    'class': 'dropdown-toggle',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'dropdown.isOpen()',\n    '(click)': 'dropdown.toggle()',\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n    '(keydown.End)': 'dropdown.onKeyDown($event)'\n  },\n  providers: [{provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle)}]\n})\nexport class NgbDropdownToggle extends NgbDropdownAnchor {\n  constructor(@Inject(forwardRef(() => NgbDropdown)) dropdown: NgbDropdown, elementRef: ElementRef<HTMLElement>) {\n    super(dropdown, elementRef);\n  }\n}\n\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\n@Directive({selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: {'[class.show]': 'isOpen()'}})\nexport class NgbDropdown implements OnInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _zoneSubscription: Subscription;\n  private _bodyContainer: HTMLElement;\n\n  @ContentChild(NgbDropdownMenu) private _menu: NgbDropdownMenu;\n  @ContentChild(NgbDropdownMenu, {read: ElementRef}) private _menuElement: ElementRef;\n\n  @ContentChild(NgbDropdownAnchor) private _anchor: NgbDropdownAnchor;\n\n  /**\n   * Indicates whether the dropdown should be closed when clicking one of dropdown items or pressing ESC.\n   *\n   * * `true` - the dropdown will close on both outside and inside (menu) clicks.\n   * * `false` - the dropdown can only be closed manually via `close()` or `toggle()` methods.\n   * * `\"inside\"` - the dropdown will close on inside menu clicks, but not outside clicks.\n   * * `\"outside\"` - the dropdown will close only on the outside clicks and not on menu clicks.\n   */\n  @Input() autoClose: boolean | 'outside' | 'inside';\n\n  /**\n   * Defines whether or not the dropdown menu is opened initially.\n   */\n  @Input('open') _open = false;\n\n  /**\n   * The preferred placement of the dropdown.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n  * A selector specifying the element the dropdown should be appended to.\n  * Currently only supports \"body\".\n  *\n  * @since 4.1.0\n  */\n  @Input() container: null | 'body';\n\n  /**\n   * Enable or disable the dynamic positioning\n   *\n   * @since 4.2.0\n   */\n  @Input() display: 'dynamic' | 'static';\n\n  /**\n   * An event fired when the dropdown is opened or closed.\n   *\n   * The event payload is a `boolean`:\n   * * `true` - the dropdown was opened\n   * * `false` - the dropdown was closed\n   */\n  @Output() openChange = new EventEmitter<boolean>();\n\n  constructor(\n      private _changeDetector: ChangeDetectorRef, config: NgbDropdownConfig, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone, private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2,\n      @Optional() ngbNavbar: NgbNavbar) {\n    this.placement = config.placement;\n    this.container = config.container;\n    this.autoClose = config.autoClose;\n\n    this.display = ngbNavbar ? 'static' : 'dynamic';\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => { this._positionMenu(); });\n  }\n\n  ngOnInit() {\n    this._applyPlacementClasses();\n    if (this._open) {\n      this._setCloseHandlers();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.container && this._open) {\n      this._applyContainer(this.container);\n    }\n\n    if (changes.placement && !changes.placement.isFirstChange) {\n      this._applyPlacementClasses();\n    }\n  }\n\n  /**\n   * Checks if the dropdown menu is open.\n   */\n  isOpen(): boolean { return this._open; }\n\n  /**\n   * Opens the dropdown menu.\n   */\n  open(): void {\n    if (!this._open) {\n      this._open = true;\n      this._applyContainer(this.container);\n      this.openChange.emit(true);\n      this._setCloseHandlers();\n    }\n  }\n\n  private _setCloseHandlers() {\n    ngbAutoClose(\n        this._ngZone, this._document, this.autoClose, () => this.close(), this._closed$,\n        this._menu ? [this._menuElement.nativeElement] : [], this._anchor ? [this._anchor.getNativeElement()] : [],\n        '.dropdown-item,.dropdown-divider');\n  }\n\n  /**\n   * Closes the dropdown menu.\n   */\n  close(): void {\n    if (this._open) {\n      this._open = false;\n      this._resetContainer();\n      this._closed$.next();\n      this.openChange.emit(false);\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the dropdown menu.\n   */\n  toggle(): void {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  ngOnDestroy() {\n    this._resetContainer();\n\n    this._closed$.next();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    const key = event.which;\n    const itemElements = this._getMenuElements();\n\n    let position = -1;\n    let isEventFromItems = false;\n    const isEventFromToggle = this._isEventFromToggle(event);\n\n    if (!isEventFromToggle && itemElements.length) {\n      itemElements.forEach((itemElement, index) => {\n        if (itemElement.contains(event.target as HTMLElement)) {\n          isEventFromItems = true;\n        }\n        if (itemElement === this._document.activeElement) {\n          position = index;\n        }\n      });\n    }\n\n    // closing on Enter / Space\n    if (key === Key.Space || key === Key.Enter) {\n      if (isEventFromItems && (this.autoClose === true || this.autoClose === 'inside')) {\n        this.close();\n      }\n      return;\n    }\n\n    // opening / navigating\n    if (isEventFromToggle || isEventFromItems) {\n      this.open();\n\n      if (itemElements.length) {\n        switch (key) {\n          case Key.ArrowDown:\n            position = Math.min(position + 1, itemElements.length - 1);\n            break;\n          case Key.ArrowUp:\n            if (this._isDropup() && position === -1) {\n              position = itemElements.length - 1;\n              break;\n            }\n            position = Math.max(position - 1, 0);\n            break;\n          case Key.Home:\n            position = 0;\n            break;\n          case Key.End:\n            position = itemElements.length - 1;\n            break;\n        }\n        itemElements[position].focus();\n      }\n      event.preventDefault();\n    }\n  }\n\n  private _isDropup(): boolean { return this._elementRef.nativeElement.classList.contains('dropup'); }\n\n  private _isEventFromToggle(event: KeyboardEvent) {\n    return this._anchor.getNativeElement().contains(event.target as HTMLElement);\n  }\n\n  private _getMenuElements(): HTMLElement[] {\n    if (this._menu == null) {\n      return [];\n    }\n    return this._menu.menuItems.filter(item => !item.disabled).map(item => item.elementRef.nativeElement);\n  }\n\n  private _positionMenu() {\n    if (this.isOpen() && this._menu) {\n      this._applyPlacementClasses(\n          this.display === 'dynamic' ?\n              positionElements(\n                  this._anchor.anchorEl, this._bodyContainer || this._menuElement.nativeElement, this.placement,\n                  this.container === 'body') :\n              this._getFirstPlacement(this.placement));\n    }\n  }\n\n  private _getFirstPlacement(placement: PlacementArray): Placement {\n    return Array.isArray(placement) ? placement[0] : placement.split(' ')[0] as Placement;\n  }\n\n  private _resetContainer() {\n    const renderer = this._renderer;\n    if (this._menuElement) {\n      const dropdownElement = this._elementRef.nativeElement;\n      const dropdownMenuElement = this._menuElement.nativeElement;\n\n      renderer.appendChild(dropdownElement, dropdownMenuElement);\n      renderer.removeStyle(dropdownMenuElement, 'position');\n      renderer.removeStyle(dropdownMenuElement, 'transform');\n    }\n    if (this._bodyContainer) {\n      renderer.removeChild(this._document.body, this._bodyContainer);\n      this._bodyContainer = null;\n    }\n  }\n\n  private _applyContainer(container: null | 'body' = null) {\n    this._resetContainer();\n    if (container === 'body') {\n      const renderer = this._renderer;\n      const dropdownMenuElement = this._menuElement.nativeElement;\n      const bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div');\n\n      // Override some styles to have the positionning working\n      renderer.setStyle(bodyContainer, 'position', 'absolute');\n      renderer.setStyle(dropdownMenuElement, 'position', 'static');\n      renderer.setStyle(bodyContainer, 'z-index', '1050');\n\n      renderer.appendChild(bodyContainer, dropdownMenuElement);\n      renderer.appendChild(this._document.body, bodyContainer);\n    }\n  }\n\n  private _applyPlacementClasses(placement?: Placement) {\n    if (this._menu) {\n      if (!placement) {\n        placement = this._getFirstPlacement(this.placement);\n      }\n\n      const renderer = this._renderer;\n      const dropdownElement = this._elementRef.nativeElement;\n\n      // remove the current placement classes\n      renderer.removeClass(dropdownElement, 'dropup');\n      renderer.removeClass(dropdownElement, 'dropdown');\n      this._menu.placement = placement;\n\n      /*\n      * apply the new placement\n      * in case of top use up-arrow or down-arrow otherwise\n      */\n      const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n      renderer.addClass(dropdownElement, dropdownClass);\n\n      const bodyContainer = this._bodyContainer;\n      if (bodyContainer) {\n        renderer.removeClass(bodyContainer, 'dropup');\n        renderer.removeClass(bodyContainer, 'dropdown');\n        renderer.addClass(bodyContainer, dropdownClass);\n      }\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownToggle,\n  NgbDropdownMenu,\n  NgbDropdownItem,\n  NgbNavbar\n} from './dropdown';\n\nexport {NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem} from './dropdown';\nexport {NgbDropdownConfig} from './dropdown-config';\n\nconst NGB_DROPDOWN_DIRECTIVES =\n    [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar];\n\n@NgModule({declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES})\nexport class NgbDropdownModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbDropdownModule}; }\n}\n","import {Injectable, Injector} from '@angular/core';\n\n/**\n * Options available when opening new modal windows with `NgbModal.open()` method.\n */\nexport interface NgbModalOptions {\n  /**\n   * `aria-labelledby` attribute value to set on the modal window.\n   *\n   * @since 2.2.0\n   */\n  ariaLabelledBy?: string;\n\n  /**\n   * If `true`, the backdrop element will be created for a given modal.\n   *\n   * Alternatively, specify `'static'` for a backdrop which doesn't close the modal on click.\n   *\n   * Default value is `true`.\n   */\n  backdrop?: boolean | 'static';\n\n  /**\n   * Callback right before the modal will be dismissed.\n   *\n   * If this function returns:\n   * * `false`\n   * * a promise resolved with `false`\n   * * a promise that is rejected\n   *\n   * then the modal won't be dismissed.\n   */\n  beforeDismiss?: () => boolean | Promise<boolean>;\n\n  /**\n   * If `true`, the modal will be centered vertically.\n   *\n   * Default value is `false`.\n   *\n   * @since 1.1.0\n   */\n  centered?: boolean;\n\n  /**\n   * A selector specifying the element all new modal windows should be appended to.\n   *\n   * If not specified, will be `body`.\n   */\n  container?: string;\n\n  /**\n   * The `Injector` to use for modal content.\n   */\n  injector?: Injector;\n\n  /**\n   * If `true`, the modal will be closed when `Escape` key is pressed\n   *\n   * Default value is `true`.\n   */\n  keyboard?: boolean;\n\n  /**\n   * Size of a new modal window.\n   */\n  size?: 'sm' | 'lg';\n\n  /**\n   * A custom class to append to the modal window.\n   */\n  windowClass?: string;\n\n  /**\n   * A custom class to append to the modal backdrop.\n   *\n   * @since 1.1.0\n   */\n  backdropClass?: string;\n}\n\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n*\n* @since 3.1.0\n*/\n@Injectable({providedIn: 'root'})\nexport class NgbModalConfig implements NgbModalOptions {\n  backdrop: boolean | 'static' = true;\n  keyboard = true;\n}\n","import {\n  Injector,\n  TemplateRef,\n  ViewRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentRef,\n  ComponentFactoryResolver,\n  ApplicationRef\n} from '@angular/core';\n\nexport class ContentRef {\n  constructor(public nodes: any[], public viewRef?: ViewRef, public componentRef?: ComponentRef<any>) {}\n}\n\nexport class PopupService<T> {\n  private _windowRef: ComponentRef<T>;\n  private _contentRef: ContentRef;\n\n  constructor(\n      private _type: any, private _injector: Injector, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _componentFactoryResolver: ComponentFactoryResolver,\n      private _applicationRef: ApplicationRef) {}\n\n  open(content?: string | TemplateRef<any>, context?: any): ComponentRef<T> {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, context);\n      this._windowRef = this._viewContainerRef.createComponent(\n          this._componentFactoryResolver.resolveComponentFactory<T>(this._type), 0, this._injector,\n          this._contentRef.nodes);\n    }\n\n    return this._windowRef;\n  }\n\n  close() {\n    if (this._windowRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n      this._windowRef = null;\n\n      if (this._contentRef.viewRef) {\n        this._applicationRef.detachView(this._contentRef.viewRef);\n        this._contentRef.viewRef.destroy();\n        this._contentRef = null;\n      }\n    }\n  }\n\n  private _getContentRef(content: string | TemplateRef<any>, context?: any): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const viewRef = content.createEmbeddedView(context);\n      this._applicationRef.attachView(viewRef);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n  }\n}\n","import {Injectable, Inject} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\nconst noop = () => {};\n\n\n\n/** Type for the callback used to revert the scrollbar compensation. */\nexport type CompensationReverter = () => void;\n\n\n\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to compensate the lack of a vertical scrollbar by adding an\n * equivalent padding on the right of the body, and to remove this compensation.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollBar {\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  /**\n   * Detects if a scrollbar is present and if yes, already compensates for its\n   * removal by adding an equivalent padding on the right of the body.\n   *\n   * @return a callback used to revert the compensation (noop if there was none,\n   * otherwise a function removing the padding)\n   */\n  compensate(): CompensationReverter { return !this._isPresent() ? noop : this._adjustBody(this._getWidth()); }\n\n  /**\n   * Adds a padding of the given width on the right of the body.\n   *\n   * @return a callback used to revert the padding to its previous value\n   */\n  private _adjustBody(width: number): CompensationReverter {\n    const body = this._document.body;\n    const userSetPadding = body.style.paddingRight;\n    const paddingAmount = parseFloat(window.getComputedStyle(body)['padding-right']);\n    body.style['padding-right'] = `${paddingAmount + width}px`;\n    return () => body.style['padding-right'] = userSetPadding;\n  }\n\n  /**\n   * Tells whether a scrollbar is currently present on the body.\n   *\n   * @return true if scrollbar is present, false otherwise\n   */\n  private _isPresent(): boolean {\n    const rect = this._document.body.getBoundingClientRect();\n    return rect.left + rect.right < window.innerWidth;\n  }\n\n  /**\n   * Calculates and returns the width of a scrollbar.\n   *\n   * @return the width of a scrollbar on this page\n   */\n  private _getWidth(): number {\n    const measurer = this._document.createElement('div');\n    measurer.className = 'modal-scrollbar-measure';\n\n    const body = this._document.body;\n    body.appendChild(measurer);\n    const width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n    body.removeChild(measurer);\n\n    return width;\n  }\n}\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'ngb-modal-backdrop',\n  template: '',\n  host:\n      {'[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")', 'style': 'z-index: 1050'}\n})\nexport class NgbModalBackdrop {\n  @Input() backdropClass: string;\n}\n","import {ComponentRef} from '@angular/core';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nimport {ContentRef} from '../util/popup';\n\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.close()` or `.dismiss()` the modal window from your component.\n */\nexport class NgbActiveModal {\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result?: any): void {}\n\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason?: any): void {}\n}\n\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nexport class NgbModalRef {\n  private _resolve: (result?: any) => void;\n  private _reject: (reason?: any) => void;\n\n  /**\n   * The instance of a component used for the modal content.\n   *\n   * When a `TemplateRef` is used as the content, will return `undefined`.\n   */\n  get componentInstance(): any {\n    if (this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n\n  /**\n   * The promise that is resolved when the modal is closed and rejected when the modal is dismissed.\n   */\n  result: Promise<any>;\n\n  constructor(\n      private _windowCmptRef: ComponentRef<NgbModalWindow>, private _contentRef: ContentRef,\n      private _backdropCmptRef?: ComponentRef<NgbModalBackdrop>, private _beforeDismiss?: Function) {\n    _windowCmptRef.instance.dismissEvent.subscribe((reason: any) => { this.dismiss(reason); });\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result?: any): void {\n    if (this._windowCmptRef) {\n      this._resolve(result);\n      this._removeModalElements();\n    }\n  }\n\n  private _dismiss(reason?: any) {\n    this._reject(reason);\n    this._removeModalElements();\n  }\n\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason?: any): void {\n    if (this._windowCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n        if (dismiss && dismiss.then) {\n          dismiss.then(\n              result => {\n                if (result !== false) {\n                  this._dismiss(reason);\n                }\n              },\n              () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n\n  private _removeModalElements() {\n    const windowNativeEl = this._windowCmptRef.location.nativeElement;\n    windowNativeEl.parentNode.removeChild(windowNativeEl);\n    this._windowCmptRef.destroy();\n\n    if (this._backdropCmptRef) {\n      const backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n      backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n      this._backdropCmptRef.destroy();\n    }\n\n    if (this._contentRef && this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n\n    this._windowCmptRef = null;\n    this._backdropCmptRef = null;\n    this._contentRef = null;\n  }\n}\n","export enum ModalDismissReasons {\n  BACKDROP_CLICK,\n  ESC\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output\n} from '@angular/core';\n\nimport {getFocusableBoundaryElements} from '../util/focus-trap';\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@Component({\n  selector: 'ngb-modal-window',\n  host: {\n    '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n    'role': 'dialog',\n    'tabindex': '-1',\n    '(keyup.esc)': 'escKey($event)',\n    '(click)': 'backdropClick($event)',\n    '[attr.aria-modal]': 'true',\n    '[attr.aria-labelledby]': 'ariaLabelledBy',\n  },\n  template: `\n    <div [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `\n})\nexport class NgbModalWindow implements OnInit,\n    AfterViewInit, OnDestroy {\n  private _elWithFocus: Element;  // element that is focused prior to modal opening\n\n  @Input() ariaLabelledBy: string;\n  @Input() backdrop: boolean | string = true;\n  @Input() centered: string;\n  @Input() keyboard = true;\n  @Input() size: string;\n  @Input() windowClass: string;\n\n  @Output('dismiss') dismissEvent = new EventEmitter();\n\n  constructor(@Inject(DOCUMENT) private _document: any, private _elRef: ElementRef<HTMLElement>) {}\n\n  backdropClick($event): void {\n    if (this.backdrop === true && this._elRef.nativeElement === $event.target) {\n      this.dismiss(ModalDismissReasons.BACKDROP_CLICK);\n    }\n  }\n\n  escKey($event): void {\n    if (this.keyboard && !$event.defaultPrevented) {\n      this.dismiss(ModalDismissReasons.ESC);\n    }\n  }\n\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\n\n  ngOnInit() { this._elWithFocus = this._document.activeElement; }\n\n  ngAfterViewInit() {\n    if (!this._elRef.nativeElement.contains(document.activeElement)) {\n      const autoFocusable = this._elRef.nativeElement.querySelector(`[ngbAutofocus]`) as HTMLElement;\n      const firstFocusable = getFocusableBoundaryElements(this._elRef.nativeElement)[0];\n\n      const elementToFocus = autoFocusable || firstFocusable || this._elRef.nativeElement;\n      elementToFocus.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n\n    let elementToFocus;\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n    elementToFocus.focus();\n    this._elWithFocus = null;\n  }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  Injector,\n  RendererFactory2,\n  TemplateRef,\n} from '@angular/core';\nimport {Subject} from 'rxjs';\n\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {ContentRef} from '../util/popup';\nimport {ScrollBar} from '../util/scrollbar';\nimport {isDefined, isString} from '../util/util';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\nimport {NgbModalWindow} from './modal-window';\n\n@Injectable({providedIn: 'root'})\nexport class NgbModalStack {\n  private _activeWindowCmptHasChanged = new Subject();\n  private _ariaHiddenValues: Map<Element, string> = new Map();\n  private _backdropAttributes = ['backdropClass'];\n  private _modalRefs: NgbModalRef[] = [];\n  private _windowAttributes = ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'size', 'windowClass'];\n  private _windowCmpts: ComponentRef<NgbModalWindow>[] = [];\n\n  constructor(\n      private _applicationRef: ApplicationRef, private _injector: Injector, @Inject(DOCUMENT) private _document: any,\n      private _scrollBar: ScrollBar, private _rendererFactory: RendererFactory2) {\n    // Trap focus on active WindowCmpt\n    this._activeWindowCmptHasChanged.subscribe(() => {\n      if (this._windowCmpts.length) {\n        const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n        ngbFocusTrap(activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n        this._revertAriaHidden();\n        this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n      }\n    });\n  }\n\n  open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options): NgbModalRef {\n    const containerEl =\n        isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n    const renderer = this._rendererFactory.createRenderer(null, null);\n\n    const revertPaddingForScrollBar = this._scrollBar.compensate();\n    const removeBodyClass = () => {\n      if (!this._modalRefs.length) {\n        renderer.removeClass(this._document.body, 'modal-open');\n        this._revertAriaHidden();\n      }\n    };\n\n    if (!containerEl) {\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n    }\n\n    const activeModal = new NgbActiveModal();\n    const contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal);\n\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop> =\n        options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : null;\n    let windowCmptRef: ComponentRef<NgbModalWindow> = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n    let ngbModalRef: NgbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    this._registerModalRef(ngbModalRef);\n    this._registerWindowCmpt(windowCmptRef);\n    ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n    ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n    if (this._modalRefs.length === 1) {\n      renderer.addClass(this._document.body, 'modal-open');\n    }\n\n    if (backdropCmptRef && backdropCmptRef.instance) {\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\n    }\n    return ngbModalRef;\n  }\n\n  dismissAll(reason?: any) { this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason)); }\n\n  hasOpenModals(): boolean { return this._modalRefs.length > 0; }\n\n  private _attachBackdrop(moduleCFR: ComponentFactoryResolver, containerEl: any): ComponentRef<NgbModalBackdrop> {\n    let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n    let backdropCmptRef = backdropFactory.create(this._injector);\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  private _attachWindowComponent(moduleCFR: ComponentFactoryResolver, containerEl: any, contentRef: any):\n      ComponentRef<NgbModalWindow> {\n    let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n    let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n    this._applicationRef.attachView(windowCmptRef.hostView);\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\n    return windowCmptRef;\n  }\n\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\n    this._windowAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _applyBackdropOptions(backdropInstance: NgbModalBackdrop, options: Object): void {\n    this._backdropAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        backdropInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _getContentRef(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\n      activeModal: NgbActiveModal): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, activeModal);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(moduleCFR, contentInjector, content, activeModal);\n    }\n  }\n\n  private _createFromTemplateRef(content: TemplateRef<any>, activeModal: NgbActiveModal): ContentRef {\n    const context = {\n      $implicit: activeModal,\n      close(result) { activeModal.close(result); },\n      dismiss(reason) { activeModal.dismiss(reason); }\n    };\n    const viewRef = content.createEmbeddedView(context);\n    this._applicationRef.attachView(viewRef);\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  private _createFromString(content: string): ContentRef {\n    const component = this._document.createTextNode(`${content}`);\n    return new ContentRef([[component]]);\n  }\n\n  private _createFromComponent(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\n      context: NgbActiveModal): ContentRef {\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n    const modalContentInjector =\n        Injector.create({providers: [{provide: NgbActiveModal, useValue: context}], parent: contentInjector});\n    const componentRef = contentCmptFactory.create(modalContentInjector);\n    this._applicationRef.attachView(componentRef.hostView);\n    return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n  }\n\n  private _setAriaHidden(element: Element) {\n    const parent = element.parentElement;\n    if (parent && element !== this._document.body) {\n      Array.from(parent.children).forEach(sibling => {\n        if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n          this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      });\n\n      this._setAriaHidden(parent);\n    }\n  }\n\n  private _revertAriaHidden() {\n    this._ariaHiddenValues.forEach((value, element) => {\n      if (value) {\n        element.setAttribute('aria-hidden', value);\n      } else {\n        element.removeAttribute('aria-hidden');\n      }\n    });\n    this._ariaHiddenValues.clear();\n  }\n\n  private _registerModalRef(ngbModalRef: NgbModalRef) {\n    const unregisterModalRef = () => {\n      const index = this._modalRefs.indexOf(ngbModalRef);\n      if (index > -1) {\n        this._modalRefs.splice(index, 1);\n      }\n    };\n    this._modalRefs.push(ngbModalRef);\n    ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n  }\n\n  private _registerWindowCmpt(ngbWindowCmpt: ComponentRef<NgbModalWindow>) {\n    this._windowCmpts.push(ngbWindowCmpt);\n    this._activeWindowCmptHasChanged.next();\n\n    ngbWindowCmpt.onDestroy(() => {\n      const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n      if (index > -1) {\n        this._windowCmpts.splice(index, 1);\n        this._activeWindowCmptHasChanged.next();\n      }\n    });\n  }\n}\n","import {Injectable, Injector, ComponentFactoryResolver} from '@angular/core';\n\nimport {NgbModalOptions, NgbModalConfig} from './modal-config';\nimport {NgbModalRef} from './modal-ref';\nimport {NgbModalStack} from './modal-stack';\n\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbModal {\n  constructor(\n      private _moduleCFR: ComponentFactoryResolver, private _injector: Injector, private _modalStack: NgbModalStack,\n      private _config: NgbModalConfig) {}\n\n  /**\n   * Opens a new modal window with the specified content and supplied options.\n   *\n   * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n   * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n   * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n   *\n   * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n   */\n  open(content: any, options: NgbModalOptions = {}): NgbModalRef {\n    const combinedOptions = Object.assign({}, this._config, options);\n    return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n  }\n\n  /**\n   * Dismisses all currently displayed modal windows with the supplied reason.\n   *\n   * @since 3.1.0\n   */\n  dismissAll(reason?: any) { this._modalStack.dismissAll(reason); }\n\n  /**\n   * Indicates if there are currently any open modal windows in the application.\n   *\n   * @since 3.3.0\n   */\n  hasOpenModals(): boolean { return this._modalStack.hasOpenModals(); }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {NgbModal} from './modal';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nexport {NgbModal} from './modal';\nexport {NgbModalConfig, NgbModalOptions} from './modal-config';\nexport {NgbModalRef, NgbActiveModal} from './modal-ref';\nexport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@NgModule({\n  declarations: [NgbModalBackdrop, NgbModalWindow],\n  entryComponents: [NgbModalBackdrop, NgbModalWindow],\n  providers: [NgbModal]\n})\nexport class NgbModalModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbModalModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPaginationConfig {\n  disabled = false;\n  boundaryLinks = false;\n  directionLinks = true;\n  ellipses = true;\n  maxSize = 0;\n  pageSize = 10;\n  rotate = false;\n  size: 'sm' | 'lg';\n}\n","import {\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  OnChanges,\n  ChangeDetectionStrategy,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbPaginationConfig} from './pagination-config';\n\n/**\n * A context for the\n * * `NgbPaginationFirst`\n * * `NgbPaginationPrevious`\n * * `NgbPaginationNext`\n * * `NgbPaginationLast`\n * * `NgbPaginationEllipsis`\n *\n * link templates in case you want to override one.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationLinkContext {\n  /**\n   * The currently selected page number\n   */\n  currentPage: number;\n\n  /**\n   * If `true`, the current link is disabled\n   */\n  disabled: boolean;\n}\n\n/**\n * A context for the `NgbPaginationNumber` link template in case you want to override one.\n *\n * Extends `NgbPaginationLinkContext`.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationNumberContext extends NgbPaginationLinkContext {\n  /**\n   * The page number, displayed by the current page link.\n   */\n  $implicit: number;\n}\n\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationEllipsis]'})\nexport class NgbPaginationEllipsis {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationFirst]'})\nexport class NgbPaginationFirst {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationLast]'})\nexport class NgbPaginationLast {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationNext]'})\nexport class NgbPaginationNext {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationNumber]'})\nexport class NgbPaginationNumber {\n  constructor(public templateRef: TemplateRef<NgbPaginationNumberContext>) {}\n}\n\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationPrevious]'})\nexport class NgbPaginationPrevious {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\n@Component({\n  selector: 'ngb-pagination',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'role': 'navigation'},\n  template: `\n    <ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n    <ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n    <ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n    <ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n    <ng-template #ellipsis>...</ng-template>\n    <ng-template #defaultNumber let-page let-currentPage=\"currentPage\">\n      {{ page }}\n      <span *ngIf=\"page === currentPage\" class=\"sr-only\">(current)</span>\n    </ng-template>\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <ng-template [ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <ng-template [ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled()}\"></ng-template>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\">\n          <ng-template [ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n                       [ngTemplateOutletContext]=\"{disabled: true, currentPage: page}\"></ng-template>\n        </a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\">\n          <ng-template [ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n                       [ngTemplateOutletContext]=\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\"></ng-template>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <ng-template [ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <ng-template [ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n    </ul>\n  `\n})\nexport class NgbPagination implements OnChanges {\n  pageCount = 0;\n  pages: number[] = [];\n\n  @ContentChild(NgbPaginationEllipsis) tplEllipsis: NgbPaginationEllipsis;\n  @ContentChild(NgbPaginationFirst) tplFirst: NgbPaginationFirst;\n  @ContentChild(NgbPaginationLast) tplLast: NgbPaginationLast;\n  @ContentChild(NgbPaginationNext) tplNext: NgbPaginationNext;\n  @ContentChild(NgbPaginationNumber) tplNumber: NgbPaginationNumber;\n  @ContentChild(NgbPaginationPrevious) tplPrevious: NgbPaginationPrevious;\n\n  /**\n   * If `true`, pagination links will be disabled.\n   */\n  @Input() disabled: boolean;\n\n  /**\n   * If `true`, the \"First\" and \"Last\" page links are shown.\n   */\n  @Input() boundaryLinks: boolean;\n\n  /**\n   * If `true`, the \"Next\" and \"Previous\" page links are shown.\n   */\n  @Input() directionLinks: boolean;\n\n  /**\n   * If `true`, the ellipsis symbols and first/last page numbers will be shown when `maxSize` > number of pages.\n   */\n  @Input() ellipses: boolean;\n\n  /**\n   * Whether to rotate pages when `maxSize` > number of pages.\n   *\n   * The current page always stays in the middle if `true`.\n   */\n  @Input() rotate: boolean;\n\n  /**\n   *  The number of items in your paginated collection.\n   *\n   *  Note, that this is not the number of pages. Page numbers are calculated dynamically based on\n   *  `collectionSize` and `pageSize`. Ex. if you have 100 items in your collection and displaying 20 items per page,\n   *  you'll end up with 5 pages.\n   */\n  @Input() collectionSize: number;\n\n  /**\n   *  The maximum number of pages to display.\n   */\n  @Input() maxSize: number;\n\n  /**\n   *  The current page.\n   *\n   *  Page numbers start with `1`.\n   */\n  @Input() page = 1;\n\n  /**\n   *  The number of items per page.\n   */\n  @Input() pageSize: number;\n\n  /**\n   *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n   *\n   *  Event payload is the number of the newly selected page.\n   *\n   *  Page numbers start with `1`.\n   */\n  @Output() pageChange = new EventEmitter<number>(true);\n\n  /**\n   * The pagination display size.\n   *\n   * Bootstrap currently supports small and large sizes.\n   */\n  @Input() size: 'sm' | 'lg';\n\n  constructor(config: NgbPaginationConfig) {\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n\n  hasPrevious(): boolean { return this.page > 1; }\n\n  hasNext(): boolean { return this.page < this.pageCount; }\n\n  nextDisabled(): boolean { return !this.hasNext() || this.disabled; }\n\n  previousDisabled(): boolean { return !this.hasPrevious() || this.disabled; }\n\n  selectPage(pageNumber: number): void { this._updatePages(pageNumber); }\n\n  ngOnChanges(changes: SimpleChanges): void { this._updatePages(this.page); }\n\n  isEllipsis(pageNumber): boolean { return pageNumber === -1; }\n\n  /**\n   * Appends ellipses and first/last page number to the displayed pages\n   */\n  private _applyEllipses(start: number, end: number) {\n    if (this.ellipses) {\n      if (start > 0) {\n        if (start > 1) {\n          this.pages.unshift(-1);\n        }\n        this.pages.unshift(1);\n      }\n      if (end < this.pageCount) {\n        if (end < (this.pageCount - 1)) {\n          this.pages.push(-1);\n        }\n        this.pages.push(this.pageCount);\n      }\n    }\n  }\n\n  /**\n   * Rotates page numbers based on maxSize items visible.\n   * Currently selected page stays in the middle:\n   *\n   * Ex. for selected page = 6:\n   * [5,*6*,7] for maxSize = 3\n   * [4,5,*6*,7] for maxSize = 4\n   */\n  private _applyRotation(): [number, number] {\n    let start = 0;\n    let end = this.pageCount;\n    let leftOffset = Math.floor(this.maxSize / 2);\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n    if (this.page <= leftOffset) {\n      // very beginning, no rotation -> [0..maxSize]\n      end = this.maxSize;\n    } else if (this.pageCount - this.page < leftOffset) {\n      // very end, no rotation -> [len-maxSize..len]\n      start = this.pageCount - this.maxSize;\n    } else {\n      // rotate\n      start = this.page - leftOffset - 1;\n      end = this.page + rightOffset;\n    }\n\n    return [start, end];\n  }\n\n  /**\n   * Paginates page numbers based on maxSize items per page.\n   */\n  private _applyPagination(): [number, number] {\n    let page = Math.ceil(this.page / this.maxSize) - 1;\n    let start = page * this.maxSize;\n    let end = start + this.maxSize;\n\n    return [start, end];\n  }\n\n  private _setPageInRange(newPageNo) {\n    const prevPageNo = this.page;\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  private _updatePages(newPage: number) {\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n    if (!isNumber(this.pageCount)) {\n      this.pageCount = 0;\n    }\n\n    // fill-in model needed to render pages\n    this.pages.length = 0;\n    for (let i = 1; i <= this.pageCount; i++) {\n      this.pages.push(i);\n    }\n\n    // set page within 1..max range\n    this._setPageInRange(newPage);\n\n    // apply maxSize if necessary\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n      let start = 0;\n      let end = this.pageCount;\n\n      // either paginating or rotating page numbers\n      if (this.rotate) {\n        [start, end] = this._applyRotation();\n      } else {\n        [start, end] = this._applyPagination();\n      }\n\n      this.pages = this.pages.slice(start, end);\n\n      // adding ellipses\n      this._applyEllipses(start, end);\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination';\n\nexport {\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination';\nexport {NgbPaginationConfig} from './pagination-config';\n\nconst DIRECTIVES = [\n  NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber,\n  NgbPaginationPrevious\n];\n\n@NgModule({declarations: DIRECTIVES, exports: DIRECTIVES, imports: [CommonModule]})\nexport class NgbPaginationModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbPaginationModule}; }\n}\n","import {Observable, merge} from 'rxjs';\nimport {share, filter, delay, map} from 'rxjs/operators';\n\nexport class Trigger {\n  constructor(public open: string, public close?: string) {\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  isManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\n\nconst DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave'],\n  'focus': ['focusin', 'focusout'],\n};\n\nexport function parseTriggers(triggers: string, aliases = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n    let alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nexport function observeTriggers(renderer: any, nativeElement: any, triggers: Trigger[], isOpenedFn: () => boolean) {\n  return new Observable<boolean>(subscriber => {\n    const listeners = [];\n    const openFn = () => subscriber.next(true);\n    const closeFn = () => subscriber.next(false);\n    const toggleFn = () => subscriber.next(!isOpenedFn());\n\n    triggers.forEach((trigger: Trigger) => {\n      if (trigger.open === trigger.close) {\n        listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n      } else {\n        listeners.push(\n            renderer.listen(nativeElement, trigger.open, openFn),\n            renderer.listen(nativeElement, trigger.close, closeFn));\n      }\n    });\n\n    return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n  });\n}\n\nconst delayOrNoop = <T>(time: number) => time > 0 ? delay<T>(time) : (a: Observable<T>) => a;\n\nexport function triggerDelay(openDelay: number, closeDelay: number, isOpenedFn: () => boolean) {\n  return (input$: Observable<boolean>) => {\n    let pending = null;\n    const filteredInput$ = input$.pipe(\n        map(open => ({open})), filter(event => {\n          const currentlyOpen = isOpenedFn();\n          if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n            pending = event;\n            return true;\n          }\n          if (pending && pending.open !== event.open) {\n            pending = null;\n          }\n          return false;\n        }),\n        share());\n    const delayedOpen$ = filteredInput$.pipe(filter(event => event.open), delayOrNoop(openDelay));\n    const delayedClose$ = filteredInput$.pipe(filter(event => !event.open), delayOrNoop(closeDelay));\n    return merge(delayedOpen$, delayedClose$)\n        .pipe(\n            filter(event => {\n              if (event === pending) {\n                pending = null;\n                return event.open !== isOpenedFn();\n              }\n              return false;\n            }),\n            map(event => event.open));\n  };\n}\n\nexport function listenToTriggers(\n    renderer: any, nativeElement: any, triggers: string, isOpenedFn: () => boolean, openFn, closeFn, openDelay = 0,\n    closeDelay = 0) {\n  const parsedTriggers = parseTriggers(triggers);\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return () => {};\n  }\n\n  const subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn)\n                           .pipe(triggerDelay(openDelay, closeDelay, isOpenedFn))\n                           .subscribe(open => (open ? openFn() : closeFn()));\n\n  return () => subscription.unsubscribe();\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPopoverConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'auto';\n  triggers = 'click';\n  container: string;\n  disablePopover = false;\n  popoverClass: string;\n  openDelay = 0;\n  closeDelay = 0;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ApplicationRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\n\nimport {NgbPopoverConfig} from './popover-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-popover-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")', 'role': 'tooltip', '[id]': 'id'},\n  template: `\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\" *ngIf=\"title != null\">\n      <ng-template #simpleTitle>{{title}}</ng-template>\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? title : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\n    </h3>\n    <div class=\"popover-body\"><ng-content></ng-content></div>`,\n  styleUrls: ['./popover.scss']\n})\nexport class NgbPopoverWindow {\n  @Input() title: undefined | string | TemplateRef<any>;\n  @Input() id: string;\n  @Input() popoverClass: string;\n  @Input() context: any;\n\n  isTitleTemplate() { return this.title instanceof TemplateRef; }\n}\n\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\n@Directive({selector: '[ngbPopover]', exportAs: 'ngbPopover'})\nexport class NgbPopover implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Indicates whether the popover should be closed on `Escape` key and inside/outside clicks:\n   *\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n   * as well as `Escape` presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the popover.\n   *\n   * If the title and the content are empty, the popover won't open.\n   */\n  @Input() ngbPopover: string | TemplateRef<any>;\n\n  /**\n   * The title of the popover.\n   *\n   * If the title and the content are empty, the popover won't open.\n   */\n  @Input() popoverTitle: string | TemplateRef<any>;\n\n  /**\n   * The preferred placement of the popover.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"auto\"` (same as the sequence above).\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * Specifies events that should trigger the tooltip.\n   *\n   * Supports a space separated list of event names.\n   * For more details see the [triggers demo](#/components/popover/examples#triggers).\n   */\n  @Input() triggers: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   *\n   * Currently only supports `body`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, popover is disabled and won't be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disablePopover: boolean;\n\n  /**\n   * An optional class applied to the popover window element.\n   *\n   * @since 2.2.0\n   */\n  @Input() popoverClass: string;\n\n  /**\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() openDelay: number;\n\n  /**\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() closeDelay: number;\n\n  /**\n   * An event emitted when the popover is shown. Contains no payload.\n   */\n  @Output() shown = new EventEmitter<void>();\n\n  /**\n   * An event emitted when the popover is hidden. Contains no payload.\n   */\n  @Output() hidden = new EventEmitter<void>();\n\n  private _ngbPopoverWindowId = `ngb-popover-${nextId++}`;\n  private _popupService: PopupService<NgbPopoverWindow>;\n  private _windowRef: ComponentRef<NgbPopoverWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n  private _isDisabled(): boolean {\n    if (this.disablePopover) {\n      return true;\n    }\n    if (!this.ngbPopover && !this.popoverTitle) {\n      return true;\n    }\n    return false;\n  }\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      private _applicationRef: ApplicationRef) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService<NgbPopoverWindow>(\n        NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, _applicationRef);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body', 'bs-popover');\n      }\n    });\n  }\n\n  /**\n   * Opens the popover.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the popover template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && !this._isDisabled()) {\n      this._windowRef = this._popupService.open(this.ngbPopover, context);\n      this._windowRef.instance.title = this.popoverTitle;\n      this._windowRef.instance.context = context;\n      this._windowRef.instance.popoverClass = this.popoverClass;\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening popover from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n      this._windowRef.changeDetectorRef.detectChanges();\n\n      // We need to mark for check, because popover won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the popover from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\n          [this._windowRef.location.nativeElement]);\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n  close(): void {\n    if (this._windowRef) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // close popover if title and content become empty, or disablePopover set to true\n    if ((changes['ngbPopover'] || changes['popoverTitle'] || changes['disablePopover']) && this._isDisabled()) {\n      this.close();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbPopover, NgbPopoverWindow} from './popover';\nimport {CommonModule} from '@angular/common';\n\nexport {NgbPopover} from './popover';\nexport {NgbPopoverConfig} from './popover-config';\nexport {Placement} from '../util/positioning';\n\n@NgModule({\n  declarations: [NgbPopover, NgbPopoverWindow],\n  exports: [NgbPopover],\n  imports: [CommonModule],\n  entryComponents: [NgbPopoverWindow]\n})\nexport class NgbPopoverModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbPopoverModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbProgressbarConfig {\n  max = 100;\n  animated = false;\n  striped = false;\n  type: string;\n  showValue = false;\n  height: string;\n}\n","import {Component, Input, ChangeDetectionStrategy} from '@angular/core';\nimport {getValueInRange} from '../util/util';\nimport {NgbProgressbarConfig} from './progressbar-config';\n\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\n@Component({\n  selector: 'ngb-progressbar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"progress\" [style.height]=\"height\">\n      <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{animated ? ' progress-bar-animated' : ''}}{{striped ?\n    ' progress-bar-striped' : ''}}\" role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n    [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n        <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getPercentValue()}}%</span><ng-content></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class NgbProgressbar {\n  /**\n   * The maximal value to be displayed in the progressbar.\n   */\n  @Input() max: number;\n\n  /**\n   * If `true`, the stripes on the progressbar are animated.\n   *\n   * Takes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n   */\n  @Input() animated: boolean;\n\n  /**\n   * If `true`, the progress bars will be displayed as striped.\n   */\n  @Input() striped: boolean;\n\n  /**\n   * If `true`, the current percentage will be shown in the `xx%` format.\n   */\n  @Input() showValue: boolean;\n\n  /**\n   * The type of the progress bar.\n   *\n   * Currently Bootstrap supports `\"success\"`, `\"info\"`, `\"warning\"` or `\"danger\"`.\n   */\n  @Input() type: string;\n\n  /**\n   * The current value for the progress bar.\n   *\n   * Should be in the `[0, max]` range.\n   */\n  @Input() value = 0;\n\n  /**\n   * THe height of the progress bar.\n   *\n   * Accepts any valid CSS height values, ex. `\"2rem\"`\n   */\n  @Input() height: string;\n\n  constructor(config: NgbProgressbarConfig) {\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n\n  getValue() { return getValueInRange(this.value, this.max); }\n\n  getPercentValue() { return 100 * this.getValue() / this.max; }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbProgressbar} from './progressbar';\n\nexport {NgbProgressbar} from './progressbar';\nexport {NgbProgressbarConfig} from './progressbar-config';\n\n@NgModule({declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule]})\nexport class NgbProgressbarModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbProgressbarModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbRatingConfig {\n  max = 10;\n  readonly = false;\n  resettable = false;\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  TemplateRef,\n  OnChanges,\n  SimpleChanges,\n  ContentChild,\n  forwardRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {NgbRatingConfig} from './rating-config';\nimport {getValueInRange} from '../util/util';\nimport {Key} from '../util/key';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/**\n * The context for the custom star display template defined in the `starTemplate`.\n */\nexport interface StarTemplateContext {\n  /**\n   * The star fill percentage, an integer in the `[0, 100]` range.\n   */\n  fill: number;\n\n  /**\n   * Index of the star, starts with `0`.\n   */\n  index: number;\n}\n\nconst NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRating),\n  multi: true\n};\n\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\n@Component({\n  selector: 'ngb-rating',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'd-inline-flex',\n    'tabindex': '0',\n    'role': 'slider',\n    'aria-valuemin': '0',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuenow]': 'nextRate',\n    '[attr.aria-valuetext]': 'ariaValueText()',\n    '[attr.aria-disabled]': 'readonly ? true : null',\n    '(blur)': 'handleBlur()',\n    '(keydown)': 'handleKeyDown($event)',\n    '(mouseleave)': 'reset()'\n  },\n  template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\" [ngTemplateOutletContext]=\"contexts[index]\">\n        </ng-template>\n      </span>\n    </ng-template>\n  `,\n  providers: [NGB_RATING_VALUE_ACCESSOR]\n})\nexport class NgbRating implements ControlValueAccessor,\n    OnInit, OnChanges {\n  contexts: StarTemplateContext[] = [];\n  disabled = false;\n  nextRate: number;\n\n\n  /**\n   * The maximal rating that can be given.\n   */\n  @Input() max: number;\n\n  /**\n   * The current rating. Could be a decimal value like `3.75`.\n   */\n  @Input() rate: number;\n\n  /**\n   * If `true`, the rating can't be changed.\n   */\n  @Input() readonly: boolean;\n\n  /**\n   * If `true`, the rating can be reset to `0` by mouse clicking currently set rating.\n   */\n  @Input() resettable: boolean;\n\n  /**\n   * The template to override the way each star is displayed.\n   *\n   * Alternatively put an `<ng-template>` as the only child of your `<ngb-rating>` element\n   */\n  @Input() starTemplate: TemplateRef<StarTemplateContext>;\n  @ContentChild(TemplateRef) starTemplateFromContent: TemplateRef<StarTemplateContext>;\n\n  /**\n   * An event emitted when the user is hovering over a given rating.\n   *\n   * Event payload equals to the rating being hovered over.\n   */\n  @Output() hover = new EventEmitter<number>();\n\n  /**\n   * An event emitted when the user stops hovering over a given rating.\n   *\n   * Event payload equals to the rating of the last item being hovered over.\n   */\n  @Output() leave = new EventEmitter<number>();\n\n  /**\n   * An event emitted when the user selects a new rating.\n   *\n   * Event payload equals to the newly selected rating.\n   */\n  @Output() rateChange = new EventEmitter<number>(true);\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(config: NgbRatingConfig, private _changeDetectorRef: ChangeDetectorRef) {\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n\n  ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n\n  enter(value: number): void {\n    if (!this.readonly && !this.disabled) {\n      this._updateState(value);\n    }\n    this.hover.emit(value);\n  }\n\n  handleBlur() { this.onTouched(); }\n\n  handleClick(value: number) { this.update(this.resettable && this.rate === value ? 0 : value); }\n\n  handleKeyDown(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n      case Key.ArrowLeft:\n        this.update(this.rate - 1);\n        break;\n      case Key.ArrowUp:\n      case Key.ArrowRight:\n        this.update(this.rate + 1);\n        break;\n      case Key.Home:\n        this.update(0);\n        break;\n      case Key.End:\n        this.update(this.max);\n        break;\n      default:\n        return;\n    }\n\n    // note 'return' in default case\n    event.preventDefault();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit(): void {\n    this.contexts = Array.from({length: this.max}, (v, k) => ({fill: 0, index: k}));\n    this._updateState(this.rate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  reset(): void {\n    this.leave.emit(this.nextRate);\n    this._updateState(this.rate);\n  }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  update(value: number, internalChange = true): void {\n    const newRate = getValueInRange(value, this.max, 0);\n    if (!this.readonly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this._updateState(this.rate);\n  }\n\n  writeValue(value) {\n    this.update(value, false);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _getFillValue(index: number): number {\n    const diff = this.nextRate - index;\n\n    if (diff >= 1) {\n      return 100;\n    }\n    if (diff < 1 && diff > 0) {\n      return parseInt((diff * 100).toFixed(2), 10);\n    }\n\n    return 0;\n  }\n\n  private _updateState(nextValue: number) {\n    this.nextRate = nextValue;\n    this.contexts.forEach((context, index) => context.fill = this._getFillValue(index));\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbRating} from './rating';\n\nexport {NgbRating} from './rating';\nexport {NgbRatingConfig} from './rating-config';\n\n@NgModule({declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule]})\nexport class NgbRatingModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbRatingModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbTabset`](#/components/tabset/api#NgbTabset) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTabsetConfig {\n  justify: 'start' | 'center' | 'end' | 'fill' | 'justified' = 'start';\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  type: 'tabs' | 'pills' = 'tabs';\n}\n","import {\n  Component,\n  Input,\n  ContentChildren,\n  QueryList,\n  Directive,\n  TemplateRef,\n  AfterContentChecked,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {NgbTabsetConfig} from './tabset-config';\n\nlet nextId = 0;\n\n/**\n * A directive to wrap tab titles that need to contain HTML markup or other directives.\n *\n * Alternatively you could use the `NgbTab.title` input for string titles.\n */\n@Directive({selector: 'ng-template[ngbTabTitle]'})\nexport class NgbTabTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive to wrap content to be displayed in a tab.\n */\n@Directive({selector: 'ng-template[ngbTabContent]'})\nexport class NgbTabContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive representing an individual tab.\n */\n@Directive({selector: 'ngb-tab'})\nexport class NgbTab implements AfterContentChecked {\n  /**\n   * The tab identifier.\n   *\n   * Must be unique for the entire document for proper accessibility support.\n   */\n  @Input() id = `ngb-tab-${nextId++}`;\n\n  /**\n   * The tab title.\n   *\n   * Use the [`NgbTabTitle`](#/components/tabset/api#NgbTabTitle) directive for non-string titles.\n   */\n  @Input() title: string;\n\n  /**\n   * If `true`, the current tab is disabled and can't be toggled.\n   */\n  @Input() disabled = false;\n\n  titleTpl: NgbTabTitle | null;\n  contentTpl: NgbTabContent | null;\n\n  @ContentChildren(NgbTabTitle, {descendants: false}) titleTpls: QueryList<NgbTabTitle>;\n  @ContentChildren(NgbTabContent, {descendants: false}) contentTpls: QueryList<NgbTabContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * The payload of the change event fired right before the tab change.\n */\nexport interface NgbTabChangeEvent {\n  /**\n   * The id of the currently active tab.\n   */\n  activeId: string;\n\n  /**\n   * The id of the newly selected tab.\n   */\n  nextId: string;\n\n  /**\n   * Calling this function will prevent tab switching.\n   */\n  preventDefault: () => void;\n}\n\n/**\n * A component that makes it easy to create tabbed interface.\n */\n@Component({\n  selector: 'ngb-tabset',\n  exportAs: 'ngbTabset',\n  template: `\n    <ul [class]=\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\n          href (click)=\"select(tab.id); $event.preventDefault()\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\n          [attr.aria-expanded]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n        <div\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\n          role=\"tabpanel\"\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\"\n          [attr.aria-expanded]=\"tab.id === activeId\">\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </ng-template>\n    </div>\n  `\n})\nexport class NgbTabset implements AfterContentChecked {\n  justifyClass: string;\n\n  @ContentChildren(NgbTab) tabs: QueryList<NgbTab>;\n\n  /**\n   * The identifier of the tab that should be opened **initially**.\n   *\n   * For subsequent tab switches use the `.select()` method and the `(tabChange)` event.\n   */\n  @Input() activeId: string;\n\n  /**\n   * If `true`, non-visible tabs content will be removed from DOM. Otherwise it will just be hidden.\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * The horizontal alignment of the tabs with flexbox utilities.\n   */\n  @Input()\n  set justify(className: 'start' | 'center' | 'end' | 'fill' | 'justified') {\n    if (className === 'fill' || className === 'justified') {\n      this.justifyClass = `nav-${className}`;\n    } else {\n      this.justifyClass = `justify-content-${className}`;\n    }\n  }\n\n  /**\n   * The orientation of the tabset.\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Type of navigation to be used for tabs.\n   *\n   * Currently Bootstrap supports only `\"tabs\"` and `\"pills\"`.\n   *\n   * Since `3.0.0` can also be an arbitrary string (ex. for custom themes).\n   */\n  @Input() type: 'tabs' | 'pills' | string;\n\n  /**\n   * A tab change event emitted right before the tab change happens.\n   *\n   * See [`NgbTabChangeEvent`](#/components/tabset/api#NgbTabChangeEvent) for payload details.\n   */\n  @Output() tabChange = new EventEmitter<NgbTabChangeEvent>();\n\n  constructor(config: NgbTabsetConfig) {\n    this.type = config.type;\n    this.justify = config.justify;\n    this.orientation = config.orientation;\n  }\n\n  /**\n   * Selects the tab with the given id and shows its associated content panel.\n   *\n   * Any other tab that was previously selected becomes unselected and its associated pane is removed from DOM or\n   * hidden depending on the `destroyOnHide` value.\n   */\n  select(tabId: string) {\n    let selectedTab = this._getTabById(tabId);\n    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n      let defaultPrevented = false;\n\n      this.tabChange.emit(\n          {activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        this.activeId = selectedTab.id;\n      }\n    }\n  }\n\n  ngAfterContentChecked() {\n    // auto-correct activeId that might have been set incorrectly as input\n    let activeTab = this._getTabById(this.activeId);\n    this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n  }\n\n  private _getTabById(id: string): NgbTab {\n    let tabsWithId: NgbTab[] = this.tabs.filter(tab => tab.id === id);\n    return tabsWithId.length ? tabsWithId[0] : null;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle} from './tabset';\n\nexport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTabChangeEvent} from './tabset';\nexport {NgbTabsetConfig} from './tabset-config';\n\nconst NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n\n@NgModule({declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule]})\nexport class NgbTabsetModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTabsetModule}; }\n}\n","import {isNumber, toInteger} from '../util/util';\n\nexport class NgbTime {\n  hour: number;\n  minute: number;\n  second: number;\n\n  constructor(hour?: number, minute?: number, second?: number) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n\n  changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n\n  updateHour(hour: number) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n\n  changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n\n  updateMinute(minute: number) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n\n  changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n\n  updateSecond(second: number) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n\n  isValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n\n  toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTimepickerConfig {\n  meridian = false;\n  spinners = true;\n  seconds = false;\n  hourStep = 1;\n  minuteStep = 1;\n  secondStep = 1;\n  disabled = false;\n  readonlyInputs = false;\n  size: 'small' | 'medium' | 'large' = 'medium';\n}\n","import {Injectable} from '@angular/core';\nimport {NgbTimeStruct} from './ngb-time-struct';\nimport {isInteger} from '../util/util';\n\nexport function NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n  return new NgbTimeStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY})\nexport abstract class NgbTimeAdapter<T> {\n  /**\n   * Converts a user-model time of type `T` to an `NgbTimeStruct` for internal use.\n   */\n  abstract fromModel(value: T): NgbTimeStruct;\n\n  /**\n   * Converts an internal `NgbTimeStruct` time to a user-model time of type `T`.\n   */\n  abstract toModel(time: NgbTimeStruct): T;\n}\n\n@Injectable()\nexport class NgbTimeStructAdapter extends NgbTimeAdapter<NgbTimeStruct> {\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  fromModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  toModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  forwardRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {isInteger, isNumber, padNumber, toInteger} from '../util/util';\nimport {NgbTime} from './ngb-time';\nimport {NgbTimepickerConfig} from './timepicker-config';\nimport {NgbTimeAdapter} from './ngb-time-adapter';\n\nconst NGB_TIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTimepicker),\n  multi: true\n};\n\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\n@Component({\n  selector: 'ngb-timepicker',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./timepicker.scss'],\n  template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\"\n            (keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(-hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\"\n            (keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\"\n            (keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model?.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">PM</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">AM</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `,\n  providers: [NGB_TIMEPICKER_VALUE_ACCESSOR]\n})\nexport class NgbTimepicker implements ControlValueAccessor,\n    OnChanges {\n  disabled: boolean;\n  model: NgbTime;\n\n  private _hourStep: number;\n  private _minuteStep: number;\n  private _secondStep: number;\n\n  /**\n   * Whether to display 12H or 24H mode.\n   */\n  @Input() meridian: boolean;\n\n  /**\n   * If `true`, the spinners above and below inputs are visible.\n   */\n  @Input() spinners: boolean;\n\n  /**\n   * If `true`, it is possible to select seconds.\n   */\n  @Input() seconds: boolean;\n\n  /**\n   * The number of hours to add/subtract when clicking hour spinners.\n   */\n  @Input()\n  set hourStep(step: number) {\n    this._hourStep = isInteger(step) ? step : this._config.hourStep;\n  }\n\n  get hourStep(): number { return this._hourStep; }\n\n  /**\n   * The number of minutes to add/subtract when clicking minute spinners.\n   */\n  @Input()\n  set minuteStep(step: number) {\n    this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n  }\n\n  get minuteStep(): number { return this._minuteStep; }\n\n  /**\n   * The number of seconds to add/subtract when clicking second spinners.\n   */\n  @Input()\n  set secondStep(step: number) {\n    this._secondStep = isInteger(step) ? step : this._config.secondStep;\n  }\n\n  get secondStep(): number { return this._secondStep; }\n\n  /**\n   * If `true`, the timepicker is readonly and can't be changed.\n   */\n  @Input() readonlyInputs: boolean;\n\n  /**\n   * The size of inputs and buttons.\n   */\n  @Input() size: 'small' | 'medium' | 'large';\n\n  constructor(\n      private readonly _config: NgbTimepickerConfig, private _ngbTimeAdapter: NgbTimeAdapter<any>,\n      private _cd: ChangeDetectorRef) {\n    this.meridian = _config.meridian;\n    this.spinners = _config.spinners;\n    this.seconds = _config.seconds;\n    this.hourStep = _config.hourStep;\n    this.minuteStep = _config.minuteStep;\n    this.secondStep = _config.secondStep;\n    this.disabled = _config.disabled;\n    this.readonlyInputs = _config.readonlyInputs;\n    this.size = _config.size;\n  }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  writeValue(value) {\n    const structValue = this._ngbTimeAdapter.fromModel(value);\n    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n      this.model.second = 0;\n    }\n    this._cd.markForCheck();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  changeHour(step: number) {\n    this.model.changeHour(step);\n    this.propagateModelChange();\n  }\n\n  changeMinute(step: number) {\n    this.model.changeMinute(step);\n    this.propagateModelChange();\n  }\n\n  changeSecond(step: number) {\n    this.model.changeSecond(step);\n    this.propagateModelChange();\n  }\n\n  updateHour(newVal: string) {\n    const isPM = this.model.hour >= 12;\n    const enteredHour = toInteger(newVal);\n    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n      this.model.updateHour(enteredHour + 12);\n    } else {\n      this.model.updateHour(enteredHour);\n    }\n    this.propagateModelChange();\n  }\n\n  updateMinute(newVal: string) {\n    this.model.updateMinute(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  updateSecond(newVal: string) {\n    this.model.updateSecond(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  toggleMeridian() {\n    if (this.meridian) {\n      this.changeHour(12);\n    }\n  }\n\n  formatHour(value: number) {\n    if (isNumber(value)) {\n      if (this.meridian) {\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\n      } else {\n        return padNumber(value % 24);\n      }\n    } else {\n      return padNumber(NaN);\n    }\n  }\n\n  formatMinSec(value: number) { return padNumber(value); }\n\n  get isSmallSize(): boolean { return this.size === 'small'; }\n\n  get isLargeSize(): boolean { return this.size === 'large'; }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n      this.model.second = 0;\n      this.propagateModelChange(false);\n    }\n  }\n\n  private propagateModelChange(touched = true) {\n    if (touched) {\n      this.onTouched();\n    }\n    if (this.model.isValid(this.seconds)) {\n      this.onChange(\n          this._ngbTimeAdapter.toModel({hour: this.model.hour, minute: this.model.minute, second: this.model.second}));\n    } else {\n      this.onChange(this._ngbTimeAdapter.toModel(null));\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTimepicker} from './timepicker';\n\nexport {NgbTimepicker} from './timepicker';\nexport {NgbTimepickerConfig} from './timepicker-config';\nexport {NgbTimeStruct} from './ngb-time-struct';\nexport {NgbTimeAdapter} from './ngb-time-adapter';\n\n@NgModule({declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule]})\nexport class NgbTimepickerModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTimepickerModule}; }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTooltipConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'auto';\n  triggers = 'hover focus';\n  container: string;\n  disableTooltip = false;\n  tooltipClass: string;\n  openDelay = 0;\n  closeDelay = 0;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ApplicationRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\n\nimport {NgbTooltipConfig} from './tooltip-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-tooltip-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'[class]': '\"tooltip show\" + (tooltipClass ? \" \" + tooltipClass : \"\")', 'role': 'tooltip', '[id]': 'id'},\n  template: `<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\n  styleUrls: ['./tooltip.scss']\n})\nexport class NgbTooltipWindow {\n  @Input() id: string;\n  @Input() tooltipClass: string;\n}\n\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\n@Directive({selector: '[ngbTooltip]', exportAs: 'ngbTooltip'})\nexport class NgbTooltip implements OnInit, OnDestroy {\n  /**\n   * Indicates whether the tooltip should be closed on `Escape` key and inside/outside clicks:\n   *\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n   * as well as `Escape` presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The preferred placement of the tooltip.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"auto\"` (same as the sequence above).\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * Specifies events that should trigger the tooltip.\n   *\n   * Supports a space separated list of event names.\n   * For more details see the [triggers demo](#/components/tooltip/examples#triggers).\n   */\n  @Input() triggers: string;\n\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, tooltip is disabled and won't be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disableTooltip: boolean;\n\n  /**\n   * An optional class applied to the tooltip window element.\n   *\n   * @since 3.2.0\n   */\n  @Input() tooltipClass: string;\n\n  /**\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() openDelay: number;\n\n  /**\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() closeDelay: number;\n\n  /**\n   * An event emitted when the tooltip is shown. Contains no payload.\n   */\n  @Output() shown = new EventEmitter();\n  /**\n   * An event emitted when the popover is hidden. Contains no payload.\n   */\n  @Output() hidden = new EventEmitter();\n\n  private _ngbTooltip: string | TemplateRef<any>;\n  private _ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n  private _popupService: PopupService<NgbTooltipWindow>;\n  private _windowRef: ComponentRef<NgbTooltipWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      private _applicationRef: ApplicationRef) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this.tooltipClass = config.tooltipClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService<NgbTooltipWindow>(\n        NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, _applicationRef);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body', 'bs-tooltip');\n      }\n    });\n  }\n\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n   *\n   * If the content if falsy, the tooltip won't open.\n   */\n  @Input()\n  set ngbTooltip(value: string | TemplateRef<any>) {\n    this._ngbTooltip = value;\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n\n  get ngbTooltip() { return this._ngbTooltip; }\n\n  /**\n   * Opens the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the tooltip template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n      this._windowRef = this._popupService.open(this._ngbTooltip, context);\n      this._windowRef.instance.tooltipClass = this.tooltipClass;\n      this._windowRef.instance.id = this._ngbTooltipWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n      this._windowRef.changeDetectorRef.detectChanges();\n\n      // We need to mark for check, because tooltip won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the tooltip from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\n          [this._windowRef.location.nativeElement]);\n\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n  close(): void {\n    if (this._windowRef != null) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbTooltip, NgbTooltipWindow} from './tooltip';\n\nexport {NgbTooltipConfig} from './tooltip-config';\nexport {NgbTooltip} from './tooltip';\nexport {Placement} from '../util/positioning';\n\n@NgModule({declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow]})\nexport class NgbTooltipModule {\n  /**\n   * No need in forRoot anymore with tree-shakeable services\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTooltipModule}; }\n}\n","import {Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport {regExpEscape, toString} from '../util/util';\n\n/**\n * A component that helps with text highlighting.\n *\n * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\n@Component({\n  selector: 'ngb-highlight',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\n      `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` +\n      `</ng-template>`,  // template needs to be formatted in a certain way so we don't add empty text nodes\n  styleUrls: ['./highlight.scss']\n})\nexport class NgbHighlight implements OnChanges {\n  parts: string[];\n\n  /**\n   * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n   */\n  @Input() highlightClass = 'ngb-highlight';\n\n  /**\n   * The text highlighting is added to.\n   *\n   * If the `term` is found inside this text, it will be highlighted.\n   * If the `term` contains array then all the items from it will be highlighted inside the text.\n   */\n  @Input() result: string;\n\n  /**\n   * The term or array of terms to be highlighted.\n   * Since version `v4.2.0` term could be a `string[]`\n   */\n  @Input() term: string | string[];\n\n  ngOnChanges(changes: SimpleChanges) {\n    const resultStr = toString(this.result);\n    if (!resultStr) {\n      this.parts = [resultStr];\n      return;\n    }\n    let resultTerms: string[] = Array.isArray(this.term) ? this.term.map(x => toString(x)) : [toString(this.term)];\n\n    resultTerms = resultTerms.filter(x => x);\n    if (!resultTerms.length) {\n      this.parts = [resultStr];\n      return;\n    }\n\n    const regexStr = `(${resultTerms.map(x => regExpEscape(x)).join('|')})`;\n    this.parts = resultStr.split(new RegExp(regexStr, 'gmi'));\n  }\n}\n","import {Component, Input, Output, EventEmitter, TemplateRef, OnInit} from '@angular/core';\n\nimport {toString} from '../util/util';\n\n/**\n * The context for the typeahead result template in case you want to override the default one.\n */\nexport interface ResultTemplateContext {\n  /**\n   * Your typeahead result item.\n   */\n  result: any;\n\n  /**\n   * Search term from the `<input>` used to get current result.\n   */\n  term: string;\n}\n\n@Component({\n  selector: 'ngb-typeahead-window',\n  exportAs: 'ngbTypeaheadWindow',\n  host: {'(mousedown)': '$event.preventDefault()', 'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id'},\n  template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `\n})\nexport class NgbTypeaheadWindow implements OnInit {\n  activeIdx = 0;\n\n  /**\n   *  The id for the typeahead window. The id should be unique and the same\n   *  as the associated typeahead's id.\n   */\n  @Input() id: string;\n\n  /**\n   * Flag indicating if the first row should be active initially\n   */\n  @Input() focusFirst = true;\n\n  /**\n   * Typeahead match results to be displayed\n   */\n  @Input() results;\n\n  /**\n   * Search term used to get current results\n   */\n  @Input() term: string;\n\n  /**\n   * A function used to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() formatter = toString;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Event raised when user selects a particular result row\n   */\n  @Output('select') selectEvent = new EventEmitter();\n\n  @Output('activeChange') activeChangeEvent = new EventEmitter();\n\n  hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\n\n  getActive() { return this.results[this.activeIdx]; }\n\n  markActive(activeIdx: number) {\n    this.activeIdx = activeIdx;\n    this._activeChanged();\n  }\n\n  next() {\n    if (this.activeIdx === this.results.length - 1) {\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n    } else {\n      this.activeIdx++;\n    }\n    this._activeChanged();\n  }\n\n  prev() {\n    if (this.activeIdx < 0) {\n      this.activeIdx = this.results.length - 1;\n    } else if (this.activeIdx === 0) {\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n    } else {\n      this.activeIdx--;\n    }\n    this._activeChanged();\n  }\n\n  resetActive() {\n    this.activeIdx = this.focusFirst ? 0 : -1;\n    this._activeChanged();\n  }\n\n  select(item) { this.selectEvent.emit(item); }\n\n  ngOnInit() { this.resetActive(); }\n\n  private _activeChanged() {\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n  }\n}\n","import {Injectable, Inject, InjectionToken, OnDestroy} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\n\n// usefulness (and default value) of delay documented in Material's CDK\n// https://github.com/angular/material2/blob/6405da9b8e8532a7e5c854c920ee1815c275d734/src/cdk/a11y/live-announcer/live-announcer.ts#L50\nexport type ARIA_LIVE_DELAY_TYPE = number | null;\nexport const ARIA_LIVE_DELAY = new InjectionToken<ARIA_LIVE_DELAY_TYPE>(\n    'live announcer delay', {providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY});\nexport function ARIA_LIVE_DELAY_FACTORY(): number {\n  return 100;\n}\n\n\nfunction getLiveElement(document: any, lazyCreate = false): HTMLElement | null {\n  let element = document.body.querySelector('#ngb-live') as HTMLElement;\n\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n\n    element.classList.add('sr-only');\n\n    document.body.appendChild(element);\n  }\n\n  return element;\n}\n\n\n\n@Injectable({providedIn: 'root'})\nexport class Live implements OnDestroy {\n  constructor(@Inject(DOCUMENT) private _document: any, @Inject(ARIA_LIVE_DELAY) private _delay: any) {}\n\n  ngOnDestroy() {\n    const element = getLiveElement(this._document);\n    if (element) {\n      element.parentElement.removeChild(element);\n    }\n  }\n\n  say(message: string) {\n    const element = getLiveElement(this._document, true);\n    const delay = this._delay;\n\n    element.textContent = '';\n    const setText = () => element.textContent = message;\n    if (delay === null) {\n      setText();\n    } else {\n      setTimeout(setText, delay);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTypeaheadConfig {\n  container;\n  editable = true;\n  focusFirst = true;\n  showHint = false;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  ApplicationRef\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\nimport {BehaviorSubject, fromEvent, Observable, Subject, Subscription} from 'rxjs';\nimport {map, switchMap, tap} from 'rxjs/operators';\n\nimport {Live} from '../util/accessibility/live';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {Key} from '../util/key';\nimport {PopupService} from '../util/popup';\nimport {PlacementArray, positionElements} from '../util/positioning';\nimport {isDefined, toString} from '../util/util';\n\nimport {NgbTypeaheadConfig} from './typeahead-config';\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\n\n\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTypeahead),\n  multi: true\n};\n\n/**\n * An event emitted right before an item is selected from the result list.\n */\nexport interface NgbTypeaheadSelectItemEvent {\n  /**\n   * The item from the result list about to be selected.\n   */\n  item: any;\n\n  /**\n   * Calling this function will prevent item selection from happening.\n   */\n  preventDefault: () => void;\n}\n\nlet nextWindowId = 0;\n\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\n@Directive({\n  selector: 'input[ngbTypeahead]',\n  exportAs: 'ngbTypeahead',\n  host: {\n    '(blur)': 'handleBlur()',\n    '[class.open]': 'isPopupOpen()',\n    '(keydown)': 'handleKeyDown($event)',\n    '[autocomplete]': 'autocomplete',\n    'autocapitalize': 'off',\n    'autocorrect': 'off',\n    'role': 'combobox',\n    'aria-multiline': 'false',\n    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n    '[attr.aria-activedescendant]': 'activeDescendant',\n    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n    '[attr.aria-expanded]': 'isPopupOpen()'\n  },\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n})\nexport class NgbTypeahead implements ControlValueAccessor,\n    OnInit, OnDestroy {\n  private _popupService: PopupService<NgbTypeaheadWindow>;\n  private _subscription: Subscription;\n  private _closed$ = new Subject();\n  private _inputValueBackup: string;\n  private _valueChanges: Observable<string>;\n  private _resubscribeTypeahead: BehaviorSubject<any>;\n  private _windowRef: ComponentRef<NgbTypeaheadWindow>;\n  private _zoneSubscription: any;\n\n  /**\n   * The value for the `autocomplete` attribute for the `<input>` element.\n   *\n   * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n   *\n   * @since 2.1.0\n   */\n  @Input() autocomplete = 'off';\n\n  /**\n   * A selector specifying the element the typeahead popup will be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, model values will not be restricted only to items selected from the popup.\n   */\n  @Input() editable: boolean;\n\n  /**\n   * If `true`, the first item in the result list will always stay focused while typing.\n   */\n  @Input() focusFirst: boolean;\n\n  /**\n   * The function that converts an item from the result list to a `string` to display in the `<input>` field.\n   *\n   * It is called when the user selects something in the popup or the model value changes, so the input needs to\n   * be updated.\n   */\n  @Input() inputFormatter: (item: any) => string;\n\n  /**\n   * The function that converts a stream of text values from the `<input>` element to the stream of the array of items\n   * to display in the typeahead popup.\n   *\n   * If the resulting observable emits a non-empty array - the popup will be shown. If it emits an empty array - the\n   * popup will be closed.\n   *\n   * See the [basic example](#/components/typeahead/examples#basic) for more details.\n   *\n   * Note that the `this` argument is `undefined` so you need to explicitly bind it to a desired \"this\" target.\n   */\n  @Input() ngbTypeahead: (text: Observable<string>) => Observable<any[]>;\n\n  /**\n   * The function that converts an item from the result list to a `string` to display in the popup.\n   *\n   * Must be provided, if your `ngbTypeahead` returns something other than `Observable<string[]>`.\n   *\n   * Alternatively for more complex markup in the popup you should use `resultTemplate`.\n   */\n  @Input() resultFormatter: (item: any) => string;\n\n  /**\n   * The template to override the way resulting items are displayed in the popup.\n   *\n   * See the [ResultTemplateContext](#/components/typeahead/api#ResultTemplateContext) for the template context.\n   *\n   * Also see the [template for results demo](#/components/typeahead/examples#template) for more details.\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * If `true`, will show the hint in the `<input>` when an item in the result list matches.\n   */\n  @Input() showHint: boolean;\n\n  /**\n   * The preferred placement of the typeahead.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray = 'bottom-left';\n\n  /**\n   * An event emitted right before an item is selected from the result list.\n   *\n   * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n   */\n  @Output() selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\n\n  activeDescendant: string;\n  popupId = `ngb-typeahead-${nextWindowId++}`;\n\n  private _onTouched = () => {};\n  private _onChange = (_: any) => {};\n\n  constructor(\n      private _elementRef: ElementRef<HTMLInputElement>, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _injector: Injector, componentFactoryResolver: ComponentFactoryResolver,\n      config: NgbTypeaheadConfig, ngZone: NgZone, private _live: Live, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone, private _changeDetector: ChangeDetectorRef, private _applicationRef: ApplicationRef) {\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n\n    this._valueChanges = fromEvent<Event>(_elementRef.nativeElement, 'input')\n                             .pipe(map($event => ($event.target as HTMLInputElement).value));\n\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\n        NgbTypeaheadWindow, _injector, _viewContainerRef, _renderer, componentFactoryResolver, _applicationRef);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this.isPopupOpen()) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    const inputValues$ = this._valueChanges.pipe(tap(value => {\n      this._inputValueBackup = this.showHint ? value : null;\n      if (this.editable) {\n        this._onChange(value);\n      }\n    }));\n    const results$ = inputValues$.pipe(this.ngbTypeahead);\n    const processedResults$ = results$.pipe(tap(() => {\n      if (!this.editable) {\n        this._onChange(undefined);\n      }\n    }));\n    const userInput$ = this._resubscribeTypeahead.pipe(switchMap(() => processedResults$));\n    this._subscription = this._subscribeToUserInput(userInput$);\n  }\n\n  ngOnDestroy(): void {\n    this._closePopup();\n    this._unsubscribeFromUserInput();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  writeValue(value) {\n    this._writeInputValue(this._formatItemForInput(value));\n    if (this.showHint) {\n      this._inputValueBackup = value;\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  /**\n   * Dismisses typeahead popup window\n   */\n  dismissPopup() {\n    if (this.isPopupOpen()) {\n      this._resubscribeTypeahead.next(null);\n      this._closePopup();\n      if (this.showHint && this._inputValueBackup !== null) {\n        this._writeInputValue(this._inputValueBackup);\n      }\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Returns true if the typeahead popup window is displayed\n   */\n  isPopupOpen() { return this._windowRef != null; }\n\n  handleBlur() {\n    this._resubscribeTypeahead.next(null);\n    this._onTouched();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.isPopupOpen()) {\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n        event.preventDefault();\n        this._windowRef.instance.next();\n        this._showHint();\n        break;\n      case Key.ArrowUp:\n        event.preventDefault();\n        this._windowRef.instance.prev();\n        this._showHint();\n        break;\n      case Key.Enter:\n      case Key.Tab:\n        const result = this._windowRef.instance.getActive();\n        if (isDefined(result)) {\n          event.preventDefault();\n          event.stopPropagation();\n          this._selectResult(result);\n        }\n        this._closePopup();\n        break;\n    }\n  }\n\n  private _openPopup() {\n    if (!this.isPopupOpen()) {\n      this._inputValueBackup = this._elementRef.nativeElement.value;\n      this._windowRef = this._popupService.open();\n      this._windowRef.instance.id = this.popupId;\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\n      this._windowRef.instance.activeChangeEvent.subscribe((activeId: string) => this.activeDescendant = activeId);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      this._changeDetector.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$,\n          [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n    }\n  }\n\n  private _closePopup() {\n    this._closed$.next();\n    this._popupService.close();\n    this._windowRef = null;\n    this.activeDescendant = undefined;\n  }\n\n  private _selectResult(result: any) {\n    let defaultPrevented = false;\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\n    this._resubscribeTypeahead.next(null);\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n      this._onChange(result);\n    }\n  }\n\n  private _selectResultClosePopup(result: any) {\n    this._selectResult(result);\n    this._closePopup();\n  }\n\n  private _showHint() {\n    if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n        this._elementRef.nativeElement['setSelectionRange'].apply(\n            this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n      } else {\n        this._writeInputValue(formattedVal);\n      }\n    }\n  }\n\n  private _formatItemForInput(item: any): string {\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  private _writeInputValue(value: string): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n  }\n\n  private _subscribeToUserInput(userInput$: Observable<any[]>): Subscription {\n    return userInput$.subscribe((results) => {\n      if (!results || results.length === 0) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n        this._windowRef.instance.focusFirst = this.focusFirst;\n        this._windowRef.instance.results = results;\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\n        if (this.resultFormatter) {\n          this._windowRef.instance.formatter = this.resultFormatter;\n        }\n        if (this.resultTemplate) {\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\n        }\n        this._windowRef.instance.resetActive();\n\n        // The observable stream we are subscribing to might have async steps\n        // and if a component containing typeahead is using the OnPush strategy\n        // the change detection turn wouldn't be invoked automatically.\n        this._windowRef.changeDetectorRef.detectChanges();\n\n        this._showHint();\n      }\n\n      // live announcer\n      const count = results ? results.length : 0;\n      this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n    });\n  }\n\n  private _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n    this._subscription = null;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbAccordionModule} from './accordion/accordion.module';\nimport {NgbAlertModule} from './alert/alert.module';\nimport {NgbButtonsModule} from './buttons/buttons.module';\nimport {NgbCarouselModule} from './carousel/carousel.module';\nimport {NgbCollapseModule} from './collapse/collapse.module';\nimport {NgbDatepickerModule} from './datepicker/datepicker.module';\nimport {NgbDropdownModule} from './dropdown/dropdown.module';\nimport {NgbModalModule} from './modal/modal.module';\nimport {NgbPaginationModule} from './pagination/pagination.module';\nimport {NgbPopoverModule} from './popover/popover.module';\nimport {NgbProgressbarModule} from './progressbar/progressbar.module';\nimport {NgbRatingModule} from './rating/rating.module';\nimport {NgbTabsetModule} from './tabset/tabset.module';\nimport {NgbTimepickerModule} from './timepicker/timepicker.module';\nimport {NgbTooltipModule} from './tooltip/tooltip.module';\nimport {NgbTypeaheadModule} from './typeahead/typeahead.module';\n\nexport {\n  NgbAccordionModule,\n  NgbPanelChangeEvent,\n  NgbAccordionConfig,\n  NgbAccordion,\n  NgbPanel,\n  NgbPanelTitle,\n  NgbPanelContent,\n  NgbPanelHeader,\n  NgbPanelHeaderContext,\n  NgbPanelToggle\n} from './accordion/accordion.module';\nexport {NgbAlertModule, NgbAlertConfig, NgbAlert} from './alert/alert.module';\nexport {NgbButtonsModule, NgbButtonLabel, NgbCheckBox, NgbRadio, NgbRadioGroup} from './buttons/buttons.module';\nexport {NgbCarouselModule, NgbCarouselConfig, NgbCarousel, NgbSlide} from './carousel/carousel.module';\nexport {NgbCollapseModule, NgbCollapse} from './collapse/collapse.module';\nexport {\n  NgbCalendar,\n  NgbPeriod,\n  NgbCalendarGregorian,\n  NgbCalendarIslamicCivil,\n  NgbCalendarIslamicUmalqura,\n  NgbCalendarHebrew,\n  NgbCalendarPersian,\n  NgbDatepickerModule,\n  NgbDatepickerI18n,\n  NgbDatepickerI18nHebrew,\n  NgbDatepickerConfig,\n  NgbDatepickerNavigateEvent,\n  NgbDateStruct,\n  NgbDate,\n  NgbDateParserFormatter,\n  NgbDateAdapter,\n  NgbDateNativeAdapter,\n  NgbDateNativeUTCAdapter,\n  NgbDatepicker,\n  NgbInputDatepicker\n} from './datepicker/datepicker.module';\nexport {\n  NgbDropdownModule,\n  NgbDropdownAnchor,\n  NgbDropdownConfig,\n  NgbDropdownItem,\n  NgbDropdownMenu,\n  NgbDropdownToggle,\n  NgbDropdown\n} from './dropdown/dropdown.module';\nexport {\n  NgbModalModule,\n  NgbModal,\n  NgbModalConfig,\n  NgbModalOptions,\n  NgbActiveModal,\n  NgbModalRef,\n  ModalDismissReasons\n} from './modal/modal.module';\nexport {\n  NgbPaginationModule,\n  NgbPaginationConfig,\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination/pagination.module';\nexport {NgbPopoverModule, NgbPopoverConfig, NgbPopover} from './popover/popover.module';\nexport {NgbProgressbarModule, NgbProgressbarConfig, NgbProgressbar} from './progressbar/progressbar.module';\nexport {NgbRatingModule, NgbRatingConfig, NgbRating} from './rating/rating.module';\nexport {\n  NgbTabsetModule,\n  NgbTabChangeEvent,\n  NgbTabsetConfig,\n  NgbTabset,\n  NgbTab,\n  NgbTabContent,\n  NgbTabTitle\n} from './tabset/tabset.module';\nexport {\n  NgbTimepickerModule,\n  NgbTimepickerConfig,\n  NgbTimeStruct,\n  NgbTimepicker,\n  NgbTimeAdapter\n} from './timepicker/timepicker.module';\nexport {NgbTooltipModule, NgbTooltipConfig, NgbTooltip} from './tooltip/tooltip.module';\nexport {\n  NgbHighlight,\n  NgbTypeaheadModule,\n  NgbTypeaheadConfig,\n  NgbTypeaheadSelectItemEvent,\n  NgbTypeahead\n} from './typeahead/typeahead.module';\n\nexport {Placement} from './util/positioning';\n\nconst NGB_MODULES = [\n  NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n  NgbDropdownModule, NgbModalModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule,\n  NgbTabsetModule, NgbTimepickerModule, NgbTooltipModule, NgbTypeaheadModule\n];\n\n@NgModule({imports: NGB_MODULES, exports: NGB_MODULES})\nexport class NgbModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbModule}; }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbHighlight} from './highlight';\nimport {NgbTypeaheadWindow} from './typeahead-window';\nimport {NgbTypeahead} from './typeahead';\n\nexport {NgbHighlight} from './highlight';\nexport {NgbTypeaheadWindow} from './typeahead-window';\nexport {NgbTypeaheadConfig} from './typeahead-config';\nexport {NgbTypeahead, NgbTypeaheadSelectItemEvent} from './typeahead';\n\n@NgModule({\n  declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n  exports: [NgbTypeahead, NgbHighlight],\n  imports: [CommonModule],\n  entryComponents: [NgbTypeaheadWindow]\n})\nexport class NgbTypeaheadModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTypeaheadModule}; }\n}\n","export const STATECHOICES = [\r\n    \"Alaska\",\r\n    \"Alabama\",\r\n    \"Arkansas\",\r\n    \"American Samoa\",\r\n    \"Arizona\",\r\n    \"California\",\r\n    \"Colorado\",\r\n    \"Connecticut\",\r\n    \"District of Columbia\",\r\n    \"Delaware\",\r\n    \"Florida\",\r\n    \"Georgia\",\r\n    \"Guam\",\r\n    \"Hawaii\",\r\n    \"Iowa\",\r\n    \"Idaho\",\r\n    \"Illinois\",\r\n    \"Indiana\",\r\n    \"Kansas\",\r\n    \"Kentucky\",\r\n    \"Louisiana\",\r\n    \"Massachusetts\",\r\n    \"Maryland\",\r\n    \"Maine\",\r\n    \"Michigan\",\r\n    \"Minnesota\",\r\n    \"Missouri\",\r\n    \"Mississippi\",\r\n    \"Montana\",\r\n    \"North Carolina\",\r\n    \" North Dakota\",\r\n    \"Nebraska\",\r\n    \"New Hampshire\",\r\n    \"New Jersey\",\r\n    \"New Mexico\",\r\n    \"Nevada\",\r\n    \"New York\",\r\n    \"Ohio\",\r\n    \"Oklahoma\",\r\n    \"Oregon\",\r\n    \"Pennsylvania\",\r\n    \"Puerto Rico\",\r\n    \"Rhode Island\",\r\n    \"South Carolina\",\r\n    \"South Dakota\",\r\n    \"Tennessee\",\r\n    \"Texas\",\r\n    \"Utah\",\r\n    \"Virginia\",\r\n    \"Virgin Islands\",\r\n    \"Vermont\",\r\n    \"Washington\",\r\n    \"Wisconsin\",\r\n    \"West Virginia\",\r\n    \"Wyoming\"\r\n];\r\n\r\nexport const GENDERCHOICES = ['Male', 'Female', 'I prefer not to answer',];\r\n\r\nexport const RACECHOICES = [\r\n    'White',\r\n    'Black or African American', \r\n    'American Indian or Alaska Native', \r\n    'Native Hawaiian or other Pacific Islander', \r\n    'Asian', \r\n    'I prefer not to answer'\r\n];\r\nexport const LANGUAGEPREFERENCECHOICES = ['English', 'Spanish'];\r\n\r\nexport const ETHNICITYCHOICES = ['Hispanic or Latino', 'Not Hispanic or Latino', 'I prefer not to answer'];\r\n\r\nexport const EDUCATIONLEVELCHOICES = [\r\n    'Completed 1st Grade', \r\n    'Completed 2nd Grade', \r\n    'Completed 3rd Grade', \r\n    'Completed 4th Grade', \r\n    'Completed 5th Grade', \r\n    'Completed 6th Grade', \r\n    'Completed 7th Grade', \r\n    'Completed 8th Grade', \r\n    'Completed 9th Grade', \r\n    'Completed 10th Grade', \r\n    'Completed 11th Grade', \r\n    'High School Degree', \r\n    'GED or High School Equivalency Diploma',\r\n    'Some Vocational or Technical School (No Certificate)',\r\n    'Some College (No Degree)',\r\n    'Associate\\'s Degree',\r\n    'Bachelor\\'s Degree',\r\n    'Master\\'s Degree',\r\n    'Doctoral Degree',\r\n    'Post-Doctorate Studies'\r\n];","export class Address {\r\n    id: number;\r\n    addressLine1: string;\r\n    addressLine2: string;\r\n    state: string;\r\n    city: string;\r\n    zipCode: string;\r\n    zipExt: string;\r\n    lastInsertUpdateTS: Date;\r\n    lastInsertUpdateBy: string;\r\n}","import { Address } from './address';\r\n\r\nexport class ClaimantSO {\r\n    public claimantId: number;\r\n    public ssn: string;\r\n    public dateOfBirth: Date;\r\n    public firstName: string;\r\n    public middleInitial: string;\r\n    public lastName: string;\r\n    public homePhone: string;\r\n    public mobilePhone: string;\r\n    public languagePreference: string;\r\n    public educationLevel: string;\r\n    public gender: string;\r\n    public race: string;\r\n    public ethnicity: string;\r\n    public lastInsertUpdateTS: Date;\r\n    public lastInsertUpdateBy: string;\r\n    public ivrPin: string;\r\n    public documentDeliveryPreference: string;\r\n    public address: Address[];\r\n    public email: string;\r\n    public preferredOccupation: string;\r\n    public alternateClaimantId: string;\r\n}","import { Address } from './address';\r\n\r\nexport class UpdateClaimantSO {\r\n    middleInitial: string;\r\n    homePhone: string;\r\n    mobilePhone: string;\r\n    languagePreference: string;\r\n    educationLevel: string;\r\n    gender: string;\r\n    race: string;\r\n    ethnicity: string;\r\n    ivrPin: string;\r\n    documentDeliveryPreference: string;\r\n    lastInsertUpdateTS: Date;\r\n    lastInsertUpdateBy: string;\r\n    address: Address[];\r\n}","import { Injectable } from '@angular/core';\r\nimport { ToastrService, ToastContainerDirective } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToasterService {\r\n  overlayContainer: ToastContainerDirective;\r\n\r\n  constructor(private toastr: ToastrService) { \r\n    this.toastr = toastr;\r\n  }\r\n\r\n  success(title: string, text: string){\r\n    this.toastr.success(text, title);\r\n  }\r\n\r\n  info(title: string, text:string){\r\n     this.toastr.info(text, title)\r\n  }\r\n\r\n warning(title: string, text:string){\r\n    this.toastr.warning(text, title)\r\n }\r\n\r\n danger(title: string, text:string){\r\n  this.toastr.error(text, title);\r\n }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, EMPTY, BehaviorSubject } from 'rxjs';\r\nimport { ToasterService } from './toaster.service';\r\nimport { catchError } from 'rxjs/operators'\r\nimport { ClaimantSO } from 'projects/opt-library/src/service-objects/claimant-so';\r\nimport { UpdateClaimantSO } from 'projects/opt-library/src/service-objects/update-claimant-so';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClaimantService {\r\n\r\n  url = \"http://localhost:8080/api/claimant\";\r\n\r\n  constructor(private http: HttpClient, private toasterService: ToasterService) { }\r\n  public getClaimantById(claimantId: number): Observable<ClaimantSO> {\r\n    const claimantUrl = `${this.url}/getClaimantById/${claimantId}`;\r\n    return this.http.get<ClaimantSO>(claimantUrl)\r\n  }\r\n\r\n  public getAllClaimants(): Observable<ClaimantSO[]> { //Observable<ClaimantSO[]> {\r\n    const claimantUrl = `${this.url}/getAllClaimants`;\r\n    return this.http.get<ClaimantSO[]>(claimantUrl).pipe(catchError((err: any) => {\r\n      this.toasterService.danger(\"ERROR\", \"The port you are trying to access cannot be reached.\");\r\n      return EMPTY;\r\n    }));\r\n  }\r\n\r\n  public searchClaimant(claimantInfo: string): Observable<ClaimantSO[]> {\r\n    const claimantUrl = `${this.url}/searchClaimant/${claimantInfo}`;\r\n    return this.http.get<ClaimantSO[]>(claimantUrl).pipe(catchError((err: any) => {\r\n      this.toasterService.danger(\"ERROR\", \"The port you are trying to access cannot be reached.\");\r\n      return EMPTY;\r\n    }));\r\n  }\r\n\r\n  public registerClaimant(claimantSO: ClaimantSO): any {\r\n    console.log(\"Inside register claimant api\");\r\n    const claimantUrl = `http://localhost:8080/api/claimant/registerClaimant`;\r\n    return this.http.post(claimantUrl, claimantSO);\r\n  }\r\n\r\n\r\n  // //to do, change return type from promise to long\r\n  // //in claimant-registration.ts, take in the response(claimant id) and use it as a router link\r\n  // public registerClaimant(claimantSO: ClaimantSO) {\r\n  //   console.log(\"Inside register claimant api\");\r\n  //   var claimantId;\r\n  //   const claimantUrl = `http://localhost:8080/api/claimant/registerClaimant`;\r\n  //   return this.http.post(claimantUrl, claimantSO).pipe(catchError((err: any) => {\r\n  //     this.toasterService.danger(\"ERROR\", \"The port you are trying to access cannot be reached.\");\r\n  //     return EMPTY;\r\n  //   }))\r\n  //     .toPromise()\r\n  //     .then(this.extractData);\r\n  // }\r\n\r\n  // public extractData(res: Response) {\r\n  //   this.toasterService.success(\"Success!\", \"Profile has been registered\");\r\n  //   console.log(res);\r\n  // }\r\n\r\n  // public handleErrorPromise(error: Response | any) {\r\n  //   // this.toasterService.danger(\"ERROR\", error);\r\n  //   console.error(error.message || error);\r\n  //   return Promise.reject(error.message || error);\r\n  // }\r\n\r\n  updateClaimant(id: number, updateClaimantSO: UpdateClaimantSO): Observable<UpdateClaimantSO> {\r\n    const claimantUrl = `${this.url}/updateClaimant/${id}`;\r\n    return this.http.put<UpdateClaimantSO>(claimantUrl, updateClaimantSO).pipe(catchError((err: any) => {\r\n      this.toasterService.danger(\"ERROR\", \"Cannot update profile.\");\r\n      return EMPTY;\r\n    }));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ClaimantSO } from '../service-objects/claimant-so';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PortalService {\r\n  claimantSO: ClaimantSO;\r\n  \r\n  constructor() { }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { STATECHOICES } from '../../choices/choices';\r\nimport { Address } from '../../service-objects/address';\r\nimport { ClaimantSO } from '../../service-objects/claimant-so';\r\nimport { UpdateClaimantSO } from '../../service-objects/update-claimant-so';\r\nimport { ClaimantService } from '../../portal-services/claimant.service';\r\nimport { PortalService } from '../../portal-services/portal.service';\r\n\r\n@Component({\r\n  selector: 'opt-edit-claimant-address',\r\n  templateUrl: './edit-claimant-address.component.html',\r\n  styles: []\r\n})\r\nexport class EditClaimantAddressComponent implements OnInit {\r\n  @Input() address;\r\n\r\n  id: number;\r\n  addressId: number;\r\n  updateClaimant = new UpdateClaimantSO();\r\n  claimantProfileCopy = new ClaimantSO();\r\n  updateClaimantAddress = new Address();\r\n  stateChoices = STATECHOICES;\r\n  profileForm: FormGroup;\r\n  debug = false;\r\n\r\n  constructor(public activeModal: NgbActiveModal, private claimantService: ClaimantService, private portalService: PortalService, private fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.claimantProfileCopy = this.portalService.claimantSO;\r\n\r\n    this.updateClaimantAddress = {\r\n      addressLine1: null,\r\n      addressLine2: null,\r\n      city: null,\r\n      state: null,\r\n      zipCode: null,\r\n      zipExt: null,\r\n      id: null,\r\n      lastInsertUpdateBy: null,\r\n      lastInsertUpdateTS: null\r\n    };\r\n\r\n    this.updateClaimant = {\r\n      middleInitial: null,\r\n      homePhone: null,\r\n      mobilePhone: null,\r\n      languagePreference: null,\r\n      educationLevel: null,\r\n      gender: null,\r\n      race: null,\r\n      ethnicity: null,\r\n      ivrPin: null,\r\n      documentDeliveryPreference: null,\r\n      lastInsertUpdateTS: null,\r\n      lastInsertUpdateBy: null,\r\n      address: [this.updateClaimantAddress],\r\n    };\r\n\r\n    this.profileForm = this.fb.group({\r\n      addressLine1: [null],\r\n      addressLine2: [null],\r\n      city: [null],\r\n      state: [null],\r\n      zipCode: [null],\r\n      zipExt: [null],\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.activeModal.close('Close click');\r\n  }\r\n\r\n  updateClaimantDetails() {\r\n    console.log(this.updateClaimant);\r\n    console.log(this.updateClaimantAddress);\r\n\r\n    this.id = this.portalService.claimantSO.claimantId;\r\n    this.claimantService.updateClaimant(this.id, this.updateClaimant)\r\n      .subscribe(updateClaimant => { this.updateClaimant = updateClaimant });\r\n    this.close();\r\n  }\r\n\r\n  compareFn(c1: any, c2: any): boolean {\r\n    return c1 && c2 ? c1.id === c2.id : c1 === c2;\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { GENDERCHOICES, RACECHOICES, ETHNICITYCHOICES, EDUCATIONLEVELCHOICES, LANGUAGEPREFERENCECHOICES } from '../../choices/choices';\r\nimport { UpdateClaimantSO } from '../../service-objects/update-claimant-so';\r\nimport { ClaimantSO } from '../../service-objects/claimant-so';\r\nimport { ClaimantService } from '../../portal-services/claimant.service';\r\nimport { PortalService } from '../../portal-services/portal.service';\r\n\r\n@Component({\r\n  selector: 'opt-edit-claimant-details',\r\n  templateUrl: './edit-claimant-details.component.html',\r\n  styles: []\r\n})\r\nexport class EditClaimantDetailsComponent implements OnInit {\r\n  @Input() input;\r\n  id: number;\r\n  updateClaimant = new UpdateClaimantSO();\r\n  claimantProfileCopy =  new ClaimantSO();\r\n  profileForm: FormGroup;\r\n  genderChoices = GENDERCHOICES;\r\n  raceChoices = RACECHOICES;\r\n  ethnicityChoices = ETHNICITYCHOICES;\r\n  educationLevelChoices = EDUCATIONLEVELCHOICES;\r\n  languagePreferenceChoices = LANGUAGEPREFERENCECHOICES;\r\n  debug = false;\r\n\r\n  constructor(public activeModal: NgbActiveModal, private claimantService: ClaimantService, private portalService: PortalService, private fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.claimantProfileCopy = this.portalService.claimantSO;\r\n\r\n    this.updateClaimant = {\r\n      middleInitial: null,\r\n      homePhone: null,\r\n      mobilePhone: null,\r\n      languagePreference: null,\r\n      educationLevel: null,\r\n      gender: null,\r\n      race: null,\r\n      ethnicity: null,\r\n      ivrPin: null,\r\n      documentDeliveryPreference: null,\r\n      lastInsertUpdateTS: null,\r\n      lastInsertUpdateBy: null,\r\n      address: null,\r\n    };\r\n\r\n    this.profileForm = this.fb.group({\r\n      ssn: [null],\r\n      alternateClaimantId: [null],    \r\n      firstName: [null,Validators.minLength(1)],\r\n      lastName: [null,Validators.minLength(1)],      \r\n      middleInitial: [null,Validators.minLength(1)],\r\n      homePhone: [null,Validators.minLength(1)],\r\n      mobilePhone: [null],\r\n\r\n      //There is no way they can choose null, so no validations are needed\r\n      languagePreference: [null],\r\n      gender: [null],\r\n      educationLevel: [null],\r\n      race: [null],\r\n      ethnicity: [null],\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.activeModal.close('Close click');\r\n  }\r\n\r\n  updateClaimantDetails() {\r\n    this.updateClaimant = {\r\n      middleInitial: this.claimantProfileCopy.middleInitial,\r\n      homePhone: this.claimantProfileCopy.homePhone,\r\n      mobilePhone: this.claimantProfileCopy.mobilePhone,\r\n      languagePreference: this.claimantProfileCopy.languagePreference,\r\n      gender: this.claimantProfileCopy.gender,\r\n      educationLevel: this.claimantProfileCopy.educationLevel,\r\n      race: this.claimantProfileCopy.race,\r\n      ethnicity: this.claimantProfileCopy.ethnicity,\r\n      ivrPin: null,\r\n      documentDeliveryPreference: null,\r\n      lastInsertUpdateTS: null,\r\n      lastInsertUpdateBy: null,\r\n      address: null,\r\n    }\r\n\r\n\r\n\r\n    this.id = this.portalService.claimantSO.claimantId;\r\n    this.claimantService.updateClaimant(this.id, this.updateClaimant)\r\n      .subscribe(updateClaimant => { this.updateClaimant = updateClaimant });\r\n    this.close();\r\n  }\r\n\r\n  compareFn(c1: any, c2: any): boolean {\r\n    return c1 && c2 ? c1.id === c2.id : c1 === c2;\r\n  }\r\n  \r\n}\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({name: 'optSsnPipe'})\r\nexport class OptSsnPipe implements PipeTransform {\r\n    transform(ssn: string): string {\r\n        let newSSN: string = \"\";\r\n        if(ssn.length == 9) {\r\n            for(var count = 0; count < ssn.length; count++){\r\n                if((count == 3) || (count == 5)){\r\n                    newSSN += \"-\"\r\n                }\r\n\r\n                if((count >= 0) && (count <= 4)) {\r\n                    newSSN += \"X\"\r\n                } else {\r\n                    newSSN += ssn.charAt(count);\r\n                }\r\n            }\r\n            return newSSN;\r\n        } else if(ssn.length == 4) {\r\n            for(var count = 0; count < 9; count++) {\r\n                if((count == 3) || (count == 5)){\r\n                    newSSN += \"-\"\r\n                }\r\n\r\n                if((count >= 0) && (count <= 4)) {\r\n                    newSSN += \"X\"\r\n                } else {\r\n                    newSSN += ssn.charAt(count - 5);\r\n                }\r\n            }\r\n            return newSSN;\r\n        } else {\r\n            return ssn;\r\n        }\r\n    }\r\n}","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { MaskPipe } from 'ngx-mask';\r\n\r\n@Pipe({name: 'optPhonePipe'})\r\nexport class OptPhonePipe implements PipeTransform {\r\n\r\n    constructor(private maskPipe: MaskPipe) {}\r\n\r\n    transform(mobilePhone: string): string {\r\n        let newMobilePhone: string = \"\";\r\n\r\n        if(mobilePhone.length == 10){\r\n            newMobilePhone = this.maskPipe.transform(mobilePhone, '(000) 000-0000')\r\n        } else if(mobilePhone.length == 11){\r\n            newMobilePhone = this.maskPipe.transform(mobilePhone, '+0 (000) 000-0000')  \r\n        } else {\r\n            newMobilePhone = mobilePhone;\r\n        }\r\n        return newMobilePhone;\r\n    }\r\n}","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { Address } from 'projects/opt-library/src/service-objects/address';\r\n\r\n@Pipe({name: 'optAddressPipe'})\r\nexport class OptAddressPipe implements PipeTransform {\r\n    transform(address: Address[]): string {\r\n        let newAddress: string = \"\";\r\n\r\n            newAddress += address[0].addressLine1;\r\n\r\n            if(address[0].addressLine2 != null) {\r\n                newAddress += \", \";\r\n                newAddress += address[0].addressLine2;\r\n            }\r\n\r\n            newAddress = newAddress + \", \" + \"\\n\" + address[0].city + \", \" + address[0].state + \", \" + address[0].zipCode;\r\n    \r\n            if(address[0].zipExt != null) {\r\n                newAddress += \"-\";\r\n                newAddress += address[0].zipExt;\r\n            }\r\n\r\n        return newAddress;\r\n    }\r\n}","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Pipe({name: 'optDatePipe'})\r\nexport class OptDatePipe implements PipeTransform {\r\n\r\n    constructor(private datePipe: DatePipe) {}\r\n\r\n    transform(date: string): string {\r\n        let newDate: string=\"\";\r\n        newDate = this.datePipe.transform(date, 'MM/dd/yyyy');\r\n        return newDate;\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { ValdemortModule } from 'ngx-valdemort';\r\nimport { NgbModule } from '../../../../node_modules/@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\n\r\nimport { OptLibraryComponent } from './opt-library.component';\r\nimport { EditClaimantAddressComponent } from './edit-claimant-address/edit-claimant-address.component';\r\nimport { EditClaimantDetailsComponent } from './edit-claimant-details/edit-claimant-details.component';\r\nimport { MaskPipe } from 'ngx-mask';\r\nimport { OptSsnPipe } from '../custom-pipes/opt-ssn.pipe';\r\nimport { OptPhonePipe } from '../custom-pipes/opt-phone.pipe';\r\nimport { OptAddressPipe } from '../custom-pipes/opt-address.pipe';\r\nimport { OptDatePipe } from '../custom-pipes/opt-date.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    OptLibraryComponent,\r\n    EditClaimantDetailsComponent, \r\n    EditClaimantAddressComponent,\r\n    OptSsnPipe,\r\n    OptPhonePipe,\r\n    OptAddressPipe,\r\n    OptDatePipe,\r\n  ],\r\n  imports: [\r\n    NgbModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    ValdemortModule\r\n  ],\r\n  exports: [\r\n    OptLibraryComponent,\r\n    EditClaimantAddressComponent,\r\n    EditClaimantDetailsComponent,\r\n    OptSsnPipe,\r\n    OptPhonePipe,\r\n    OptAddressPipe,\r\n    OptDatePipe,\r\n  ],\r\n  entryComponents: [EditClaimantDetailsComponent, EditClaimantAddressComponent],\r\n  providers: [DatePipe, MaskPipe]\r\n})\r\nexport class OptLibraryModule { }\r\n"]}