{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./projects/opt-library/src/lib/edit-claimant-address/edit-claimant-address.component.html","webpack:///./projects/opt-library/src/lib/edit-claimant-details/edit-claimant-details.component.html","webpack:///./src/app/app.component.html","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/jsquery-test/jsquery-test.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/app/main/claim/claim.component.html","webpack:///./src/app/main/claimant-overview/claimant-overview.component.html","webpack:///./src/app/main/claimant-profile/claimant-profile.component.html","webpack:///./src/app/main/claimant-registration/claimant-registration.component.html","webpack:///./src/app/main/claimant-search/claimant-search.component.html","webpack:///./src/app/main/home/home.component.html","webpack:///./src/app/main/main.component.html","webpack:///./src/app/not-authorized/not-authorized.component.html","webpack:///./src/app/side-nav-bar/side-nav-bar.component.html","webpack:///./src/app/top-nav-bar/top-nav-bar.component.html","webpack:///./projects/opt-library/src/choices/choices.ts","webpack:///./projects/opt-library/src/custom-pipes/opt-address.pipe.ts","webpack:///./projects/opt-library/src/custom-pipes/opt-date.pipe.ts","webpack:///./projects/opt-library/src/custom-pipes/opt-phone.pipe.ts","webpack:///./projects/opt-library/src/custom-pipes/opt-ssn.pipe.ts","webpack:///./projects/opt-library/src/lib/edit-claimant-address/edit-claimant-address.component.ts","webpack:///./projects/opt-library/src/lib/edit-claimant-details/edit-claimant-details.component.ts","webpack:///./projects/opt-library/src/lib/opt-library.component.ts","webpack:///./projects/opt-library/src/lib/opt-library.module.ts","webpack:///./projects/opt-library/src/lib/opt-library.service.ts","webpack:///./projects/opt-library/src/portal-services/alert.service.ts","webpack:///./projects/opt-library/src/portal-services/claimant.service.ts","webpack:///./projects/opt-library/src/portal-services/modal.service.ts","webpack:///./projects/opt-library/src/portal-services/portal.service.ts","webpack:///./projects/opt-library/src/portal-services/survey.service.ts","webpack:///./projects/opt-library/src/portal-services/toaster.service.ts","webpack:///./projects/opt-library/src/public-api.ts","webpack:///./projects/opt-library/src/service-objects/address.ts","webpack:///./projects/opt-library/src/service-objects/claimant-so.ts","webpack:///./projects/opt-library/src/service-objects/update-claimant-so.ts","webpack:///./src/app/agency-service.service.ts","webpack:///./src/app/app-init.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.authguard.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/choices/choices.ts","webpack:///./src/app/choices/surveyQuestions.ts","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/jsquery-test/jsquery-test.component.ts","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/main/claim/claim.component.css","webpack:///./src/app/main/claim/claim.component.ts","webpack:///./src/app/main/claimant-overview/claimant-overview.component.css","webpack:///./src/app/main/claimant-overview/claimant-overview.component.ts","webpack:///./src/app/main/claimant-profile/claimant-profile.component.css","webpack:///./src/app/main/claimant-profile/claimant-profile.component.ts","webpack:///./src/app/main/claimant-registration/claimant-registration.component.css","webpack:///./src/app/main/claimant-registration/claimant-registration.component.ts","webpack:///./src/app/main/claimant-search-service/claimant-search.service.ts","webpack:///./src/app/main/claimant-search/claimant-search.component.css","webpack:///./src/app/main/claimant-search/claimant-search.component.ts","webpack:///./src/app/main/home/home.component.ts","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/not-authorized/not-authorized.component.css","webpack:///./src/app/not-authorized/not-authorized.component.ts","webpack:///./src/app/parser/ngb-date-fr-parser-formatter.ts","webpack:///./src/app/side-nav-bar/side-nav-bar.component.ts","webpack:///./src/app/top-nav-bar/top-nav-bar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wnRA,yOAAyO,ojLAAojL,6BAA6B,8FAA8F,QAAQ,+uFAA+uF,8BAA8B,wV;;;;;;;;;;;ACA7qR,yOAAyO,0pBAA0pB,yBAAyB,gIAAgI,yBAAyB,iEAAiE,oBAAoB,gEAAgE,mBAAmB,kEAAkE,qBAAqB,4DAA4D,8BAA8B,uhBAAuhB,yCAAyC,gJAAgJ,yCAAyC,iEAAiE,oBAAoB,gEAAgE,mBAAmB,kEAAkE,qBAAqB,4DAA4D,8BAA8B,qlBAAqlB,+BAA+B,sIAAsI,+BAA+B,iEAAiE,oBAAoB,gEAAgE,mBAAmB,kEAAkE,qBAAqB,4DAA4D,8BAA8B,qeAAqe,8BAA8B,qIAAqI,8BAA8B,iEAAiE,oBAAoB,gEAAgE,mBAAmB,kEAAkE,qBAAqB,4DAA4D,8BAA8B,27KAA27K,wCAAwC,2GAA2G,QAAQ,uzDAAuzD,oCAAoC,uGAAuG,QAAQ,gmDAAgmD,4BAA4B,+FAA+F,QAAQ,wmDAAwmD,0BAA0B,6FAA6F,QAAQ,shDAAshD,+BAA+B,kGAAkG,QAAQ,gmC;;;;;;;;;;;ACA1tiB,oCAAoC,WAAW,4EAA4E,sBAAsB,gI;;;;;;;;;;;ACAjJ,sIAAsI,mBAAmB,kEAAkE,sb;;;;;;;;;;;ACA3N,0tE;;;;;;;;;;;ACAA,4sB;;;;;;;;;;;ACAA,4JAA4J,gCAAgC,kDAAkD,+BAA+B,wDAAwD,gCAAgC,gkCAAgkC,YAAY,qNAAqN,YAAY,sD;;;;;;;;;;;ACAlpD,oSAAoS,sBAAsB,GAAG,qBAAqB,4EAA4E,6BAA6B,0JAA0J,qCAAqC,0tBAA0tB,kBAAkB,2TAA2T,sCAAsC,mUAAmU,gCAAgC,0TAA0T,uCAAuC,++BAA++B,YAAY,4G;;;;;;;;;;;ACAt4G,0uBAA0uB,gBAAgB,wuBAAwuB,gCAAgC,i4BAAi4B,sBAAsB,wuBAAwuB,qBAAqB,u3BAAu3B,0BAA0B,0sBAA0sB,wBAAwB,w2BAAw2B,sBAAsB,isBAAisB,wBAAwB,q2BAAq2B,gCAAgC,4tBAA4tB,+BAA+B,g1BAAg1B,mBAAmB,gsBAAgsB,2BAA2B,s0BAAs0B,iBAAiB,osBAAosB,sBAAsB,09CAA09C,oCAAoC,u0BAAu0B,oCAAoC,i0BAAi0B,4BAA4B,2rBAA2rB,6BAA6B,k0BAAk0B,+BAA+B,8sBAA8sB,8BAA8B,o2B;;;;;;;;;;;ACA1jhB,8mFAA8mF,sBAAsB,6DAA6D,oBAAoB,4DAA4D,mBAAmB,8DAA8D,qBAAqB,wDAAwD,2BAA2B,0qEAA0qE,sBAAsB,6DAA6D,oBAAoB,4DAA4D,mBAAmB,8DAA8D,qBAAqB,wDAAwD,2BAA2B,23DAA23D,4BAA4B,6DAA6D,oBAAoB,4DAA4D,mBAAmB,8DAA8D,qBAAqB,wDAAwD,2BAA2B,muDAAmuD,2BAA2B,6DAA6D,oBAAoB,4DAA4D,mBAAmB,8DAA8D,qBAAqB,wDAAwD,2BAA2B,8wDAA8wD,gCAAgC,6DAA6D,oBAAoB,4DAA4D,mBAAmB,8DAA8D,qBAAqB,wDAAwD,2BAA2B,iuDAAiuD,qCAAqC,6DAA6D,oBAAoB,4DAA4D,mBAAmB,8DAA8D,qBAAqB,wDAAwD,2BAA2B,6pEAA6pE,4BAA4B,6DAA6D,oBAAoB,4DAA4D,mBAAmB,8DAA8D,qBAAqB,wDAAwD,2BAA2B,sqCAAsqC,8BAA8B,6DAA6D,oBAAoB,4DAA4D,mBAAmB,8DAA8D,qBAAqB,wDAAwD,2BAA2B,gxFAAgxF,QAAQ,w0DAAw0D,QAAQ,owDAAowD,QAAQ,uyDAAuyD,QAAQ,+qDAA+qD,QAAQ,0+MAA0+M,QAAQ,u2I;;;;;;;;;;;ACAtwkC,wGAAwG,qVAAqV,YAAY,0CAA0C,uBAAuB,qBAAqB,6BAA6B,+PAA+P,sBAAsB,GAAG,qBAAqB,wOAAwO,sCAAsC,kOAAkO,qCAAqC,kOAAkO,uCAAuC,mOAAmO,+CAA+C,yJAAyJ,qJ;;;;;;;;;;;ACAljE,8Z;;;;;;;;;;;ACAA,+U;;;;;;;;;;;ACAA,6D;;;;;;;;;;;ACAA,6pD;;;;;;;;;;;ACAA,iaAAia,8BAA8B,wGAAwG,qBAAqB,05B;;;;;;;;;;;;ACA5jB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,IAAM,YAAY,GAAG;IACxB,QAAQ;IACR,SAAS;IACT,UAAU;IACV,gBAAgB;IAChB,SAAS;IACT,YAAY;IACZ,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,UAAU;IACV,SAAS;IACT,SAAS;IACT,MAAM;IACN,QAAQ;IACR,MAAM;IACN,OAAO;IACP,UAAU;IACV,SAAS;IACT,QAAQ;IACR,UAAU;IACV,WAAW;IACX,eAAe;IACf,UAAU;IACV,OAAO;IACP,UAAU;IACV,WAAW;IACX,UAAU;IACV,aAAa;IACb,SAAS;IACT,gBAAgB;IAChB,eAAe;IACf,UAAU;IACV,eAAe;IACf,YAAY;IACZ,YAAY;IACZ,QAAQ;IACR,UAAU;IACV,MAAM;IACN,UAAU;IACV,QAAQ;IACR,cAAc;IACd,aAAa;IACb,cAAc;IACd,gBAAgB;IAChB,cAAc;IACd,WAAW;IACX,OAAO;IACP,MAAM;IACN,UAAU;IACV,gBAAgB;IAChB,SAAS;IACT,YAAY;IACZ,WAAW;IACX,eAAe;IACf,SAAS;CACZ,CAAC;AAEK,IAAM,aAAa,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,wBAAwB,EAAE,CAAC;AAEpE,IAAM,WAAW,GAAG;IACvB,OAAO;IACP,2BAA2B;IAC3B,kCAAkC;IAClC,2CAA2C;IAC3C,OAAO;IACP,wBAAwB;CAC3B,CAAC;AACK,IAAM,yBAAyB,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;AAEzD,IAAM,gBAAgB,GAAG,CAAC,oBAAoB,EAAE,wBAAwB,EAAE,wBAAwB,CAAC,CAAC;AAEpG,IAAM,qBAAqB,GAAG;IACjC,qBAAqB;IACrB,qBAAqB;IACrB,qBAAqB;IACrB,qBAAqB;IACrB,qBAAqB;IACrB,qBAAqB;IACrB,qBAAqB;IACrB,qBAAqB;IACrB,qBAAqB;IACrB,sBAAsB;IACtB,sBAAsB;IACtB,oBAAoB;IACpB,wCAAwC;IACxC,sDAAsD;IACtD,0BAA0B;IAC1B,qBAAqB;IACrB,oBAAoB;IACpB,kBAAkB;IAClB,iBAAiB;IACjB,wBAAwB;CAC3B,CAAC;;;;;;;;;;;;;;;;;;AC7FkD;AAIpD;IAAA;IAwBA,CAAC;IAvBG,kCAAS,GAAT,UAAU,OAAkB;QACxB,IAAI,UAAU,GAAW,EAAE,CAAC;QAE5B,IAAG,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,EAAC;YAClB,UAAU,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;YAEtC,IAAG,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,IAAI,IAAI,EAAE;gBAChC,UAAU,IAAI,IAAI,CAAC;gBACnB,UAAU,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;aACzC;YAED,UAAU,GAAG,UAAU,GAAG,IAAI,GAAG,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YAE9G,IAAG,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,EAAE;gBAC1B,UAAU,IAAI,GAAG,CAAC;gBAClB,UAAU,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;aACnC;YAED,OAAO,UAAU,CAAC;SACrB;aAAM;YACH,OAAO,IAAI,CAAC;SACf;IACL,CAAC;IAvBQ,cAAc;QAD1B,0DAAI,CAAC,EAAC,IAAI,EAAE,gBAAgB,EAAC,CAAC;OAClB,cAAc,CAwB1B;IAAD,qBAAC;CAAA;AAxB0B;;;;;;;;;;;;;;;;;;;ACJyB;AACT;AAG3C;IAEI,qBAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAE1C,+BAAS,GAAT,UAAU,IAAY;QAClB,IAAI,OAAO,GAAS,EAAE,CAAC;QACvB,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QACtD,OAAO,OAAO,CAAC;IACnB,CAAC;IARQ,WAAW;QADvB,0DAAI,CAAC,EAAC,IAAI,EAAE,aAAa,EAAC,CAAC;+EAGM,wDAAQ;OAF7B,WAAW,CASvB;IAAD,kBAAC;CAAA;AATuB;;;;;;;;;;;;;;;;;;;ACJ4B;AAChB;AAGpC;IAEI,sBAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAE1C,gCAAS,GAAT,UAAU,WAAmB;QACzB,IAAI,cAAc,GAAW,EAAE,CAAC;QAEhC,IAAG,WAAW,IAAI,IAAI,IAAI,WAAW,IAAI,EAAE,EAAC;YACxC,OAAO,IAAI,CAAC;SACf;aAAM,IAAG,WAAW,CAAC,MAAM,IAAI,EAAE,EAAC;YAC/B,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;YACxE,OAAO,cAAc,CAAC;SACzB;aAAM,IAAG,WAAW,CAAC,MAAM,IAAI,EAAE,EAAC;YAC/B,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,mBAAmB,CAAC,CAAC;YAC3E,OAAO,cAAc,CAAC;SACzB;aAAM;YACH,cAAc,GAAG,WAAW,CAAC;YAC7B,OAAO,cAAc,CAAC;SACzB;IACL,CAAC;IAnBQ,YAAY;QADxB,0DAAI,CAAC,EAAC,IAAI,EAAE,cAAc,EAAC,CAAC;+EAGK,iDAAQ;OAF7B,YAAY,CAoBxB;IAAD,mBAAC;CAAA;AApBwB;;;;;;;;;;;;;;;;;;ACJ2B;AAGpD;IAAA;IAiCA,CAAC;IAhCG,8BAAS,GAAT,UAAU,GAAW;QACjB,IAAI,MAAM,GAAW,EAAE,CAAC;QACxB,IAAG,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE;YAChB,KAAI,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,EAAC;gBAC3C,IAAG,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,EAAC;oBAC5B,MAAM,IAAI,GAAG;iBAChB;gBAED,IAAG,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,EAAE;oBAC7B,MAAM,IAAI,GAAG;iBAChB;qBAAM;oBACH,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;iBAC/B;aACJ;YACD,OAAO,MAAM,CAAC;SACjB;aAAM,IAAG,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE;YACvB,KAAI,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,EAAE,EAAE;gBACnC,IAAG,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,EAAC;oBAC5B,MAAM,IAAI,GAAG;iBAChB;gBAED,IAAG,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,EAAE;oBAC7B,MAAM,IAAI,GAAG;iBAChB;qBAAM;oBACH,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;iBACnC;aACJ;YACD,OAAO,MAAM,CAAC;SACjB;aAAM;YACH,OAAO,GAAG,CAAC;SACd;IACL,CAAC;IAhCQ,UAAU;QADtB,0DAAI,CAAC,EAAC,IAAI,EAAE,YAAY,EAAC,CAAC;OACd,UAAU,CAiCtB;IAAD,iBAAC;CAAA;AAjCsB;;;;;;;;;;;;;;;;;;;;;;;;;;ACHkC;AACG;AACQ;AACf;AACG;AACO;AACa;AACH;AACJ;AAOrE;IAYE,sCAAmB,WAA2B,EAAU,eAAgC,EAAU,aAA4B,EAAU,EAAe;QAApI,gBAAW,GAAX,WAAW,CAAgB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,OAAE,GAAF,EAAE,CAAa;QAPvJ,mBAAc,GAAG,IAAI,oFAAgB,EAAE,CAAC;QACxC,wBAAmB,GAAG,IAAI,uEAAU,EAAE,CAAC;QACvC,0BAAqB,GAAG,IAAI,gEAAO,EAAE,CAAC;QACtC,iBAAY,GAAG,6DAAY,CAAC;QAE5B,UAAK,GAAG,KAAK,CAAC;IAE6I,CAAC;IAE5J,+CAAQ,GAAR;QAEE,IAAI,CAAC,qBAAqB,GAAG;YAC3B,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY;YACnE,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY;YACnE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI;YACnD,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK;YACrD,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;YACzD,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM;YACvD,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YAC/C,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB;YAC/E,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB;SAChF,CAAC;QAEF,IAAI,CAAC,cAAc,GAAG;YACpB,aAAa,EAAE,IAAI;YACnB,SAAS,EAAE,IAAI;YACf,WAAW,EAAE,IAAI;YACjB,kBAAkB,EAAE,IAAI;YACxB,cAAc,EAAE,IAAI;YACpB,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,IAAI;YACf,MAAM,EAAE,IAAI;YACZ,0BAA0B,EAAE,IAAI;YAChC,kBAAkB,EAAE,IAAI;YACxB,kBAAkB,EAAE,IAAI;YACxB,OAAO,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC;SACtC,CAAC;QAEF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,YAAY,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzC,YAAY,EAAE,CAAC,IAAI,EAAG,yDAAU,CAAC,QAAQ,CAAC;YAC1C,IAAI,EAAE,CAAC,IAAI,EAAG,yDAAU,CAAC,QAAQ,CAAC;YAClC,KAAK,EAAE,CAAC,IAAI,EAAG,yDAAU,CAAC,QAAQ,CAAC;YACnC,OAAO,EAAE,CAAC,IAAI,EAAG,yDAAU,CAAC,QAAQ,CAAC;YACrC,MAAM,EAAE,CAAC,IAAI,CAAC;SACf,CACF,CAAC;IACJ,CAAC;IAED,4CAAK,GAAL;QACE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;IACxC,CAAC;IAED,4DAAqB,GAArB;QAAA,iBAwBC;QAvBC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAExC,IAAI,CAAC,cAAc,GAAG;YACpB,aAAa,EAAE,IAAI;YACnB,SAAS,EAAE,IAAI;YACf,WAAW,EAAE,IAAI;YACjB,kBAAkB,EAAE,IAAI;YACxB,cAAc,EAAE,IAAI;YACpB,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,IAAI;YACf,MAAM,EAAE,IAAI;YACZ,0BAA0B,EAAE,IAAI;YAChC,kBAAkB,EAAE,IAAI;YACxB,kBAAkB,EAAE,IAAI;YACxB,OAAO,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC;SACtC,CAAC;QAEF,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC;QACnD,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC;aAC9D,SAAS,CAAC,wBAAc,IAAM,KAAI,CAAC,cAAc,GAAG,cAAc,EAAC,CAAC,CAAC,CAAC;QACzE,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,gDAAS,GAAT,UAAU,EAAO,EAAE,EAAO;QACxB,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAChD,CAAC;IAtFQ;QAAR,2DAAK,EAAE;;iEAAS;IADN,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YACrC,sNAAqD;SAEtD,CAAC;+EAagC,yEAAc,EAA2B,iFAAe,EAAyB,6EAAa,EAAc,0DAAW;OAZ5I,4BAA4B,CAwFxC;IAAD,mCAAC;CAAA;AAxFwC;;;;;;;;;;;;;;;;;;;;;;;;;ACfgB;AACG;AACQ;AACmE;AAC3D;AACb;AACU;AACJ;AAOrE;IAeE,sCAAmB,WAA2B,EAAU,eAAgC,EAAU,aAA4B,EAAU,EAAe;QAApI,gBAAW,GAAX,WAAW,CAAgB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,OAAE,GAAF,EAAE,CAAa;QAZvJ,mBAAc,GAAG,IAAI,oFAAgB,EAAE,CAAC;QACxC,wBAAmB,GAAI,IAAI,uEAAU,EAAE,CAAC;QACxC,wBAAmB,GAAI,IAAI,uEAAU,EAAE,CAAC;QAExC,kBAAa,GAAG,8DAAa,CAAC;QAC9B,gBAAW,GAAG,4DAAW,CAAC;QAC1B,qBAAgB,GAAG,iEAAgB,CAAC;QACpC,0BAAqB,GAAG,sEAAqB,CAAC;QAC9C,8BAAyB,GAAG,0EAAyB,CAAC;QACtD,UAAK,GAAG,KAAK,CAAC;IAG6I,CAAC;IAE5J,+CAAQ,GAAR;QACE,IAAI,CAAC,mBAAmB,GAAG;YACzB,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,UAAU;YACpD,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG;YACtC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,WAAW;YACtD,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS;YAClD,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,aAAa;YAC1D,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,QAAQ;YAChD,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS;YAClD,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,WAAW;YACtD,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,kBAAkB;YACpE,cAAc,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,cAAc;YAC5D,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM;YAC5C,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI;YACxC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS;YAClD,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,kBAAkB;YACpE,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,kBAAkB;YACpE,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM;YAC5C,0BAA0B,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,0BAA0B;YACpF,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,OAAO;YAC9C,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK;YAC1C,mBAAmB,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,mBAAmB;YACtE,mBAAmB,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,mBAAmB;SACvE;QAGD,IAAI,CAAC,cAAc,GAAG;YACpB,aAAa,EAAE,IAAI;YACnB,SAAS,EAAE,IAAI;YACf,WAAW,EAAE,IAAI;YACjB,kBAAkB,EAAE,IAAI;YACxB,cAAc,EAAE,IAAI;YACpB,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,IAAI;YACf,MAAM,EAAE,IAAI;YACZ,0BAA0B,EAAE,IAAI;YAChC,kBAAkB,EAAE,IAAI;YACxB,kBAAkB,EAAE,IAAI;YACxB,OAAO,EAAE,IAAI;SACd,CAAC;QAEF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,GAAG,EAAE,CAAC,IAAI,CAAC;YACX,mBAAmB,EAAE,CAAC,IAAI,CAAC;YAC3B,SAAS,EAAE,CAAC,IAAI,EAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACzC,QAAQ,EAAE,CAAC,IAAI,EAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACxC,aAAa,EAAE;gBACb,IAAI;gBACJ,yDAAU,CAAC,OAAO,CAAC;oBACjB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,WAAW,CAAC;iBAChC,CAAC;aACH;YACD,SAAS,EAAE;gBACT,IAAI;gBACJ,yDAAU,CAAC,OAAO,CAAC;oBACjB,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oBACxB,yDAAU,CAAC,OAAO,CAAC,QAAQ,CAAC;iBAC7B,CAAC;aACH;YACD,WAAW,EAAE;gBACX,IAAI;gBACJ,yDAAU,CAAC,OAAO,CAAC;oBACjB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oBACxB,yDAAU,CAAC,OAAO,CAAC,QAAQ,CAAC;iBAC7B,CAAC;aACH;YAED,oEAAoE;YACpE,kBAAkB,EAAE,CAAC,IAAI,CAAC;YAC1B,MAAM,EAAE,CAAC,IAAI,CAAC;YACd,cAAc,EAAE,CAAC,IAAI,CAAC;YACtB,IAAI,EAAE,CAAC,IAAI,CAAC;YACZ,SAAS,EAAE,CAAC,IAAI,CAAC;SAClB,CACF,CAAC;IACJ,CAAC;IAED,4CAAK,GAAL;QACE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;IACxC,CAAC;IAED,4DAAqB,GAArB;QAAA,iBA4BC;QA3BC,IAAI,CAAC,cAAc,GAAG;YACpB,aAAa,EAAE,IAAI,CAAC,mBAAmB,CAAC,aAAa;YACrD,SAAS,EAAE,IAAI,CAAC,mBAAmB,CAAC,SAAS;YAC7C,WAAW,EAAE,IAAI,CAAC,mBAAmB,CAAC,WAAW;YACjD,kBAAkB,EAAE,IAAI,CAAC,mBAAmB,CAAC,kBAAkB;YAC/D,MAAM,EAAE,IAAI,CAAC,mBAAmB,CAAC,MAAM;YACvC,cAAc,EAAE,IAAI,CAAC,mBAAmB,CAAC,cAAc;YACvD,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI;YACnC,SAAS,EAAE,IAAI,CAAC,mBAAmB,CAAC,SAAS;YAC7C,MAAM,EAAE,IAAI;YACZ,0BAA0B,EAAE,IAAI;YAChC,kBAAkB,EAAE,IAAI;YACxB,kBAAkB,EAAE,IAAI;YACxB,OAAO,EAAE,IAAI;SACd;QAID,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC;QACnD,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC;aACvE,SAAS,CAAC,wBAAc;YACvB,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,mBAAmB,CAAC,CAAC;YACtC,KAAI,CAAC,aAAa,CAAC,UAAU,GAAG,KAAI,CAAC,mBAAmB,CAAC;YACzD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gDAAS,GAAT,UAAU,EAAO,EAAE,EAAO;QACxB,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAChD,CAAC;IAtIQ;QAAR,2DAAK,EAAE;;+DAAO;IADJ,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YACrC,sNAAqD;SAEtD,CAAC;+EAgBgC,yEAAc,EAA2B,iFAAe,EAAyB,6EAAa,EAAc,0DAAW;OAf5I,4BAA4B,CAyIxC;IAAD,mCAAC;CAAA;AAzIwC;;;;;;;;;;;;;;;;;;ACdS;AAWlD;IAEE;IAAgB,CAAC;IAEjB,sCAAQ,GAAR;IACA,CAAC;IALU,mBAAmB;QAT/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,QAAQ,EAAE,mDAIT;SAEF,CAAC;;OACW,mBAAmB,CAO/B;IAAD,0BAAC;CAAA;AAP+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXS;AACO;AACgC;AACd;AACT;AAEK;AACyC;AACA;AACnE;AACsB;AACI;AACI;AACN;AA+B5D;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QA7B5B,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,0EAAmB;gBACnB,mHAA4B;gBAC5B,mHAA4B;gBAC5B,sEAAU;gBACV,0EAAY;gBACZ,8EAAc;gBACd,wEAAW;aACZ;YACD,OAAO,EAAE;gBACP,iFAAS;gBACT,0DAAW;gBACX,kEAAmB;gBACnB,4DAAY;gBACZ,6DAAe;aAChB;YACD,OAAO,EAAE;gBACP,0EAAmB;gBACnB,mHAA4B;gBAC5B,mHAA4B;gBAC5B,sEAAU;gBACV,0EAAY;gBACZ,8EAAc;gBACd,wEAAW;aACZ;YACD,eAAe,EAAE,CAAC,mHAA4B,EAAE,mHAA4B,CAAC;YAC7E,SAAS,EAAE,CAAC,wDAAQ,EAAE,iDAAQ,CAAC;SAChC,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;AC5Cc;AAK3C;IAEE;IAAgB,CAAC;IAFN,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,iBAAiB,CAG7B;IAAD,wBAAC;CAAA;AAH6B;;;;;;;;;;;;;;;;;;;;;ACLa;AACZ;AAEU;AAKzC;IAEE,sBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,8BAAO,GAAP,UAAQ,KAAa,EAAE,IAAY;QACjC,kDAAI,CAAC,IAAI,CAAC;YACR,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,IAAI;SACX,CAAC;IACJ,CAAC;IAED,4BAAK,GAAL,UAAM,KAAa,EAAE,IAAY;QAC/B,kDAAI,CAAC,IAAI,CAAC;YACR,IAAI,EAAE,OAAO;YACb,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,IAAI;SACX,CAAC;IACJ,CAAC;IAED,2BAAI,GAAJ,UAAK,KAAa,EAAE,IAAY;QAC9B,kDAAI,CAAC,IAAI,CAAC;YACR,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,IAAI;SACX,CAAC;IACJ,CAAC;IAED,8BAAO,GAAP,UAAQ,KAAa,EAAE,IAAY;QACjC,kDAAI,CAAC,IAAI,CAAC;YACR,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,IAAI;SACX,CAAC;IACJ,CAAC;IAED,6BAAM,GAAN,UAAO,UAAe;QACpB,OAAO,kDAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC/B,CAAC;IAtCU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG4B,sDAAM;OAFvB,YAAY,CAuCxB;IAAD,mBAAC;CAAA;AAvCwB;;;;;;;;;;;;;;;;;;;;;;ACRkB;AAC0B;AACX;AACP;AACR;AAQ3C;IAOE,yBAAoB,IAAgB,EAAU,cAA8B;QAAxD,SAAI,GAAJ,IAAI,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAL5E,8DAA8D;QAC9D,QAAG,GAAG,oCAAoC,CAAC;IAIqC,CAAC;IAC1E,yCAAe,GAAtB,UAAuB,UAAkB;QACvC,IAAM,WAAW,GAAM,IAAI,CAAC,GAAG,yBAAoB,UAAY,CAAC;QAChE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,WAAW,CAAC;IAC/C,CAAC;IAEM,yCAAe,GAAtB;QAAA,iBAMC;QALC,IAAM,WAAW,GAAM,IAAI,CAAC,GAAG,qBAAkB,CAAC;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,WAAW,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,UAAC,GAAQ;YACvE,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,EAAE,sDAAsD,CAAC,CAAC;YAC5F,OAAO,0CAAK,CAAC;QACf,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAEM,wCAAc,GAArB,UAAsB,YAAoB;QAA1C,iBAMC;QALC,IAAM,WAAW,GAAM,IAAI,CAAC,GAAG,wBAAmB,YAAc,CAAC;QACjE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,WAAW,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,UAAC,GAAQ;YACvE,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,EAAE,sDAAsD,CAAC,CAAC;YAC5F,OAAO,0CAAK,CAAC;QACf,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAIM,0CAAgB,GAAvB,UAAwB,UAAsB;QAC5C,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAC5C,IAAM,WAAW,GAAM,IAAI,CAAC,GAAG,sBAAmB,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,WAAW,EAAE,UAAU,CAAC,CAAC;IACzD,CAAC;IAGD,wCAAc,GAAd,UAAe,EAAU,EAAE,gBAAkC;QAA7D,iBAMC;QALC,IAAM,WAAW,GAAM,IAAI,CAAC,GAAG,wBAAmB,EAAI,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,WAAW,EAAE,gBAAgB,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,UAAC,GAAQ;YAC7F,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,EAAE,wBAAwB,CAAC,CAAC;YAC9D,OAAO,0CAAK,CAAC;QACf,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IA5CU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAQ0B,+DAAU,EAA0B,+DAAc;OAPjE,eAAe,CA6C3B;IAAD,sBAAC;CAAA;AA7C2B;;;;;;;;;;;;;;;;;;;ACZiC;AACR;AAKrD;IACE,sBAAmB,YAAsB;QAAtB,iBAAY,GAAZ,YAAY,CAAU;IACzC,CAAC;IAED,2BAAI,GAAJ,UAAK,aAAkB,EAAE,OAAY;QACnC,IAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC7D,IAAI,cAAc,CAAC,iBAAiB,EAAE;YACpC,cAAc,CAAC,iBAAiB,CAAC,KAAK,GAAG,OAAO,CAAC;SAClD;IACH,CAAC;IAED,4BAAK,GAAL;QACE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC;IAbU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAEiC,mEAAQ;OAD9B,YAAY,CAcxB;IAAD,mBAAC;CAAA;AAdwB;;;;;;;;;;;;;;;;;;ACNkB;AAM3C;IAIE;IAAgB,CAAC;IAJN,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,aAAa,CAKzB;IAAD,oBAAC;CAAA;AALyB;;;;;;;;;;;;;;;;;;;ACNiB;AACO;AAQlD;IAGE,sCAAsC;IAEtC,uBAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAH1C,QAAG,GAAG,0CAA0C,CAAC;IAGH,CAAC;IAExC,oCAAY,GAAnB,UAAoB,MAAc;QAChC,IAAM,WAAW,GAAM,IAAI,CAAC,GAAG,2BAAwB,CAAC;QACxD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IACnD,CAAC;IAEM,qCAAa,GAApB;QACE,IAAM,WAAW,GAAM,IAAI,CAAC,GAAG,yBAAsB,CAAC;QACtD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,WAAW,CAAC,CAAC;IACpD,CAAC;IAEM,qCAAa,GAApB,UAAqB,QAAgB;QACnC,IAAM,WAAW,GAAM,IAAI,CAAC,GAAG,6BAAwB,QAAU,CAAC;QAClE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,WAAW,CAAC,CAAC;IAClD,CAAC;IAEM,4CAAoB,GAA3B,UAA4B,MAAwB;QAClD,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAC/B,IAAM,WAAW,GAAM,IAAI,CAAC,GAAG,+BAA4B,CAAC;QAC5D,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IACnD,CAAC;IAEM,iCAAS,GAAhB,UAAiB,UAAkB,EAAE,UAAkB;QACrD,IAAM,WAAW,GAAM,IAAI,CAAC,GAAG,yBAAoB,UAAU,SAAI,UAAU,MAAG,CAAC;QAC/E,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAmB,WAAW,CAAC,CAAC;IAC5D,CAAC;IAEM,sCAAc,GAArB,UAAsB,UAAmB;QACvC,IAAM,WAAW,GAAM,IAAI,CAAC,GAAG,sCAAiC,UAAY,CAAC;QAC7E,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAqB,WAAW,CAAC,CAAC,SAAS,CAAC,cAAM,cAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,EAApC,CAAoC,CAAC,CAAC;IACvH,CAAC;IApCU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAMgC,+DAAU;OAL/B,aAAa,CAsCzB;IAAD,oBAAC;CAAA;AAtCyB;;;;;;;;;;;;;;;;;;;ACTiB;AACyB;AAKpE;IAGE,wBAAoB,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;QACvC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED,gCAAO,GAAP,UAAQ,KAAa,EAAE,IAAY;QACjC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,6BAAI,GAAJ,UAAK,KAAa,EAAE,IAAW;QAC5B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;IAChC,CAAC;IAEF,gCAAO,GAAP,UAAQ,KAAa,EAAE,IAAW;QAC/B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC;IACnC,CAAC;IAED,+BAAM,GAAN,UAAO,KAAa,EAAE,IAAW;QAChC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;IArBW,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAI4B,wDAAa;OAH9B,cAAc,CAwB1B;IAAD,qBAAC;CAAA;AAxB0B;;;;;;;;;;;;;ACN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;GAEG;AAEuC;AACE;AACH;;;;;;;;;;;;;ACNzC;AAAA;AAAA;IAAA;IAUA,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;;;ACRD;AAAA;AAAA;IAAA;IAsBA,CAAC;IAAD,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACtBD;AAAA;AAAA;IAAA;IAcA,CAAC;IAAD,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;AChB0C;AACO;AACwC;AAM1F;IAIE,8BAAoB,IAAgB,EAAU,cAA8B;QAAxD,SAAI,GAAJ,IAAI,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAF5E,QAAG,GAAG,qCAAqC,CAAC;IAEqC,CAAC;IACzE,6CAAc,GAArB,UAAsB,aAAoB;QACxC,+DAA+D;QAC/D,IAAM,SAAS,GAAM,IAAI,CAAC,GAAG,sCAAiC,aAAe,CAAC;QAE9E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,SAAS,CAAC;IACtC,CAAC;IAVQ,oBAAoB;QAHhC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAK0B,+DAAU,EAA0B,uGAAc;OAJjE,oBAAoB,CAahC;IAAD,2BAAC;CAAA;AAbgC;;;;;;;;;;;;;;;;;;ACLyB;AAEnD,SAAS,WAAW,CAAC,QAAyB;IAArD,iBAoBC;IAnBC,OAAO;QACL,OAAO,IAAI,OAAO,CAAC,UAAO,OAAO,EAAE,MAAM;;;;;;wBAErC,qBAAM,QAAQ,CAAC,IAAI,CAAC;gCAClB,MAAM,EAAE,qEAAW,CAAC,QAAQ;gCAC5B,WAAW,EAAE;oCACX,MAAM,EAAE,WAAW;oCACnB,gBAAgB,EAAE,KAAK;iCACxB;gCACD,uBAAuB,EAAE,IAAI;gCAC7B,kBAAkB,EAAE,CAAC,QAAQ,CAAC;6BAC/B,CAAC;;wBARF,SAQE,CAAC;wBACH,OAAO,EAAE,CAAC;;;;wBAEV,MAAM,CAAC,OAAK,CAAC,CAAC;wBACd,QAAQ,CAAC,UAAU,EAAE,CAAC;;;;;aAEzB,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBwC;AACqC;AACrB;AACH;AACK;AACgC;AACM;AACH;AACe;AAC/C;AACf;AACoC;AAEnF,IAAM,MAAM,GAAW;IACrB;QACG,IAAI,EAAC,EAAE;QACP,UAAU,EAAC,OAAO;QAClB,SAAS,EAAC,MAAM;KAClB;IACD;QACG,IAAI,EAAC,OAAO;QACZ,SAAS,EAAC,qEAAc;KAC1B;IACD;QACG,IAAI,EAAC,MAAM;QACX,SAAS,EAAC,kEAAa;QACvB,QAAQ,EAAC;YACN;gBACE,IAAI,EAAC,MAAM;gBACX,SAAS,EAAC,uEAAa;gBACvB,WAAW,EAAE,CAAC,4DAAY,CAAC;aAC5B;YACD;gBACE,IAAI,EAAC,+BAA+B;gBACpC,SAAS,EAAC,6GAAyB;aACpC;YACD;gBACE,IAAI,EAAC,kBAAkB;gBACvB,SAAS,EAAC,0GAAwB;aACnC;YACD;gBACE,IAAI,EAAC,uBAAuB;gBAC5B,SAAS,EAAC,yHAA6B;aACxC;YACD;gBACE,IAAI,EAAC,+BAA+B;gBACpC,SAAS,EAAC,uGAAuB;aAClC;YACD;gBACE,IAAI,EAAC,mBAAmB;gBACxB,SAAS,EAAE,2EAAc;aAC1B;YACD;gBACG,IAAI,EAAC,IAAI;gBACT,UAAU,EAAC,MAAM;aACnB;SACH;QACD,qBAAqB,EAAE,QAAQ;KACjC;IACD;QACE,IAAI,EAAC,gBAAgB;QACrB,SAAS,EAAC,gGAAsB;KACjC;IACD;QACG,IAAI,EAAC,IAAI;QACT,UAAU,EAAC,OAAO;QAClB,SAAS,EAAC,MAAM;KAClB;CACF,CAAC;AAOF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAL5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAC,mBAAmB,EAAE,QAAQ,EAAC,CAAC,CAAC;YACxE,OAAO,EAAE,CAAC,4DAAY,CAAC;YACvB,SAAS,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;AC3Ec;AACwE;AAC7C;AACgB;AAGtF;IAAkC,sEAAiB;IACjD,sBAAsB,MAAc,EAAY,eAAgC,EAAU,KAAmB,EAAU,cAA8B;QAArJ,YACE,kBAAM,MAAM,EAAE,eAAe,CAAC,SAC/B;QAFqB,YAAM,GAAN,MAAM,CAAQ;QAAY,qBAAe,GAAf,eAAe,CAAiB;QAAU,WAAK,GAAL,KAAK,CAAc;QAAU,oBAAc,GAAd,cAAc,CAAgB;;IAErJ,CAAC;IAED,sCAAe,GAAf,UAAgB,KAA6B,EAAE,KAA0B;QAAzE,iBAgCC;QA/BC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,IAAI,CAAC,KAAI,CAAC,aAAa,EAAE;gBACvB,KAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;gBAC7B,OAAO;aACR;YAED,IAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;YACvC,IAAM,MAAM,GAAG,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,IAAI,CAAC,aAAa,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChD,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC;aACtB;iBAAM;gBACL,IAAI,CAAC,KAAI,CAAC,KAAK,IAAI,KAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC1C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;oBAC1C,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAC,wCAAwC,CAAC,CAAC;oBACnE,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC;iBACtB;gBACD,IAAI,OAAO,GAAY,KAAK,CAAC;gBAC7B,KAA2B,UAAa,EAAb,+BAAa,EAAb,2BAAa,EAAb,IAAa,EAAE;oBAArC,IAAM,YAAY;oBACrB,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE;wBACzC,OAAO,GAAG,IAAI,CAAC;wBACf,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC;qBACtB;iBACF;gBACD,IAAG,OAAO,IAAI,KAAK,EAAE;oBACnB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;oBAC1C,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAC,wCAAwC,CAAC,CAAC;oBACnE,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC;iBACtB;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IArCU,YAAY;QADxB,gEAAU,EAAE;+EAEmB,sDAAM,EAA6B,gEAAe,EAAiB,mGAAY,EAA0B,8DAAc;OAD1I,YAAY,CAsCxB;IAAD,mBAAC;CAAA,CAtCiC,kEAAiB,GAsClD;AAtCwB;;;;;;;;;;;;;;;;;;;;;ACNiB;AAC0B;AACyB;AACvB;AAQtE;IAIE,sBAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAFpD,UAAK,GAAG,eAAe,CAAC;IAGxB,CAAC;IAEK,+BAAQ,GAAd;;;;;4BACM,qBAAM,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE;;6BAAvC,SAAuC,EAAvC,wBAAuC;wBACzC,SAAI;wBAAe,qBAAM,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE;;wBAA/D,GAAK,WAAW,GAAG,SAA4C,CAAC;;;;;;KAEnE;IAXU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,uIAAmC;YACnC,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,iFAAsB,EAAE,QAAQ,EAAE,qGAAwB,EAAC,CAAC;SACnF,CAAC;+EAKqC,8EAAe;OAJzC,YAAY,CAYxB;IAAD,mBAAC;CAAA;AAZwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXzB,wBAAwB;AACkC;AACwB;AACzB;AACsB;AAC5B;AACK;AACU;AAEV;AAExD,yBAAyB;AAC6C;AACtB;AACgB;AACb;AACa;AACG;AACR;AACZ;AAE/C,0BAA0B;AAC6C;AAEvE,mBAAmB;AAC4B;AACU;AACH;AACsB;AACH;AACb;AACD;AACgC;AACM;AACH;AACe;AAC/C;AACY;AACjC;AACoC;AACM;AAiEnF;IAAA;IAAyB,CAAC;IAAb,SAAS;QA/DrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY;gBACZ,sEAAc;gBACd,mEAAa;gBACb,yFAAmB;gBACnB,sFAAkB;gBAClB,yEAAe;gBACf,wEAAa;gBACb,wGAAuB;gBACvB,8GAAyB;gBACzB,2GAAwB;gBACxB,0HAA6B;gBAC7B,2EAAc;gBACd,0FAAoB;gBACpB,gGAAsB;aACvB;YACD,OAAO,EAAE;gBACP,qFAAgB;gBAChB,8DAAe;gBACf,oEAAS;gBACT,uEAAa;gBACb,oEAAgB;gBAChB,4DAAY;gBACZ,4FAAuB;gBACvB,wDAAY,CAAC,OAAO,CAAC;oBACnB,aAAa,EAAE,sBAAsB;oBACrC,WAAW,EAAE,IAAI;oBACjB,cAAc,EAAE,IAAI;oBACpB,SAAS,EAAE,CAAC;iBACb,CAAC;gBACF,gEAAoB;gBACpB,qEAAgB;gBAChB,uEAAqB;gBACrB,gEAAc;gBACd,0DAAW;gBACX,uDAAa,CAAC,OAAO,EAAE;gBACvB,kEAAmB;gBACnB,iFAAmB;gBACnB,oEAAS,CAAC,OAAO,EAAE;gBACnB,+EAAiB,CAAC,OAAO,CAAC;oBACxB,cAAc,EAAE,KAAK;oBACrB,WAAW,EAAE,eAAe;oBAC5B,kBAAkB,EAAE,iBAAiB;oBACrC,iBAAiB,EAAE,cAAc;iBAClC,CAAC;gBACF,yEAAqB,CAAC,OAAO,EAAE;gBAC/B,6DAAY;aACb;YACD,eAAe,EAAE,EAAE;YACnB,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,6DAAe;oBACxB,UAAU,EAAE,sDAAW;oBACvB,KAAK,EAAE,IAAI;oBACX,IAAI,EAAE,CAAC,iEAAe,CAAC;iBACxB;gBACD,wDAAQ;gBACR,kDAAQ;aACT;YACD,SAAS,EAAE,CAAC,4DAAY,CAAC;YACzB,OAAO,EAAE,CAAE,oEAAsB,CAAE;SACpC,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACzGtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,IAAM,YAAY,GAAG;IACxB,QAAQ;IACR,SAAS;IACT,UAAU;IACV,gBAAgB;IAChB,SAAS;IACT,YAAY;IACZ,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,UAAU;IACV,SAAS;IACT,SAAS;IACT,MAAM;IACN,QAAQ;IACR,MAAM;IACN,OAAO;IACP,UAAU;IACV,SAAS;IACT,QAAQ;IACR,UAAU;IACV,WAAW;IACX,eAAe;IACf,UAAU;IACV,OAAO;IACP,UAAU;IACV,WAAW;IACX,UAAU;IACV,aAAa;IACb,SAAS;IACT,gBAAgB;IAChB,eAAe;IACf,UAAU;IACV,eAAe;IACf,YAAY;IACZ,YAAY;IACZ,QAAQ;IACR,UAAU;IACV,MAAM;IACN,UAAU;IACV,QAAQ;IACR,cAAc;IACd,aAAa;IACb,cAAc;IACd,gBAAgB;IAChB,cAAc;IACd,WAAW;IACX,OAAO;IACP,MAAM;IACN,UAAU;IACV,gBAAgB;IAChB,SAAS;IACT,YAAY;IACZ,WAAW;IACX,eAAe;IACf,SAAS;CACZ,CAAC;AAEK,IAAM,aAAa,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,wBAAwB,EAAE,CAAC;AAEpE,IAAM,WAAW,GAAG;IACvB,OAAO;IACP,2BAA2B;IAC3B,kCAAkC;IAClC,2CAA2C;IAC3C,OAAO;IACP,wBAAwB;CAC3B,CAAC;AACK,IAAM,yBAAyB,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;AAEzD,IAAM,gBAAgB,GAAG,CAAC,oBAAoB,EAAE,wBAAwB,EAAE,wBAAwB,CAAC,CAAC;AAEpG,IAAM,qBAAqB,GAAG;IACjC,qBAAqB;IACrB,qBAAqB;IACrB,qBAAqB;IACrB,qBAAqB;IACrB,qBAAqB;IACrB,qBAAqB;IACrB,qBAAqB;IACrB,qBAAqB;IACrB,qBAAqB;IACrB,sBAAsB;IACtB,sBAAsB;IACtB,oBAAoB;IACpB,wCAAwC;IACxC,sDAAsD;IACtD,0BAA0B;IAC1B,qBAAqB;IACrB,oBAAoB;IACpB,kBAAkB;IAClB,iBAAiB;IACjB,wBAAwB;CAC3B,CAAC;;;;;;;;;;;;;AC7FF;AAAA;AAAA;AAAO,IAAM,YAAY,GAAG,+DAA+D,CAAC;AACrF,IAAM,iBAAiB,GAAG,kxUAAkxU,CAAC;;;;;;;;;;;;;;;;;;ACDlwU;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,oJAAsC;SAEvC,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;;;;;;;ACPsB;AAelD;IAEE;IAAgB,CAAC;IAEjB,uCAAQ,GAAR;QAEE,gCAAgC;QAChC,qBAAqB;QACrB,iBAAiB;QACjB,yBAAyB;QACzB,4BAA4B;QAC5B,MAAM;QACN,KAAK;IACP,CAAC;IAbU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,sKAA4C;SAE7C,CAAC;;OACW,oBAAoB,CAehC;IAAD,2BAAC;CAAA;AAfgC;;;;;;;;;;;;;;;;;;;;ACfiB;AACC;AACY;AAM/D;IAEE,wBAAoB,eAAgC,EAAU,MAAc;QAAxD,oBAAe,GAAf,eAAe,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE3E,iCAAQ,GAAd;;;;;wBACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;wBAC/B,qBAAM,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE;;wBAA1C,IAAG,SAAuC,EAAC;4BACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;yBACjC;;;;;KACF;IATU,cAAc;QAJ1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,iJAAqC;SACtC,CAAC;+EAGqC,gEAAe,EAAkB,mEAAM;OAFjE,cAAc,CAW1B;IAAD,qBAAC;CAAA;AAX0B;;;;;;;;;;;;ACR3B,+DAA+D,+I;;;;;;;;;;;;ACA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAA2E;AAC3E,oCAAoC;AACpC,2EAA2E;;AAE3E,2EAA2E;AAE3E,wBAAwB;AACiC;AACA;AAIhB;AAEzC,0BAA0B;AAC1B,mBAAmB;AAEnB,iBAAiB;AACyE;AACJ;AAEtF,4BAA4B;AACoD;AACQ;AAItF,8EAA8E;AAOhF;IAkBA,gFAAgF;IAC9E,wBACU,KAAqB,EACrB,aAA4B,EAC5B,cAA8B,EAC9B,KAAmB,EACnB,MAAc;QAJd,UAAK,GAAL,KAAK,CAAgB;QACrB,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAc;QACnB,WAAM,GAAN,MAAM,CAAQ;IAExB,CAAC;IAEH,iFAAiF;IAE/E,iCAAQ,GAAR;QACE,gBAAgB;QAChB,IAAI,CAAC,YAAY,GAAG;YAClB,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,MAAM;YACb,IAAI,EAAE,gDAAgD;YACtD,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,uBAAuB;YAC1C,gBAAgB,EAAE,QAAQ;YAC1B,kBAAkB,EAAE,iBAAiB;YACrC,iBAAiB,EAAE,cAAc;SAClC;QAGD,4BAA4B;QAC5B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK;aAChC,QAAQ;aACR,QAAQ;aACR,GAAG,CAAC,YAAY,CAAC,CACnB,CAAC;QACF,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,mCAAmC;QACnC,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAGtD,4DAA4D;QAC5D,IAAI,CAAC,WAAW,GAAG,qEAAY,CAAC;QAChC,IAAI,CAAC,gBAAgB,GAAG,0EAAiB;YAGvC,mCAAmC;YACnC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAGhC,mCAAmC;QACnC,IAAI,CAAC,SAAS,CAAC,qEAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAChD,CAAC;IAEH,sFAAsF;IAGpF,kCAAS,GAAT,UAAU,UAAkB,EAAE,UAAkB;QAAhD,iBAwCC;QAvCC,OAAO,IAAI,CAAC,aAAa;aACtB,SAAS,CAAC,UAAU,EAAE,UAAU,CAAC;YAElC,yDAAyD;aACxD,SAAS,CACR,gBAAM;YACJ,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAGpB,+BAA+B;YAC/B,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;YAErC,gCAAgC;YAChC,IAAI,MAAM,CAAC,cAAc,IAAI,IAAI,EAAE;gBACjC,yDAAyD;gBACzD,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;aAC1D;iBACI;gBACH,OAAO,CAAC,GAAG,CAAC,cAAc,EAAC,6BAA6B,CAAC,CAAC;aAC3D;YAEH,6DAA6D;YAE3D,IAAI,MAAM,CAAC,gBAAgB,IAAI,IAAI,EAAE;gBACnC,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;aAC7D;iBACI;gBACH,OAAO,CAAC,GAAG,CAAC,cAAc,EAAC,+BAA+B,CAAC,CAAC;aAC7D;YAED,gEAAgE;YAChE,KAAI,CAAC,uBAAuB,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC;YAEpD,6CAA6C;YAC7C,KAAI,CAAC,mBAAmB,EAAE,CAAC;QAE7B,CAAC,CACF,CAAC;IAEN,CAAC;IAED,iBAAiB;IACjB,gDAAuB,GAAvB,UAAwB,gBAAqB;QAC3C,IAAI,CAAC,YAAY,GAAG,IAAI,+DAAuB,CAAC,gBAAgB,CAAC,CAAC;QAClE,gBAAgB;QAChB,IAAG,IAAI,CAAC,YAAY,IAAI,IAAI,EAAC;YAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC;YAC9C,uDAAe,CAAC,MAAM,CAAC,iBAAiB,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;SACzE;aACG;YACF,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,2BAA2B,CAAC,CAAC;SAC1D;QAED,6CAA6C;QAC7C,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACrD,CAAC;IAGD,2BAA2B;IAC3B,sCAAa,GAAb;QACE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IACxC,CAAC;IAGD,+BAA+B;IAC/B,6CAAoB,GAApB,UAAqB,UAAe;QAClC,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC,IAAI,CAAC;QACvC,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QAC/C,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,wBAAwB,CAAC,CAAC;IACnE,CAAC;IAED,oCAAoC;IACpC,uCAAc,GAAd,UAAe,UAAkB;QAC/B,IAAI,CAAC,gBAAgB,GAAG;YACtB,UAAU,EAAE,UAAU;YACtB,UAAU,EAAE,IAAI;YAChB,UAAU,EAAE,IAAI,CAAC,WAAW;YAC5B,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC;YACvD,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC;SACrD;QAED,IAAG,IAAI,CAAC,gBAAgB,IAAI,IAAI,EAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,cAAc,EAAC,4CAA4C,CAAC,CAAC;SAE1E;IAEH,CAAC;IAED,yBAAyB;IACzB,+DAA+D;IAC/D,iDAAwB,GAAxB;QACE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACrD,CAAC;IAED,qCAAqC;IACrC,mCAAU,GAAV,UAAW,gBAAkC;QAC3C,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC,SAAS,EAAE,CAAC;IACxE,CAAC;IAIH,4CAA4C;IAC1C,0CAAiB,GAAjB;QACE,6DAA6D;QAC7D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAE1B,6CAA6C;QAC7C,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAErD,CAAC;IAID,qFAAqF;IAErF,uBAAuB;IACvB,uCAAc,GAAd;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,8BAA8B,CAAC,CAAC;QACtE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,6BAA2B,IAAI,CAAC,UAAY,CAAC,CAAC,CAAC;IACvE,CAAC;IAGD,gFAAgF;IAChF,4CAAmB,GAAnB;QACE,IAAI,CAAC,YAAY,CAAC,qBAAqB,GAAG,KAAK,CAAC;QAChD,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC;IAED,oCAAW,GAAX;QAAA,iBAQC;QAPC,IAAI,CAAC,KAAK;aACP,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;aACzB,IAAI,CAAC,UAAC,MAAM;YACX,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,KAAI,CAAC,cAAc,EAAE,CAAC;aACvB;QACH,CAAC,CAAC;IACN,CAAC;IAGD,mCAAU,GAAV;QACE,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC7B,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC;IAED,mCAAU,GAAV;QACE,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC7B,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC;IAED,uCAAc,GAAd;QACE,+EAA+E;QAC/E,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,eAAe;QAChD,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;QAE3B,EAAE;QACF,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC7C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;QAE7D,+BAA+B;QAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,6BAA2B,IAAI,CAAC,UAAY,CAAC,CAAC,CAAC;QAErE,yBAAyB;QACzB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,yCAAyC,CAAC,CAAC;QAElF,sBAAsB;QACtB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAErD,CAAC;IAED,0CAAiB,GAAjB;QACE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC/C,CAAC;IArPQ;QAAR,2DAAK,EAAE;;sDAAoB;IAJjB,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,sJAAqC;;SAEtC,CAAC;+EAqBiB,8DAAc;YACN,qGAAa;YACZ,uGAAc;YACvB,mGAAY;YACX,sDAAM;OAxBb,cAAc,CA2P1B;IAAD,qBAAC;CAAA;AA3P0B;;;;;;;;;;;;AClC3B,+DAA+D,+K;;;;;;;;;;;;;;;;;;;;ACA/D,wBAAwB;AACiC;AACR;AAQjD,iBAAiB;AAC2E;AACJ;AAWxF;IAKE,mCAAoB,KAAqB,EAC/B,eAAgC,EAChC,YAA2B;QAFjB,UAAK,GAAL,KAAK,CAAgB;QAC/B,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAe;IAAI,CAAC;IAE1C,4CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK;aAChC,QAAQ;aACR,QAAQ;aACR,GAAG,CAAC,YAAY,CAAC,CACnB,CAAC;QACF,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC;IACxC,CAAC;IAED,oDAAgB,GAAhB,UAAiB,UAAkB;QAAnC,iBAOC;QANC,IAAI,CAAC,eAAe;YACpB,eAAe,CAAC,UAAU,CAAC;aAC1B,SAAS,CAAC,oBAAU;YACnB,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC;QAChD,CAAC,CAAC,CAAC;IACN,CAAC;IAxBQ;QAAR,2DAAK,EAAE;;iEAAmB;IADhB,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,0LAAiD;;SAElD,CAAC;+EAM2B,8DAAc;YACd,yGAAe;YAClB,qGAAa;OAP1B,yBAAyB,CA2BrC;IAAD,gCAAC;CAAA;AA3BqC;;;;;;;;;;;;ACvBtC,+DAA+D,+K;;;;;;;;;;;;;;;;;;;;;;;ACA/D,wBAAwB;AAC0B;AAC8B;AACnC;AAE7C,yBAAyB;AACzB,0BAA0B;AAE1B,mBAAmB;AAC+G;AACA;AAGlI,iBAAiB;AACqE;AACE;AAWxF;IAKE,kCAAoB,KAAqB,EAC/B,YAA0B,EAC1B,YAA2B,EAC3B,WAAwB;QAHd,UAAK,GAAL,KAAK,CAAgB;QAC/B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAe;QAC3B,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,2CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;QAE/C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QAE5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,GAAG,EAAE,CAAC,EAAE,CAAC;YACT,mBAAmB,EAAE,CAAC,EAAE,CAAC;YACzB,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,aAAa,EAAE,CAAC,EAAE,CAAC;YACnB,WAAW,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACnC,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,mBAAmB,EAAE,CAAC,EAAE,CAAC;YACzB,kBAAkB,EAAE,CAAC,EAAE,CAAC;YACxB,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,MAAM,EAAE,CAAC,EAAE,CAAC;SACb,CAAC,CAAC;IACL,CAAC;IAED,qCAAqC;IACrC,0DAAuB,GAAvB,UAAwB,MAAW;QACjC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,+IAA4B,EAAE,MAAM,CAAC,CAAC;IAC/D,CAAC;IAEA,sCAAsC;IACvC,4DAAyB,GAAzB,UAA0B,MAAW;QACnC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,+IAA4B,EAAE,MAAM,CAAC,CAAC;IAC/D,CAAC;IAhDU,wBAAwB;QANpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,uLAAgD;;SAEjD,CAAC;+EAO2B,8DAAc;YACjB,mGAAY;YACZ,qGAAa;YACd,0DAAW;OARvB,wBAAwB,CAmDpC;IAAD,+BAAC;CAAA;AAnDoC;;;;;;;;;;;;AC1BrC,+DAA+D,2L;;;;;;;;;;;;;;;;;;;;;;;;ACA/D,wBAAwB;AAC4C;AACvB;AACD;AACH;AAOzC,0BAA0B;AAC1B,mBAAmB;AACnB,iBAAiB;AAC2E;AACF;AAE1F,4BAA4B;AACsD;AACP;AACyE;AAapJ;IAmHE,uCAAoB,EAAe,EACzB,eAAgC,EAChC,cAA8B,EAC9B,MAAc;QAHJ,OAAE,GAAF,EAAE,CAAa;QACzB,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QArHxB,qBAAgB,GAAG,IAAI,+FAAU,EAAE,CAAC;QACpC,mBAAc,GAAG,IAAI,wFAAO,EAAE,CAAC;QAG/B,iBAAY,GAAG,6DAAY,CAAC;QAC5B,kBAAa,GAAG,8DAAa,CAAC;QAC9B,gBAAW,GAAG,4DAAW,CAAC;QAC1B,qBAAgB,GAAG,iEAAgB,CAAC;QACpC,0BAAqB,GAAG,sEAAqB,CAAC;QAC9C,8BAAyB,GAAG,0EAAyB,CAAC;QAItD,gBAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC1B,GAAG,EAAE;gBACH,EAAE;gBACF,yDAAU,CAAC,OAAO,CAAC;oBACjB,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC;iBAC/B,CAAC;aACH;YACD,UAAU,EAAE;gBACV,EAAE;gBACF,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;aAC1C;YACD,SAAS,EAAE;gBACT,EAAE;gBACF,yDAAU,CAAC,OAAO,CAAC;oBACjB,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;iBACxB,CAAC;aACH;YACD,QAAQ,EAAE;gBACR,EAAE;gBACF,yDAAU,CAAC,QAAQ;aACpB;YACD,aAAa,EAAE;gBACb,EAAE;gBACF,yDAAU,CAAC,OAAO,CAAC;oBACjB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,OAAO,CAAC,WAAW,CAAC;iBAChC,CAAC;aACH;YACD,WAAW,EAAE;gBACX,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;gBACpB,yDAAU,CAAC,QAAQ;aACpB;YACD,SAAS,EAAE;gBACT,EAAE;gBACF,yDAAU,CAAC,OAAO,CAAC;oBACjB,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oBACxB,yDAAU,CAAC,OAAO,CAAC,QAAQ,CAAC;iBAC7B,CAAC;aACH;YACD,WAAW,EAAE;gBACX,EAAE;gBACF,yDAAU,CAAC,OAAO,CAAC;oBACjB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oBACxB,yDAAU,CAAC,OAAO,CAAC,QAAQ,CAAC;iBAC7B,CAAC;aACH;YACD,mBAAmB,EAAE;gBACnB,EAAE;gBACF,yDAAU,CAAC,QAAQ;aACpB;YACD,kBAAkB,EAAE;gBAClB,EAAE;gBACF,yDAAU,CAAC,QAAQ;aACpB;YACD,MAAM,EAAE;gBACN,EAAE;gBACF,yDAAU,CAAC,QAAQ;aACpB;YACD,cAAc,EAAE;gBACd,EAAE;gBACF,yDAAU,CAAC,QAAQ;aACpB;YACD,IAAI,EAAE;gBACJ,EAAE;gBACF,yDAAU,CAAC,QAAQ;aACpB;YACD,SAAS,EAAE;gBACT,EAAE;gBACF,yDAAU,CAAC,QAAQ;aACpB;YACD,YAAY,EAAE;gBACZ,EAAE;gBACF,yDAAU,CAAC,QAAQ;aACpB;YACD,YAAY,EAAE;gBACZ,EAAE;gBACF,yDAAU,CAAC,QAAQ;aACpB;YACD,IAAI,EAAE;gBACJ,EAAE;gBACF,yDAAU,CAAC,QAAQ;aACpB;YACD,KAAK,EAAE;gBACL,EAAE;gBACF,yDAAU,CAAC,QAAQ;aACpB;YACD,OAAO,EAAE;gBACP,EAAE;gBACF,yDAAU,CAAC,QAAQ;aACpB;YACD,MAAM,EAAE;gBACN,EAAE;gBACF,yDAAU,CAAC,QAAQ;aACpB;SACF,CAAC,CAAC;QA+CH,UAAK,GAAG,KAAK,CAAC;QACd,cAAS,GAAG,KAAK,CAAC;IA1Cd,CAAC;IAEL,gDAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG;YACpB,EAAE,EAAE,IAAI;YACR,YAAY,EAAE,EAAE;YAChB,YAAY,EAAE,EAAE;YAChB,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,EAAE;YACV,kBAAkB,EAAE,IAAI;YACxB,kBAAkB,EAAE,EAAE;SACvB;YAEC,IAAI,CAAC,gBAAgB,GAAG;gBACtB,UAAU,EAAE,IAAI;gBAChB,GAAG,EAAE,EAAE;gBACP,WAAW,EAAE,IAAI;gBACjB,SAAS,EAAE,EAAE;gBACb,aAAa,EAAE,EAAE;gBACjB,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE,EAAE;gBACb,WAAW,EAAE,EAAE;gBACf,kBAAkB,EAAE,EAAE;gBACtB,cAAc,EAAE,EAAE;gBAClB,MAAM,EAAE,EAAE;gBACV,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,EAAE;gBACb,kBAAkB,EAAE,IAAI;gBACxB,kBAAkB,EAAE,EAAE;gBACtB,MAAM,EAAE,EAAE;gBACV,0BAA0B,EAAE,EAAE;gBAC9B,OAAO,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC;gBAC9B,KAAK,EAAE,EAAE;gBACT,mBAAmB,EAAE,EAAE;gBACvB,mBAAmB,EAAE,EAAE;aACxB,CAAC;IACN,CAAC;IAKD,uDAAe,GAAf;QACE,iDAAiD;QACjD,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QAC7D,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;QACpE,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,MAAM,CAAC;IAE7C,CAAC;IAGD,0DAAkB,GAAlB;QACE,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;YAE1B,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,QAAQ,EAAE,CAAC;SACjB;aACI;YACH,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAEpC,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;YACxC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,EAAE,+BAA+B,CAAC,CAAC;SAEtE;IACH,CAAC;IAID,6FAA6F;IAC7F,gDAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,eAAe;aACjB,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAChD,cAAI;YACF,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,oCAAoC,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;YACnE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAC9B,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC;YAE7D,iBAAiB;YACjB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,6BAA2B,KAAI,CAAC,UAAY,CAAC,CAAC,CAAC;QACvE,CAAC,CACF,CAAC;IACN,CAAC;IAGD,iDAAS,GAAT,UAAU,EAAO,EAAE,EAAO;QACxB,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAChD,CAAC;IAED,wDAAwD;IAExD,gDAAQ,GAAR;QACE,IAAI,CAAC,cAAc,GAAG;YACpB,EAAE,EAAE,IAAI;YACR,YAAY,EAAE,UAAU;YACxB,YAAY,EAAE,MAAM;YACpB,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC1E,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,IAAI;iBACV,MAAM,EAAE;iBACR,QAAQ,CAAC,EAAE,CAAC;iBACZ,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;YACf,MAAM,EAAE,IAAI;iBACT,MAAM,EAAE;iBACR,QAAQ,CAAC,EAAE,CAAC;iBACZ,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;YACf,kBAAkB,EAAE,IAAI;YACxB,kBAAkB,EAAE,EAAE;SACvB;YAEC,IAAI,CAAC,gBAAgB,GAAG;gBACtB,UAAU,EAAE,IAAI;gBAChB,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;gBAC5C,WAAW,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;gBAC5D,SAAS,EAAE,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,GAAG;gBACxD,aAAa,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,WAAW,EAAE;gBACzC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,WAAW,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE;gBACzH,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;gBACnD,WAAW,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;gBACrD,kBAAkB,EAAE,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,yBAAyB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACjH,cAAc,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACrG,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC7E,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACvE,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACtF,kBAAkB,EAAE,IAAI;gBACxB,kBAAkB,EAAE,EAAE;gBACtB,MAAM,EAAE,EAAE;gBACV,0BAA0B,EAAE,EAAE;gBAC9B,OAAO,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC;gBAC9B,KAAK,EAAE,EAAE;gBACT,mBAAmB,EAAE,SAAS;gBAC9B,mBAAmB,EAAE,EAAE;aACxB,CAAC;QAEJ,sCAAsC;QACtC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAElB,CAAC;IAKD,6CAAK,GAAL;QACE,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;IAC3J,CAAC;IAED,2CAAG,GAAH;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC;IACvC,CAAC;IAED,6CAAK,GAAL;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC;IACvC,CAAC;IAED,4CAAI,GAAJ;QACE,OAAO,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC;IAC9C,CAAC;IAED,qDAAa,GAAb,UAAc,GAAW;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;IACxC,CAAC;IA1RU,6BAA6B;QALzC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YACrC,sMAAqD;;SAEtD,CAAC;+EAoHwB,0DAAW;YACR,yGAAe;YAChB,uGAAc;YACtB,sDAAM;OAtHb,6BAA6B,CA8RzC;IAAD,oCAAC;CAAA;AA9RyC;;;;;;;;;;;;;;;;;;;ACjCC;AAEO;AAOlD;IAEE,+BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAEpC,yCAAyC;QACzC,QAAG,GAAG,uCAAuC,CAAC;IAHN,CAAC;IAKlC,8CAAc,GAArB,UAAsB,YAAoB;QACxC,IAAI,QAAQ,GAAQ;YAClB,oBAAoB,EAAE,GAAG;YACzB,cAAc,EAAE,YAAY;SAC7B;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACjD,CAAC;IAbU,qBAAqB;QAHjC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,qBAAqB,CAcjC;IAAD,4BAAC;CAAA;AAdiC;;;;;;;;;;;;ACTlC,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;;;;ACA/D,wBAAwB;AAC0B;AACO;AAKzD,0BAA0B;AAC1B,mBAAmB;AAEnB,iBAAiB;AAC2E;AACF;AACJ;AAGnC;AACwC;AAQ3F;IAQE,iCAAoB,eAAgC,EAC1C,KAAqB,EACrB,cAA8B,EAC9B,KAAmB,EACnB,MAAc,EACZ,eAAgC,EAClC,aAAoC;QAN1B,oBAAe,GAAf,eAAe,CAAiB;QAC1C,UAAK,GAAL,KAAK,CAAgB;QACrB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAc;QACnB,WAAM,GAAN,MAAM,CAAQ;QACZ,oBAAe,GAAf,eAAe,CAAiB;QAClC,kBAAa,GAAb,aAAa,CAAuB;IAG9C,CAAC;IAED,0CAAQ,GAAR;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACrE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACvC,iGAAiG;QACjG,IAAI,CAAC,gBAAgB,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,aAAa,EAAE,mBAAmB,CAAC,CAAC;QAEzF,qBAAqB;QACrB,IAAI,CAAC,oBAAoB,GAAG;YAC1B,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,MAAM;YACb,IAAI,EAAE,kDAAkD;YACxD,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,6BAA6B;YAChD,gBAAgB,EAAE,QAAQ;YAC1B,kBAAkB,EAAE,iBAAiB;YACrC,iBAAiB,EAAE,cAAc;SAClC;IACL,CAAC;IAED,+CAAa,GAAb;QAAA,iBAIC;QAHC,IAAI,CAAC,eAAe;aACjB,eAAe,EAAE;aACjB,SAAS,CAAC,oBAAU,IAAI,YAAI,CAAC,UAAU,GAAG,UAAU,EAA5B,CAA4B,CAAC,CAAC;IAC3D,CAAC;IAED,gDAAc,GAAd,UAAe,YAAoB;QACjC,uBAAuB;QACvB,gCAAgC;QAChC,0DAA0D;QAC1D,gCAAgC;QAChC,mCAAmC;QACnC,oBAAoB;QACpB,8EAA8E;QAC9E,SAAS;QACT,wCAAwC;QACxC,mCAAmC;QACnC,oBAAoB;QACpB,8EAA8E;QAC9E,wCAAwC;QACxC,iBAAiB;QACjB,yCAAyC;QACzC,0BAA0B;QAC1B,2BAA2B;QAC3B,iCAAiC;QACjC,UAAU;QACV,SAAS;QACT,MAAM;QACN,MAAM;QAtBR,iBAiDC;QAzBC,IAAI,CAAC,aAAa;aACjB,cAAc,CAAC,YAAY,CAAC;aAC5B,SAAS,CAAC,oBAAU;YACnB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBACxB,KAAI,CAAC,cAAc,CAAC,OAAO,CACzB,SAAS,EACT,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,0BAA0B,CACtE,CAAC;aACH;iBAAM,IAAG,UAAU,CAAC,MAAM,IAAI,CAAC,EAAE;gBAChC,KAAI,CAAC,cAAc,CAAC,OAAO,CACzB,SAAS,EACT,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,yBAAyB,CAAC,CAAC;aACxE;iBAAM,IAAG,UAAU,CAAC,MAAM,IAAI,CAAC,EAAE;gBAChC,KAAI,CAAC,KAAK;qBACT,MAAM,CAAC,KAAI,CAAC,oBAAoB,CAAC;qBACjC,IAAI,CAAC,UAAC,MAAM;oBACX,IAAG,MAAM,CAAC,KAAK,EAAE;wBACf,KAAI,CAAC,cAAc,EAAE,CAAC;qBACvB;gBACH,CAAC,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gDAAc,GAAd;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,8CAAY,GAAZ;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,mBAAmB,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,eAAe,CAAC,mBAAmB,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,eAAK,IAAI,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAAC,CAAC;QAChG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,mBAAmB,EAAE,CAAC,CAAC;IAC1D,CAAC;IAvGU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,oLAA+C;;SAEhD,CAAC;+EASqC,yGAAe;YACnC,8DAAc;YACL,uGAAc;YACvB,mGAAY;YACX,sDAAM;YACK,gEAAe;YACnB,sGAAqB;OAdnC,uBAAuB,CAwGnC;IAAD,8BAAC;CAAA;AAxGmC;;;;;;;;;;;;;;;;;;;;;;;ACxBpC,wBAAwB;AAC8E;AAEtG,yBAAyB;AAC4B;AAMrD,iBAAiB;AACyE;AACvC;AAGmB;AACkB;AAExF,4BAA4B;AAS5B;IAKE,uBAAoB,cAA8B,EAAY,eAAgC,EAAU,aAAmC,EAAU,aAA4B;QAA7J,mBAAc,GAAd,cAAc,CAAgB;QAAY,oBAAe,GAAf,eAAe,CAAiB;QAAU,kBAAa,GAAb,aAAa,CAAsB;QAAU,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAItL,gCAAQ,GAAR;QAAA,iBA4BC;QA3BC,IAAI,CAAC,cAAc,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC;QAC3D,IAAI,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,mBAAmB,EAAE,CAAC;QAC7D,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;QAC5C,iDAAiD;QACjD,6CAA6C;QAE7C,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,IAAI,CAClC,cAAI;YACF,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,KAAI,CAAC,eAAe,CAAC,mBAAmB,EAAE,CAAC,WAAW,CAAC,CAAC;YAC/F,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACjC,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,eAAe,CAAC,mBAAmB,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC;YACzE,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CACtD,iBAAO;gBACL,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,OAAO,CAAC,CAAC;gBACpD,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAC,OAAO,CAAC,SAAS,CAAC;gBAC1D,KAAI,CAAC,aAAa,CAAC,SAAS,GAAC,OAAO,CAAC,SAAS,CAAC;YAEjD,CAAC,CAEF;QACH,CAAC,CAEF,CAAC;IAEJ,CAAC;IAED,+BAAO,GAAP;QACE,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,iBAAiB,CAAC,CAAC;IAC7D,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,IAAI,CAClC,cAAI;YACF,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;YACpD,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,KAAI,CAAC,eAAe,CAAC,mBAAmB,EAAE,CAAC,WAAW,CAAC,CAAC;YAC/F,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,KAAI,CAAC,eAAe,CAAC,mBAAmB,EAAE,CAAC,aAAa,CAAC,CAAC;YACnG,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,KAAI,CAAC,eAAe,CAAC,mBAAmB,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACpG,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,eAAe,CAAC,mBAAmB,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC;QAC3E,CAAC,CACF,CAAC;IACJ,CAAC;IAED,uCAAe,GAAf;QAAA,iBAiBC;QAhBC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,IAAI,CAClC,cAAI;YACF,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACjC,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,eAAe,CAAC,mBAAmB,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC;YACzE,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CACtD,iBAAO;gBACL,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,OAAO,CAAC,CAAC;gBACpD,KAAI,CAAC,aAAa,CAAC,SAAS,GAAC,WAAW,CAAC;YAE3C,CAAC,CAEF;QACH,CAAC,CAEF,CAAC;IACJ,CAAC;IArEsD;QAAtD,+DAAS,CAAC,kEAAuB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;wEAAiB,kEAAuB;yDAAC;IAHpF,aAAa;QAPzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,mJAAoC;SAGrC,CAAC;+EAOoC,uGAAc,EAA6B,gEAAe,EAAyB,mFAAoB,EAAyB,qGAAa;OALtK,aAAa,CA0EzB;IAAD,oBAAC;CAAA;AA1EyB;;;;;;;;;;;;;;;;;;;;;;;;;AC5BmC;AAER;AACkB;AAEmB;AACJ;AACnC;AAEU;AAChB;AAM7C;IAWE,uBAAoB,cAA8B,EACxC,YAA0B,EAC1B,MAAc,EACd,eAAgC,EAChC,IAAU,EACV,SAAoB;QAL9B,iBAmCC;QAnCmB,mBAAc,GAAd,cAAc,CAAgB;QACxC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAChC,SAAI,GAAJ,IAAI,CAAM;QACV,cAAS,GAAT,SAAS,CAAW;QAf9B,cAAS,GAAG,cAAc,CAAC;QAC3B,aAAQ,GAAG,KAAK,CAAC;QACjB,aAAQ,GAAU,IAAI,CAAC;QAIvB,qBAAgB,GAAG,KAAK,CAAC;QAWvB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,eAAK;YACzB,IAAG,KAAK,YAAY,6DAAa,EAAE;gBACjC,YAAY,CAAC,KAAK,EAAE,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;QAEH,2DAA2D;QAC3D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACnB,6GAA6G;QAC7G,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACtB,kGAAkG;QAClG,IAAI,CAAC,aAAa,CAAC,sEAAwB,CAAC,CAAC;QAE7C,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,cAAM,YAAI,CAAC,SAAS,GAAG,iBAAiB,EAAlC,CAAkC,CAAC,CAAC;QACnE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;YACvB,KAAI,CAAC,SAAS,GAAG,YAAY,CAAC;YAC9B,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,KAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,cAAM,YAAI,CAAC,SAAS,GAAG,oBAAoB,EAArC,CAAqC,CAAC,CAAC;QACxE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,UAAC,SAAS,IAAK,YAAI,CAAC,SAAS,GAAG,uBAAuB,GAAG,SAAS,GAAG,WAAW,EAAlE,CAAkE,CAAC,CAAC;QAEnH,uCAAuC;QACvC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAEvB,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,cAAM,YAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,EAAE,EAA1B,CAA0B,CAAC,CAAC;QAE7D,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAEK,gCAAQ,GAAd;;;gBACE,IAAI,CAAC,cAAc,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC;;;;KAC5D;IAEK,gCAAQ,GAAd;;;;4BACE,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;;wBAAnC,SAAmC,CAAC;;;;;KACrC;IAED,6BAAK,GAAL;QACE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAnDoD;QAApD,+DAAS,CAAC,kEAAuB,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC;wEAAiB,kEAAuB;yDAAC;IATlF,aAAa;QAJzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,8IAAoC;SACrC,CAAC;+EAYoC,uGAAc;YAC1B,mGAAY;YAClB,sDAAM;YACG,gEAAe;YAC1B,kDAAI;YACC,4DAAS;OAhBnB,aAAa,CA6DzB;IAAD,oBAAC;CAAA;AA7DyB;;;;;;;;;;;;AChB1B,+DAA+D,mK;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,yCAAQ,GAAR;IACA,CAAC;IALU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,4KAA8C;;SAE/C,CAAC;;OACW,sBAAsB,CAOlC;IAAD,6BAAC;CAAA;AAPkC;;;;;;;;;;;;;;;;;;;ACPQ;AACwC;AAEnF,SAAS,SAAS,CAAC,KAAa;IAC5B,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;QACjB,OAAO,OAAI,KAAO,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KAChC;SAAM;QACH,OAAO,EAAE,CAAC;KACb;AACL,CAAC;AAED,SAAS,QAAQ,CAAC,KAAU;IACxB,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;AACpC,CAAC;AAED,SAAS,SAAS,CAAC,KAAU;IACzB,OAAO,QAAQ,CAAC,KAAG,KAAO,EAAE,EAAE,CAAC,CAAC;AACpC,CAAC;AAID;IAA8C,kFAAsB;IAApE;;IAwBA,CAAC;IAvBG,wCAAK,GAAL,UAAM,KAAa;QACf,IAAI,KAAK,EAAE;YACP,IAAM,SAAS,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC1C,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;gBAClD,OAAO,EAAC,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAC,CAAC;aAClE;iBAAM,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;gBACnF,OAAO,EAAC,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAC,CAAC;aACrF;iBAAM,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC7G,OAAO,EAAC,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC;aACxG;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,yCAAM,GAAN,UAAO,IAAmB;QACtB,IAAI,UAAU,GAAW,EAAE,CAAC;QAC5B,IAAG,IAAI,EAAE;YACL,UAAU,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;YACtE,UAAU,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;YAClE,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC;SAC3B;QACD,OAAO,UAAU,CAAC;IACtB,CAAC;IAvBQ,wBAAwB;QADpC,gEAAU,EAAE;OACA,wBAAwB,CAwBpC;IAAD,+BAAC;CAAA,CAxB6C,iFAAsB,GAwBnE;AAxBoC;;;;;;;;;;;;;;;;;;ACrBa;AAOlD;IAEE;IAAgB,CAAC;IAEjB,sCAAQ,GAAR;IACA,CAAC;IALU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,sKAA4C;SAE7C,CAAC;;OACW,mBAAmB,CAO/B;IAAD,0BAAC;CAAA;AAP+B;;;;;;;;;;;;;;;;;;;;;ACPkB;AACK;AACJ;AACqC;AAOxF;IAEE,4BAAoB,MAAc,EAAU,eAAgC,EAAS,aAA4B;QAAjH,iBAcC;QAdmB,WAAM,GAAN,MAAM,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAS,kBAAa,GAAb,aAAa,CAAe;QAC/G,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,gBAAgB,GAAG;YAChD,OAAO,KAAK,CAAC;QAChB,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,GAAG;YAC9B,IAAI,GAAG,YAAY,6DAAa,EAAE;gBAC/B,KAAI,CAAC,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;gBAC9B,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACrC,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;IAChD,CAAC;IAED,2CAAc,GAAd;QACE,IAAI,YAAY,GAAsB,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAE,CAAC,KAAK,CAAC;QACnF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAAwB,YAAc,CAAC,CAAC;IAChE,CAAC;IAEK,qCAAQ,GAAd;;;;4BACE,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;;wBAAnC,SAAmC,CAAC;;;;;KACrC;IA7BU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,mKAA2C;SAE5C,CAAC;+EAG4B,sDAAM,EAA2B,gEAAe,EAAwB,qGAAa;OAFtG,kBAAkB,CA+B9B;IAAD,yBAAC;CAAA;AA/B8B;;;;;;;;;;;;;ACL/B;AAAA;AAAA,IAAI,cAAc,GAAmB;IACnC,GAAG,EAAE,yCAAyC;IAC9C,KAAK,EAAE,aAAa;IACpB,QAAQ,EAAE,QAAQ;IAClB,qCAAqC;IACrC,mBAAmB;IACnB,4BAA4B;CAC7B,CAAC;AAEK,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,IAAI,EAAE,EAAC,cAAc,EAAE,sEAAsE,EAAC;IAC9F,QAAQ,EAAE,cAAc;CACzB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AC3BnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAGD,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\">Edit Claimant Details</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n\\r\\n\\r\\n\\r\\n  <form [formGroup]=\\\"profileForm\\\" class=\\\"form-horizontal\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <!-- Address Line 1 -->\\r\\n      <div class=\\\"col-xs-12 col-md-12\\\">\\r\\n          <label for=\\\"addressLine1\\\" class=\\\"col-xs-12 head control-label\\\">\\r\\n              <span class = \\\"text-danger\\\">*</span>Address Line 1:\\r\\n          </label>\\r\\n          <div [class] = \\\"profileForm.controls['addressLine1'].invalid && profileForm.controls['addressLine1'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n            <input [class] = \\\"profileForm.controls['addressLine1'].invalid && profileForm.controls['addressLine1'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            type = \\\"text\\\"\\r\\n            [placeholder] = \\\"profileForm.controls['addressLine1'].invalid? '(Required)' : '' \\\"\\r\\n            [(ngModel)] = \\\"updateClaimantAddress.addressLine1\\\"\\r\\n            formControlName = \\\"addressLine1\\\">\\r\\n\\r\\n            <span *ngIf = \\\"profileForm.controls['addressLine1'].invalid && profileForm.controls['addressLine1'].touched\\\"\\r\\n          class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n          aria-hidden = \\\"true\\\">\\r\\n        </span>\\r\\n\\r\\n        <div class = \\\"text-danger\\\">\\r\\n          <val-errors controlName = \\\"addressLine1\\\">\\r\\n            <ng-template valError = \\\"required\\\">\\r\\n              <p class = \\\"ng-scope\\\">\\r\\n                <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                Please enter a valid Address Line 1.\\r\\n              </p>\\r\\n            </ng-template>\\r\\n          </val-errors>\\r\\n        </div>\\r\\n\\r\\n          </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- Address Line 2 -->\\r\\n      <div class=\\\"col-xs-12 col-md-12\\\">\\r\\n          <label for=\\\"addressLine2\\\" class=\\\"col-xs-12 head control-label\\\">\\r\\n              <span class = \\\"text-danger\\\">*</span>Address Line 2:\\r\\n          </label>\\r\\n          <div [class] = \\\"profileForm.controls['addressLine2'].invalid && profileForm.controls['addressLine2'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n            <input [class] = \\\"profileForm.controls['addressLine2'].invalid && profileForm.controls['addressLine2'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            type = \\\"text\\\"\\r\\n            [placeholder] = \\\"profileForm.controls['addressLine2'].invalid? '(Required)' : '' \\\"\\r\\n            [(ngModel)] = \\\"updateClaimantAddress.addressLine2\\\"\\r\\n            formControlName = \\\"addressLine2\\\">\\r\\n\\r\\n            <span *ngIf = \\\"profileForm.controls['addressLine2'].invalid && profileForm.controls['addressLine2'].touched\\\"\\r\\n          class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n          aria-hidden = \\\"true\\\">\\r\\n        </span>\\r\\n\\r\\n        <div class = \\\"text-danger\\\">\\r\\n          <val-errors controlName = \\\"addressLine2\\\">\\r\\n            <ng-template valError = \\\"required\\\">\\r\\n              <p class = \\\"ng-scope\\\">\\r\\n                <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                Please enter a valid Address Line 2.\\r\\n              </p>\\r\\n            </ng-template>\\r\\n          </val-errors>\\r\\n        </div>\\r\\n\\r\\n          </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- City and State -->\\r\\n      <div class=\\\"col-xs-12 col-md-12\\\">\\r\\n        <div class=\\\"col-xs-12 col-md-6\\\">\\r\\n          <label for=\\\"city\\\" class=\\\"col-xs-12 head control-label\\\">\\r\\n              <span class = \\\"text-danger\\\">*</span>City:\\r\\n          </label>\\r\\n          <div [class] = \\\"profileForm.controls['city'].invalid && profileForm.controls['city'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n            <input [class] = \\\"profileForm.controls['city'].invalid && profileForm.controls['city'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            type = \\\"text\\\"\\r\\n            [placeholder] = \\\"profileForm.controls['city'].invalid? '(Required)' : '' \\\"\\r\\n            [(ngModel)] = \\\"updateClaimantAddress.city\\\" \\r\\n            formControlName = \\\"city\\\">\\r\\n\\r\\n            <span *ngIf = \\\"profileForm.controls['city'].invalid && profileForm.controls['city'].touched\\\"\\r\\n            class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n            aria-hidden = \\\"true\\\"></span>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n            <val-errors controlName = \\\"city\\\">\\r\\n              <ng-template valError = \\\"required\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Please enter a valid City.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n            </val-errors>\\r\\n          </div>\\r\\n          \\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-12 col-md-6\\\">\\r\\n          <label class=\\\"col-xs-12 head control-label\\\">\\r\\n              <span class = \\\"text-danger\\\">*</span>State:\\r\\n          </label>\\r\\n          <div\\r\\n            [class]=\\\"profileForm.controls['state'].invalid && profileForm.controls['state'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n            <!-- FORM INPUT -->\\r\\n            <select\\r\\n              [class]=\\\"profileForm.controls['state'].invalid && profileForm.controls['state'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n              formControlName=\\\"state\\\" [compareWith]=\\\"compareFn\\\" [(ngModel)]=\\\"updateClaimantAddress.state\\\">\\r\\n              <option value=\\\"\\\" disabled=true>{{updateClaimantAddress.state}}</option>\\r\\n              <option [value]=\\\"choice\\\" *ngFor=\\\"let choice of stateChoices\\\">{{choice}}</option>\\r\\n            </select>\\r\\n\\r\\n            <!-- ERROR   -->\\r\\n            <span *ngIf=\\\"profileForm.controls['state'].invalid && profileForm.controls['state'].touched\\\"\\r\\n              class=\\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <div *ngIf=\\\"profileForm.controls['state'].invalid && profileForm.controls['state'].touched\\\"\\r\\n              class=\\\"text-danger\\\">\\r\\n\\r\\n              <!-- ERROR LIST -->\\r\\n\\r\\n              <p *ngIf=\\\"profileForm.controls['state'].invalid\\\" class=\\\"ng-scope\\\">\\r\\n                <span class=\\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                Please enter a valid State.\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- Zip Code and Zip Code Extension -->\\r\\n      <div class=\\\"col-xs-12 col-md-12\\\">\\r\\n        <div class=\\\"col-xs-12 col-md-6\\\">\\r\\n          <label for=\\\"zipCode\\\" class=\\\"col-xs-12 head control-label\\\">\\r\\n              <span class = \\\"text-danger\\\">*</span>Zip Code:\\r\\n          </label>\\r\\n          <div [class] = \\\"profileForm.controls['zipCode'].invalid && profileForm.controls['zipCode'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n            <input [class] = \\\"profileForm.controls['zipCode'].invalid && profileForm.controls['zipCode'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            type = \\\"text\\\"\\r\\n            [placeholder] = \\\"profileForm.controls['zipCode'].invalid? '(Required)' : '' \\\"\\r\\n            [(ngModel)] = \\\"updateClaimantAddress.zipCode\\\"\\r\\n            formControlName = \\\"zipCode\\\">\\r\\n\\r\\n            <span *ngIf = \\\"profileForm.controls['zipCode'].invalid && profileForm.controls['zipCode'].touched\\\"\\r\\n            class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n            aria-hidden = \\\"true\\\"></span>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n            <val-errors controlName = \\\"zipCode\\\">\\r\\n              <ng-template valError = \\\"required\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Please enter a valid Zip Code.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n            </val-errors>\\r\\n          </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-12 col-md-6\\\">\\r\\n          <label for=\\\"zipExt\\\" class=\\\"col-xs-12 head control-label\\\">Zip Code Extension:\\r\\n          </label>\\r\\n          <div class=\\\"col-xs-12 has-feedback\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control edit_field\\\" [(ngModel)]=\\\"updateClaimantAddress.zipExt\\\"\\r\\n              formControlName=\\\"zipExt\\\" placeholder=\\\"{{updateClaimantAddress.zipExt}}\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateClaimantDetails()\\\">Submit</button>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"close()\\\">Cancel</button>\\r\\n</div>\"","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\">Edit Claimant Details</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <form [formGroup]=\\\"profileForm\\\" class=\\\"form-horizontal\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n\\r\\n      <!-- SSN and Alternate ClaimantID -->\\r\\n      <div class=\\\"col-xs-12 no-padding\\\">\\r\\n        <div class=\\\"col-xs-12 col-md-6\\\">\\r\\n          <label class=\\\"col-xs-12 head control-label\\\">\\r\\n            SSN:\\r\\n          </label>\\r\\n          <div class=\\\"col-xs-12 has-feedback\\\">\\r\\n            <!-- FORM INPUT -->\\r\\n            <input class=\\\"field\\\" type=\\\"text\\\" [(ngModel)]=\\\"claimantProfileCopy.ssn\\\" formControlName=\\\"ssn\\\"\\r\\n              readonly=\\\"readonly\\\" placeholder=\\\"{{claimantProfileCopy.ssn}}\\\">\\r\\n          </div>\\r\\n          <div *ngIf=\\\"debug==true\\\">\\r\\n            <br>\\r\\n            DEBUG: model.ssn content: {{claimantProfileCopy.ssn}}\\r\\n            <br>\\r\\n            DEBUG: profileForm status: {{profileForm.status}}\\r\\n            <br>\\r\\n            DEBUG: profileForm dirty: {{profileForm.dirty}}\\r\\n            <br>\\r\\n            DEBUG: profileForm touched: {{profileForm.touched}}\\r\\n            <br>\\r\\n            DEBUG: model content: {{ claimantProfileCopy | json }}\\r\\n            <br>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-12 col-md-6\\\">\\r\\n          <label class=\\\"col-xs-12 head control-label\\\">\\r\\n            Alternate ClaimantID:\\r\\n          </label>\\r\\n          <div class=\\\"col-xs-12 has-feedback\\\">\\r\\n            <!-- FORM INPUT -->\\r\\n            <input class=\\\"field\\\" type=\\\"text\\\" [(ngModel)]=\\\"claimantProfileCopy.alternateClaimantId\\\"\\r\\n              formControlName=\\\"alternateClaimantId\\\" readonly=\\\"readonly\\\"\\r\\n              placeholder=\\\"{{claimantProfileCopy.alternateClaimantId}}\\\">\\r\\n          </div>\\r\\n          <div *ngIf=\\\"debug==true\\\">\\r\\n            <br>\\r\\n            DEBUG: model.alternateClaimantId content: {{claimantProfileCopy.alternateClaimantId}}\\r\\n            <br>\\r\\n            DEBUG: profileForm status: {{profileForm.status}}\\r\\n            <br>\\r\\n            DEBUG: profileForm dirty: {{profileForm.dirty}}\\r\\n            <br>\\r\\n            DEBUG: profileForm touched: {{profileForm.touched}}\\r\\n            <br>\\r\\n            DEBUG: model content: {{ claimantProfileCopy | json }}\\r\\n            <br>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- First Name and Last Name -->\\r\\n      <div class=\\\"col-xs-12 no-padding\\\">\\r\\n        <div class=\\\"col-xs-12 col-md-6\\\">\\r\\n          <label class=\\\"col-xs-12 head control-label\\\">\\r\\n            First Name:\\r\\n          </label>\\r\\n          <div class=\\\"col-xs-12 has-feedback\\\">\\r\\n            <!-- FORM INPUT -->\\r\\n            <input class=\\\"field\\\" type=\\\"text\\\" [(ngModel)]=\\\"claimantProfileCopy.firstName\\\" formControlName=\\\"firstName\\\"\\r\\n              readonly=\\\"readonly\\\" placeholder=\\\"{{claimantProfileCopy.firstName}}\\\">\\r\\n          </div>\\r\\n          <div *ngIf=\\\"debug==true\\\">\\r\\n            <br>\\r\\n            DEBUG: model.firstName content: {{claimantProfileCopy.firstName}}\\r\\n            <br>\\r\\n            DEBUG: profileForm status: {{profileForm.status}}\\r\\n            <br>\\r\\n            DEBUG: profileForm dirty: {{profileForm.dirty}}\\r\\n            <br>\\r\\n            DEBUG: profileForm touched: {{profileForm.touched}}\\r\\n            <br>\\r\\n            DEBUG: model content: {{ claimantProfileCopy | json }}\\r\\n            <br>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-12 col-md-6\\\">\\r\\n          <label class=\\\"col-xs-12 head control-label\\\">\\r\\n            Last Name:\\r\\n          </label>\\r\\n          <div class=\\\"col-xs-12 has-feedback\\\">\\r\\n            <!-- FORM INPUT -->\\r\\n            <input class=\\\"field\\\" type=\\\"text\\\" [(ngModel)]=\\\"claimantProfileCopy.lastName\\\" formControlName=\\\"lastName\\\"\\r\\n              readonly=\\\"readonly\\\" placeholder=\\\"{{claimantProfileCopy.lastName}}\\\">\\r\\n          </div>\\r\\n          <div *ngIf=\\\"debug==true\\\">\\r\\n            <br>\\r\\n            DEBUG: model.lastName content: {{claimantProfileCopy.lastName}}\\r\\n            <br>\\r\\n            DEBUG: profileForm status: {{profileForm.status}}\\r\\n            <br>\\r\\n            DEBUG: profileForm dirty: {{profileForm.dirty}}\\r\\n            <br>\\r\\n            DEBUG: profileForm touched: {{profileForm.touched}}\\r\\n            <br>\\r\\n            DEBUG: model content: {{ claimantProfileCopy | json }}\\r\\n            <br>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- Middle Initial and Home Phone -->\\r\\n      <div class=\\\"col-xs-12 no-padding\\\">\\r\\n        <div class=\\\"col-xs-12 col-md-6\\\">\\r\\n          <label class=\\\"col-xs-12 head control-label\\\">\\r\\n              <span class = \\\"text-danger\\\">*</span>Middle Initial:\\r\\n          </label>\\r\\n          <div [class]=\\\"profileForm.controls['middleInitial'].invalid && profileForm.controls['middleInitial'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n            <!-- FORM INPUT -->\\r\\n            <input [class]=\\\"profileForm.controls['middleInitial'].invalid && profileForm.controls['middleInitial'].touched ? 'edit_field error': 'edit_field'\\\" type=\\\"text\\\" [(ngModel)]=\\\"claimantProfileCopy.middleInitial\\\"\\r\\n              formControlName=\\\"middleInitial\\\" [placeholder] = \\\"profileForm.controls['middleInitial'].invalid? '(Required)' : '' \\\">\\r\\n\\r\\n            <span *ngIf = \\\"profileForm.controls['middleInitial'].invalid && profileForm.controls['middleInitial'].touched\\\"\\r\\n              class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n              aria-hidden = \\\"true\\\">\\r\\n            </span>\\r\\n\\r\\n              <div class = \\\"text-danger\\\">\\r\\n                  <val-errors controlName = \\\"middleInitial\\\">\\r\\n                    <ng-template valError = \\\"maxlength\\\">\\r\\n                      <p class = \\\"ng-scope\\\">\\r\\n                        <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                        Middle Initial can only have a maximum of 1 letter\\r\\n                      </p>\\r\\n                    </ng-template>\\r\\n      \\r\\n                    <ng-template valError = \\\"pattern\\\">\\r\\n                      <p class = \\\"ng-scope\\\">\\r\\n                        <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                        Only a letter can be entered as a middle initial\\r\\n                      </p>\\r\\n                    </ng-template>\\r\\n                  </val-errors>\\r\\n                </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-12 col-md-6\\\">\\r\\n          <label for=\\\"homePhone\\\" class=\\\"col-xs-12 head control-label\\\">\\r\\n            <span class = \\\"text-danger\\\">*</span>Home Phone:\\r\\n          </label>\\r\\n          <div [class] = \\\"profileForm.controls['homePhone'].invalid && profileForm.controls['homePhone'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n            <input [class] = \\\"profileForm.controls['homePhone'].invalid && profileForm.controls['homePhone'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            type = \\\"text\\\"\\r\\n            [placeholder] = \\\"profileForm.controls['homePhone'].invalid? '(000) 000-000 (Required)' : '' \\\"\\r\\n            [(ngModel)] = \\\"claimantProfileCopy.homePhone\\\"\\r\\n            formControlName = \\\"homePhone\\\"\\r\\n            mask = \\\"(000) 000-0000\\\">\\r\\n          </div>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n              <val-errors controlName = \\\"homePhone\\\">\\r\\n                <ng-template valError = \\\"pattern\\\">\\r\\n                  <p class = \\\"ng-scope\\\">\\r\\n                    <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                    Only numbers are allowed to be inputted in this field.\\r\\n                  </p>\\r\\n                </ng-template>\\r\\n              </val-errors>\\r\\n            </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- Mobile Phone  & Language Preference div -->\\r\\n      <div class=\\\"col-xs-12 no-padding\\\">\\r\\n\\r\\n        <div class=\\\"col-xs-12 col-md-6\\\">\\r\\n          <label for=\\\"mobilePhone\\\" class=\\\"col-xs-12 head control-label\\\">Mobile Phone:\\r\\n          </label>\\r\\n          <div class=\\\"col-xs-12 has-feedback\\\">\\r\\n            <input type = \\\"text\\\"\\r\\n            class = \\\"form-control edit_field\\\"\\r\\n            [(ngModel)] = \\\"claimantProfileCopy.mobilePhone\\\"\\r\\n            formControlName = \\\"mobilePhone\\\"\\r\\n            placeholder = \\\"(000) 000-000\\\"\\r\\n            mask = \\\"(000) 000-0000\\\">\\r\\n          </div>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n              <val-errors controlName = \\\"mobilePhone\\\">\\r\\n                <ng-template valError = \\\"pattern\\\">\\r\\n                  <p class = \\\"ng-scope\\\">\\r\\n                    <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                    Only numbers are allowed to be inputted in this field.\\r\\n                  </p>\\r\\n                </ng-template>\\r\\n              </val-errors>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-xs-12 col-md-6\\\">\\r\\n          <label class=\\\"col-xs-12 head control-label\\\">\\r\\n              <span class = \\\"text-danger\\\">*</span>Language Preference:\\r\\n          </label>\\r\\n          <div\\r\\n            [class]=\\\"profileForm.controls['languagePreference'].invalid && profileForm.controls['languagePreference'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n            <!-- FORM INPUT -->\\r\\n            <select\\r\\n              [class]=\\\"profileForm.controls['languagePreference'].invalid && profileForm.controls['languagePreference'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n              formControlName=\\\"languagePreference\\\" [compareWith]=\\\"compareFn\\\"\\r\\n              [(ngModel)]=\\\"claimantProfileCopy.languagePreference\\\">\\r\\n              <option value=\\\"\\\" disabled=true>{{claimantProfileCopy.languagePreference}}</option>\\r\\n              <option [value]=\\\"choice\\\" *ngFor=\\\"let choice of languagePreferenceChoices\\\">{{choice}}</option>\\r\\n            </select>\\r\\n\\r\\n            <!-- ERROR   -->\\r\\n            <span\\r\\n              *ngIf=\\\"profileForm.controls['languagePreference'].invalid && profileForm.controls['languagePreference'].touched\\\"\\r\\n              class=\\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <div\\r\\n              *ngIf=\\\"profileForm.controls['languagePreference'].invalid && profileForm.controls['languagePreference'].touched\\\"\\r\\n              class=\\\"text-danger\\\">\\r\\n\\r\\n              <!-- ERROR LIST -->\\r\\n\\r\\n              <p *ngIf=\\\"profileForm.controls['languagePreference'].invalid\\\" class=\\\"ng-scope\\\">\\r\\n                <span class=\\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                Please enter a valid Language Preference.\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <!-- Education Level & Gender div -->\\r\\n      <div class=\\\"col-xs-12 no-padding\\\">\\r\\n        <div class=\\\"col-xs-12 col-md-6\\\">\\r\\n          <label class=\\\"col-xs-12 head control-label\\\">\\r\\n              <span class = \\\"text-danger\\\">*</span>Education Level:\\r\\n          </label>\\r\\n          <div\\r\\n            [class]=\\\"profileForm.controls['educationLevel'].invalid && profileForm.controls['educationLevel'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n            <!-- FORM INPUT -->\\r\\n            <select\\r\\n              [class]=\\\"profileForm.controls['educationLevel'].invalid && profileForm.controls['educationLevel'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n              formControlName=\\\"educationLevel\\\" [compareWith]=\\\"compareFn\\\"\\r\\n              [(ngModel)]=\\\"claimantProfileCopy.educationLevel\\\">\\r\\n              <option value=\\\"\\\" disabled=true>{{claimantProfileCopy.educationLevel}}</option>\\r\\n              <option [value]=\\\"choice\\\" *ngFor=\\\"let choice of educationLevelChoices\\\">{{choice}}</option>\\r\\n            </select>\\r\\n\\r\\n            <!-- ERROR   -->\\r\\n            <span\\r\\n              *ngIf=\\\"profileForm.controls['educationLevel'].invalid && profileForm.controls['educationLevel'].touched\\\"\\r\\n              class=\\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <div\\r\\n              *ngIf=\\\"profileForm.controls['educationLevel'].invalid && profileForm.controls['educationLevel'].touched\\\"\\r\\n              class=\\\"text-danger\\\">\\r\\n\\r\\n              <!-- ERROR LIST -->\\r\\n\\r\\n              <p *ngIf=\\\"profileForm.controls['educationLevel'].invalid\\\" class=\\\"ng-scope\\\">\\r\\n                <span class=\\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                Please enter a valid Education Level.\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-xs-12 col-md-6\\\">\\r\\n          <label class=\\\"col-xs-12 head control-label\\\">\\r\\n              <span class = \\\"text-danger\\\">*</span>Gender:\\r\\n          </label>\\r\\n          <div\\r\\n            [class]=\\\"profileForm.controls['gender'].invalid && profileForm.controls['gender'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n            <!-- FORM INPUT -->\\r\\n            <select\\r\\n              [class]=\\\"profileForm.controls['gender'].invalid && profileForm.controls['gender'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n              formControlName=\\\"gender\\\" [compareWith]=\\\"compareFn\\\" [(ngModel)]=\\\"claimantProfileCopy.gender\\\">\\r\\n              <option value=\\\"\\\" disabled=true>{{claimantProfileCopy.gender}}</option>\\r\\n              <option [value]=\\\"choice\\\" *ngFor=\\\"let choice of genderChoices\\\">{{choice}}</option>\\r\\n            </select>\\r\\n\\r\\n            <!-- ERROR   -->\\r\\n            <span *ngIf=\\\"profileForm.controls['gender'].invalid && profileForm.controls['gender'].touched\\\"\\r\\n              class=\\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <div *ngIf=\\\"profileForm.controls['gender'].invalid && profileForm.controls['gender'].touched\\\"\\r\\n              class=\\\"text-danger\\\">\\r\\n\\r\\n              <!-- ERROR LIST -->\\r\\n\\r\\n              <p *ngIf=\\\"profileForm.controls['gender'].invalid\\\" class=\\\"ng-scope\\\">\\r\\n                <span class=\\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                Please enter a valid Gender.\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <!-- Race & Ethnicity div -->\\r\\n      <div class=\\\"col-xs-12 no-padding\\\">\\r\\n        <div class=\\\"col-xs-12 col-md-6\\\">\\r\\n          <label class=\\\"col-xs-12 head control-label\\\">\\r\\n              <span class = \\\"text-danger\\\">*</span>Race:\\r\\n          </label>\\r\\n          <div\\r\\n            [class]=\\\"profileForm.controls['race'].invalid && profileForm.controls['race'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n            <!-- FORM INPUT -->\\r\\n            <select\\r\\n              [class]=\\\"profileForm.controls['race'].invalid && profileForm.controls['race'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n              formControlName=\\\"race\\\" [compareWith]=\\\"compareFn\\\" [(ngModel)]=\\\"claimantProfileCopy.race\\\">\\r\\n              <option value=\\\"\\\" disabled=true>{{claimantProfileCopy.race}}</option>\\r\\n              <option [value]=\\\"choice\\\" *ngFor=\\\"let choice of raceChoices\\\">{{choice}}</option>\\r\\n            </select>\\r\\n\\r\\n            <!-- ERROR   -->\\r\\n            <span *ngIf=\\\"profileForm.controls['race'].invalid && profileForm.controls['race'].touched\\\"\\r\\n              class=\\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <div *ngIf=\\\"profileForm.controls['race'].invalid && profileForm.controls['race'].touched\\\"\\r\\n              class=\\\"text-danger\\\">\\r\\n\\r\\n              <!-- ERROR LIST -->\\r\\n\\r\\n              <p *ngIf=\\\"profileForm.controls['race'].invalid\\\" class=\\\"ng-scope\\\">\\r\\n                <span class=\\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                Please enter a valid Race.\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-xs-12 col-md-6\\\">\\r\\n          <label class=\\\"col-xs-12 head control-label\\\">\\r\\n              <span class = \\\"text-danger\\\">*</span>Ethnicity:\\r\\n          </label>\\r\\n          <div\\r\\n            [class]=\\\"profileForm.controls['ethnicity'].invalid && profileForm.controls['ethnicity'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n            <!-- FORM INPUT -->\\r\\n            <select\\r\\n              [class]=\\\"profileForm.controls['ethnicity'].invalid && profileForm.controls['ethnicity'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n              formControlName=\\\"ethnicity\\\" [compareWith]=\\\"compareFn\\\" [(ngModel)]=\\\"claimantProfileCopy.ethnicity\\\">\\r\\n              <option value=\\\"\\\" disabled=true>{{claimantProfileCopy.ethnicity}}</option>\\r\\n              <option [value]=\\\"choice\\\" *ngFor=\\\"let choice of ethnicityChoices\\\">{{choice}}</option>\\r\\n            </select>\\r\\n\\r\\n            <!-- ERROR   -->\\r\\n            <span *ngIf=\\\"profileForm.controls['ethnicity'].invalid && profileForm.controls['ethnicity'].touched\\\"\\r\\n              class=\\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <div *ngIf=\\\"profileForm.controls['ethnicity'].invalid && profileForm.controls['ethnicity'].touched\\\"\\r\\n              class=\\\"text-danger\\\">\\r\\n\\r\\n              <!-- ERROR LIST -->\\r\\n\\r\\n              <p *ngIf=\\\"profileForm.controls['ethnicity'].invalid\\\" class=\\\"ng-scope\\\">\\r\\n                <span class=\\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                Please enter a valid Ethnicity.\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </form>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button type = \\\"submit\\\" class=\\\"btn btn-primary\\\"  (click)=\\\"updateClaimantDetails()\\\">Submit</button>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"close()\\\">Cancel</button>\\r\\n</div>\"","module.exports = \"<!-- <p><strong>{{idleState}}</strong></p>\\r\\n<p *ngIf=\\\"lastPing\\\"><small>Last keepalive ping <strong>{{lastPing | amTimeAgo}}</strong></small></p>\\r\\n<button (click)=\\\"reset()\\\" *ngIf=\\\"timedOut\\\">Restart</button> -->\\r\\n<router-outlet></router-outlet>\"","module.exports = \"<!--Footer Section (grey column container)-->\\r\\n<div class=\\\"col-xs-12 footer-section\\\" style=\\\"padding-right: 0px; padding-left: 0px;\\\">\\r\\n  <div class=\\\"bg-primary no-padding\\\" style=\\\"height: 8px;\\\"></div>\\r\\n    <div class=\\\"bg-white text-dark text-center p-1 footer-bottom\\\">\\r\\n      <div class=\\\"col-xs-12 col-sm-12 text-center footer-section\\\">\\r\\n        <img class=\\\"img-responsive\\\" src=\\\"https://agency-portal.opt-dev.optimumui.com/agency-portal/optimum-ui-customizations/image/AmericanJobCenter_logo_horizontal.jpg\\\" alt=\\\"logo\\\" width=\\\"400px\\\">\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n        <!--End Footer-->\\r\\n      \"","module.exports = \"<p>\\r\\n  jsquery-test works!\\r\\n</p>\\r\\n\\r\\n<p class=\\\"test\\\">\\r\\n  jsquery-test works but should be hidden!\\r\\n</p>\\r\\n\\r\\n<button>This will hide the text</button>\\r\\n\\r\\n<table class=\\\"table\\\">\\r\\n\\t<thead>\\r\\n\\t\\t<tr>\\r\\n\\t\\t\\t<th data-breakpoints=\\\"xs\\\">ID</th>\\r\\n\\t\\t\\t<th>First Name</th>\\r\\n\\t\\t\\t<th>Last Name</th>\\r\\n\\t\\t\\t<th data-breakpoints=\\\"xs\\\">Job Title</th>\\r\\n\\t\\t\\t<th data-breakpoints=\\\"xs sm\\\">Started On</th>\\r\\n\\t\\t\\t<th data-breakpoints=\\\"xs sm md\\\" data-title=\\\"DOB\\\">Date of Birth</th>\\r\\n\\t\\t</tr>\\r\\n\\t</thead>\\r\\n\\t<tbody>\\r\\n\\t\\t<tr data-expanded=\\\"true\\\">\\r\\n\\t\\t\\t<td>1</td>\\r\\n\\t\\t\\t<td>Dennise</td>\\r\\n\\t\\t\\t<td>Fuhrman</td>\\r\\n\\t\\t\\t<td>High School History Teacher</td>\\r\\n\\t\\t\\t<td>November 8th 2011</td>\\r\\n\\t\\t\\t<td>July 25th 1960</td>\\r\\n\\t\\t</tr>\\r\\n\\t\\t<tr>\\r\\n\\t\\t\\t<td>2</td>\\r\\n\\t\\t\\t<td>Elodia</td>\\r\\n\\t\\t\\t<td>Weisz</td>\\r\\n\\t\\t\\t<td>Wallpaperer Helper</td>\\r\\n\\t\\t\\t<td>October 15th 2010</td>\\r\\n\\t\\t\\t<td>March 30th 1982</td>\\r\\n\\t\\t</tr>\\r\\n\\t\\t<tr>\\r\\n\\t\\t\\t<td>3</td>\\r\\n\\t\\t\\t<td>Raeann</td>\\r\\n\\t\\t\\t<td>Haner</td>\\r\\n\\t\\t\\t<td>Internal Medicine Nurse Practitioner</td>\\r\\n\\t\\t\\t<td>November 28th 2013</td>\\r\\n\\t\\t\\t<td>February 26th 1966</td>\\r\\n\\t\\t</tr>\\r\\n\\t\\t<tr>\\r\\n\\t\\t\\t<td>4</td>\\r\\n\\t\\t\\t<td>Junie</td>\\r\\n\\t\\t\\t<td>Landa</td>\\r\\n\\t\\t\\t<td>Offbearer</td>\\r\\n\\t\\t\\t<td>October 31st 2010</td>\\r\\n\\t\\t\\t<td>March 29th 1966</td>\\r\\n\\t\\t</tr>\\r\\n\\t\\t<tr>\\r\\n\\t\\t\\t<td>5</td>\\r\\n\\t\\t\\t<td>Solomon</td>\\r\\n\\t\\t\\t<td>Bittinger</td>\\r\\n\\t\\t\\t<td>Roller Skater</td>\\r\\n\\t\\t\\t<td>December 29th 2011</td>\\r\\n\\t\\t\\t<td>September 22nd 1964</td>\\r\\n\\t\\t</tr>\\r\\n\\t\\t<tr>\\r\\n\\t\\t\\t<td>6</td>\\r\\n\\t\\t\\t<td>Bar</td>\\r\\n\\t\\t\\t<td>Lewis</td>\\r\\n\\t\\t\\t<td>Clown</td>\\r\\n\\t\\t\\t<td>November 12th 2012</td>\\r\\n\\t\\t\\t<td>August 4th 1991</td>\\r\\n\\t\\t</tr>\\r\\n\\t\\t<tr>\\r\\n\\t\\t\\t<td>7</td>\\r\\n\\t\\t\\t<td>Usha</td>\\r\\n\\t\\t\\t<td>Leak</td>\\r\\n\\t\\t\\t<td>Ships Electronic Warfare Officer</td>\\r\\n\\t\\t\\t<td>August 14th 2012</td>\\r\\n\\t\\t\\t<td>November 20th 1979</td>\\r\\n\\t\\t</tr>\\r\\n\\t\\t<tr>\\r\\n\\t\\t\\t<td>8</td>\\r\\n\\t\\t\\t<td>Lorriane</td>\\r\\n\\t\\t\\t<td>Cooke</td>\\r\\n\\t\\t\\t<td>Technical Services Librarian</td>\\r\\n\\t\\t\\t<td>September 21st 2010</td>\\r\\n\\t\\t\\t<td>April 7th 1969</td>\\r\\n\\t\\t</tr>\\r\\n\\t</tbody>\\r\\n</table>\"","module.exports = \"<div class=\\\"text-center loginscreen animated fadeInDown\\\">\\r\\n  <div class=\\\"ibox-content\\\">\\r\\n\\r\\n    <div class=\\\"text-center loginscreen animated fadeInDown\\\">\\r\\n        <h2><em><b>Please click on the sign in button below to access the agency portal</b></em></h2>\\r\\n\\r\\n        <button class=\\\"btn btn-primary\\\">\\r\\n            <a [routerLink]=\\\"['/main']\\\"><b>Sign In</b></a>\\r\\n        </button>\\r\\n\\r\\n        <!-- <button class=\\\"btn btn-primary\\\">\\r\\n            <a [routerLink]=\\\"['/main']\\\"><b>Bypass Login</b> </a>\\r\\n          </button> -->\\r\\n      <p class=\\\"m-t\\\">\\r\\n        <strong>© On Point Technology, LLC.</strong>\\r\\n      </p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"col-xs-12\\\" id=\\\"surveyContainer\\\"></div>\\r\\n\\r\\n<div *ngIf=\\\"debug==true\\\">\\r\\n  <h5>Survey Definition Title</h5>\\r\\n  <p>{{ this.surveyDefinition | json }}</p>\\r\\n\\r\\n  <h5>Survey Responses</h5>\\r\\n  <p>{{ this.surveyResponses | json }}</p>\\r\\n\\r\\n\\r\\n  <h5>Survey Response SO</h5>\\r\\n  <p>{{ this.surveyResponseSO | json }}</p>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"this.surveyObject!=null\\\">\\r\\n  <div class=\\\"col-xs-12 col-md-12 padding-12 padding-top\\\">\\r\\n    <button *ngIf=\\\"(this.surveyObject.currentPageNo > 0) && (this.completeLastPage == false)\\\" type=\\\"button\\\"\\r\\n      class=\\\"btn btn-primary\\\" (click)=\\\"prevButton()\\\">\\r\\n      Previous\\r\\n    </button>\\r\\n    <button *ngIf=\\\"this.surveyObject.currentPageNo < this.surveyObject.visiblePageCount - 1\\\" type=\\\"button\\\"\\r\\n      class=\\\"btn btn-primary\\\" (click)=\\\"nextButton()\\\">\\r\\n      Next\\r\\n    </button>\\r\\n    <button\\r\\n      *ngIf=\\\"(this.surveyObject.currentPageNo == this.surveyObject.visiblePageCount - 1) && (this.completeLastPage == false)\\\"\\r\\n      type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"completeButton()\\\">\\r\\n      Complete\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-xs-12 col-md-12 padding-top text-right\\\">\\r\\n\\r\\n  <button *ngIf=\\\"this.completeLastPage == false\\\" type=\\\"button\\\" class=\\\"btn btn-info margin-right\\\"\\r\\n    (click)=\\\"resetButton()\\\">\\r\\n    <!-- routerLink=\\\"/main/claimant-overview/{{claimantId}}\\\" -->\\r\\n    Reset\\r\\n  </button>\\r\\n\\r\\n  <button *ngIf=\\\"this.completeLastPage == false\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveAndExitButton()\\\"\\r\\n    routerLink=\\\"/main/claimant-overview/{{claimantId}}\\\">\\r\\n    Save and Exit\\r\\n  </button>\\r\\n\\r\\n</div>\"","module.exports = \"<ng-container *ngIf = \\\"claimantSO\\\">\\r\\n  <div class = \\\"col-xs-12 no-padding\\\">\\r\\n    <h4 class = \\\"p-2\\\">Claimant Overview</h4>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class = \\\"col-xs-12\\\">\\r\\n    <div class = \\\"col-xs-12 col-lg-6 overview-text\\\">\\r\\n      <h2 class = \\\"m-5\\\">{{claimantSO.firstName}} {{claimantSO.lastName}}</h2>\\r\\n      <h4 class = \\\"no-margin\\\">\\r\\n        <strong class = \\\"\\\">{{claimantSO.ssn | optSsnPipe}}</strong>\\r\\n      </h4>\\r\\n      <ul class = \\\"list-unstyled\\\">\\r\\n        <li>\\r\\n          <div style = \\\"white-space: pre-wrap\\\">\\r\\n            <p>{{claimantSO.address | optAddressPipe}}</p>\\r\\n          </div>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class = \\\"col-xs-12 col-lg-6 no-padding\\\">\\r\\n      <div class = \\\"col-xs-12 no-padding\\\">\\r\\n        <div class = \\\"col-lg-6 overview-subheading\\\">\\r\\n          <p>\\r\\n            <strong>Username:</strong>\\r\\n          </p>\\r\\n        </div>\\r\\n        <div class = \\\"col-lg-6 overview-text\\\">\\r\\n          <p>Placeholder username</p>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class = \\\"col-xs-12 no-padding\\\">\\r\\n        <div class = \\\"col-lg-6 overview-subheading\\\">\\r\\n          <p>\\r\\n            <strong>Email Address:</strong>\\r\\n          </p>\\r\\n        </div>\\r\\n        <div class = \\\"col-lg-6 overview-text\\\">\\r\\n          <p>{{claimantSO.email}}</p>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class = \\\"col-xs-12 no-padding\\\">\\r\\n        <div class = \\\"col-lg-6 overview-subheading\\\">\\r\\n          <p>\\r\\n            <strong>Date of Birth:</strong>\\r\\n          </p>\\r\\n        </div>\\r\\n        <div class = \\\"col-lg-6 overview-text\\\">\\r\\n          <p>{{claimantSO.dateOfBirth | optDatePipe}}</p>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class = \\\"col-xs-12 no-padding\\\">\\r\\n        <div class = \\\"col-lg-6 overview-subheading\\\">\\r\\n          <p>\\r\\n            <strong>Alternate Claimant ID:</strong>\\r\\n          </p>\\r\\n        </div>\\r\\n        <div class = \\\"col-lg-6 overview-text\\\">\\r\\n          <p>{{claimantSO.alternateClaimantId}}</p>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class = \\\"col-xs-12 no-padding\\\">\\r\\n        <div class = \\\"col-lg-6 overview-subheading\\\">\\r\\n          <p>\\r\\n            <strong>Mobile Phone:</strong>\\r\\n          </p>\\r\\n        </div>\\r\\n        <div class = \\\"col-lg-6 overview-text\\\">\\r\\n          <p>{{claimantSO.mobilePhone | optPhonePipe}}</p>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class = \\\"col-xs-12 no-padding\\\">\\r\\n        <div class = \\\"col-lg-6 overview-subheading\\\">\\r\\n          <p>\\r\\n            <strong>Preferred Payment:</strong>\\r\\n          </p>\\r\\n        </div>\\r\\n        <div class = \\\"col-lg-6 overview-text\\\">\\r\\n          <p class = \\\"capitalize\\\">Placeholder preferred payment</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class = \\\"col-xs-12 btn_margin\\\">\\r\\n    <button type = \\\"button\\\"\\r\\n      class = \\\"btn btn-primary\\\"\\r\\n      [routerLink]=\\\"['/main/claimant-profile']\\\">\\r\\n      <b>View Profile</b>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class = \\\"col-xs-12 no-padding\\\">\\r\\n    <h4 class = \\\"p-2\\\">Claims</h4>\\r\\n  </div>\\r\\n\\r\\n  <div class =\\\"col-xs-12 no-padding\\\">\\r\\n\\r\\n      <!-- New Claim Button -->\\r\\n      <div class = \\\"col-xs-12 btn_margin\\\">\\r\\n        <button type = \\\"button\\\"\\r\\n          class = \\\"btn btn-primary\\\"\\r\\n          routerLink=\\\"/main/claim/{{claimantId}}\\\">\\r\\n          <b>New Claim</b>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n</ng-container>\"","module.exports = \"<ng-container>\\r\\n    <h4 class = \\\"p-2\\\">\\r\\n        Claimant Profile\\r\\n    </h4>\\r\\n\\r\\n    <form [formGroup] = \\\"profileForm\\\">\\r\\n        <div class = \\\"form-group\\\">\\r\\n\\r\\n            <!-- SSN and CONFIRM SSN div -->\\r\\n            <div class = \\\"col-xs-12 no-padding\\\">\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <label class = \\\"col-xs-12 head control-label\\\">\\r\\n                        SSN:\\r\\n                    </label>\\r\\n                    <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n                        <!-- FORM INPUT -->\\r\\n                        <input class = \\\"field\\\"\\r\\n                            type = \\\"text\\\" \\r\\n                            placeholder = {{claimantSO.ssn}}\\r\\n                            [(ngModel)] = \\\"claimantSO.ssn\\\" \\r\\n                            formControlName = \\\"ssn\\\" \\r\\n                            readonly = \\\"readonly\\\"\\r\\n                            disabled>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <label class = \\\"col-xs-12 head control-label\\\">\\r\\n                        Alternate SSN:\\r\\n                    </label>\\r\\n                    <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n                        <!-- FORM INPUT -->\\r\\n                        <input class = \\\"field\\\"\\r\\n                            type = \\\"text\\\" \\r\\n                            placeholder = {{claimantSO.alternateClaimantId}} \\r\\n                            [(ngModel)] = \\\"claimantSO.alternateClaimantId\\\" \\r\\n                            formControlName = \\\"alternateClaimantId\\\" \\r\\n                            readonly = \\\"readonly\\\"\\r\\n                            disabled>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- First Name and Last Name div -->\\r\\n            <div class=\\\"col-xs-12 no-padding\\\">\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <label class = \\\"col-xs-12 head control-label\\\">\\r\\n                        First Name:\\r\\n                    </label>\\r\\n                    <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n                        <!-- FORM INPUT -->\\r\\n                        <input class = \\\"field\\\"\\r\\n                            type = \\\"text\\\" \\r\\n                            placeholder = {{claimantSO.firstName}} \\r\\n                            [(ngModel)] = \\\"claimantSO.firstName\\\" \\r\\n                            formControlName = \\\"firstName\\\" \\r\\n                            readonly = \\\"readonly\\\"\\r\\n                            disabled>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <label class = \\\"col-xs-12 head control-label\\\">\\r\\n                        Name:\\r\\n                    </label>\\r\\n                    <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n                        <!-- FORM INPUT -->\\r\\n                        <input class = \\\"field\\\"\\r\\n                            type = \\\"text\\\" \\r\\n                            placeholder = {{claimantSO.lastName}} \\r\\n                            [(ngModel)] = \\\"claimantSO.lastName\\\" \\r\\n                            formControlName = \\\"lastName\\\" \\r\\n                            readonly = \\\"readonly\\\"\\r\\n                            disabled>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Middle Initial and Date of Birth div -->\\r\\n            <div class=\\\"col-xs-12 no-padding\\\">\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <label class = \\\"col-xs-12 head control-label\\\">\\r\\n                        Middle Initial:\\r\\n                    </label>\\r\\n                    <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n                        <!-- FORM INPUT -->\\r\\n                        <input class = \\\"field\\\"\\r\\n                            type = \\\"text\\\" \\r\\n                            placeholder = {{claimantSO.middleInitial}} \\r\\n                            [(ngModel)] = \\\"claimantSO.middleInitial\\\" \\r\\n                            formControlName = \\\"middleInitial\\\" \\r\\n                            readonly = \\\"readonly\\\"\\r\\n                            disabled>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <label class = \\\"col-xs-12 head control-label\\\">\\r\\n                        Date of Birth:\\r\\n                    </label>\\r\\n                    <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n                        <input class = \\\"field\\\"\\r\\n                            type = \\\"text\\\" \\r\\n                            placeholder = {{claimantSO.dateOfBirth}} \\r\\n                            [(ngModel)] = \\\"claimantSO.dateOfBirth\\\" \\r\\n                            formControlName = \\\"dateOfBirth\\\"\\r\\n                            readonly = \\\"readonly\\\"\\r\\n                            disabled>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Home Phone and Mobile Phone div -->\\r\\n            <div class=\\\"col-xs-12 no-padding\\\">\\r\\n                <div class=\\\"col-xs-12 col-md-6\\\">\\r\\n                    <label class=\\\"col-xs-12 head control-label\\\">\\r\\n                        Home Phone:\\r\\n                    </label>\\r\\n                    <div class=\\\"col-xs-12 has-feedback\\\">\\r\\n                        <!-- FORM INPUT -->\\r\\n                        <input class=\\\"field\\\"\\r\\n                            type=\\\"text\\\" \\r\\n                            placeholder= {{claimantSO.homePhone}}\\r\\n                            [(ngModel)]=\\\"claimantSO.homePhone\\\" \\r\\n                            formControlName=\\\"homePhone\\\" \\r\\n                            mask=\\\"(000) 000-0000\\\" \\r\\n                            readonly = \\\"readonly\\\"\\r\\n                            disabled>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <label class = \\\"col-xs-12 head control-label\\\">Mobile Phone:</label>\\r\\n                    <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n                        <input type = \\\"text\\\" \\r\\n                            class = \\\"field\\\" \\r\\n                            placeholder = {{claimantSO.mobilePhone}} \\r\\n                            [(ngModel)] = \\\"claimantSO.mobilePhone\\\" \\r\\n                            formControlName = \\\"mobilePhone\\\"\\r\\n                            mask = \\\"(000) 000-0000\\\"\\r\\n                            readonly = \\\"readonly\\\"\\r\\n                            disabled>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Preferred Occupation and Language Preference div -->\\r\\n            <div class=\\\"col-xs-12 no-padding\\\">\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <label class = \\\"col-xs-12 head control-label\\\">Preferred Occupation:</label>\\r\\n                    <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n                        <input type = \\\"text\\\" \\r\\n                            class = \\\"field\\\" \\r\\n                            placeholder = {{claimantSO.preferredOccupation}} \\r\\n                            [(ngModel)] = \\\"claimantSO.preferredOccupation\\\" \\r\\n                            formControlName = \\\"preferredOccupation\\\"\\r\\n                            readonly = \\\"readonly\\\"\\r\\n                            disabled>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <label class = \\\"col-xs-12 head control-label\\\">\\r\\n                        Language Preference:\\r\\n                    </label>\\r\\n                    <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n                        <input type = \\\"text\\\" \\r\\n                            class = \\\"field\\\" \\r\\n                            placeholder = {{claimantSO.languagePreference}} \\r\\n                            [(ngModel)] = \\\"claimantSO.languagePreference\\\" \\r\\n                            formControlName = \\\"languagePreference\\\"\\r\\n                            readonly = \\\"readonly\\\"\\r\\n                            disabled>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Gender and education Level div -->\\r\\n            <div class = \\\"col-xs-12 no-padding\\\">\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <label class = \\\"col-xs-12 head control-label\\\">\\r\\n                        Gender:\\r\\n                    </label>\\r\\n                    <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n                        <input type = \\\"text\\\" \\r\\n                            class = \\\"field\\\" \\r\\n                            placeholder = {{claimantSO.gender}} \\r\\n                            [(ngModel)] = \\\"claimantSO.gender\\\" \\r\\n                            formControlName = \\\"gender\\\"\\r\\n                            readonly = \\\"readonly\\\"\\r\\n                            disabled>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <label class = \\\"col-xs-12 head control-label\\\">\\r\\n                        Educational Level:\\r\\n                    </label>\\r\\n                    <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n                        <input type = \\\"text\\\" \\r\\n                            class = \\\"field\\\" \\r\\n                            placeholder = {{claimantSO.educationLevel}} \\r\\n                            [(ngModel)] = \\\"claimantSO.educationLevel\\\" \\r\\n                            formControlName = \\\"educationLevel\\\"\\r\\n                            readonly = \\\"readonly\\\"\\r\\n                            disabled>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Race and Ethnicity div -->\\r\\n            <div class = \\\"col-xs-12 no-padding\\\">\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <label class = \\\"col-xs-12 head control-label\\\">\\r\\n                        Race:\\r\\n                    </label>\\r\\n                    <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n                        <input type = \\\"text\\\" \\r\\n                                class = \\\"field\\\" \\r\\n                                placeholder = {{claimantSO.race}} \\r\\n                                [(ngModel)] = \\\"claimantSO.race\\\" \\r\\n                                formControlName = \\\"race\\\"\\r\\n                                readonly = \\\"readonly\\\"\\r\\n                                disabled>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <label class = \\\"col-xs-12 head control-label\\\">\\r\\n                        Ethnicity:\\r\\n                    </label>\\r\\n                    <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n                        <input type = \\\"text\\\" \\r\\n                            class = \\\"field\\\" \\r\\n                            placeholder = {{claimantSO.ethnicity}} \\r\\n                            [(ngModel)] = \\\"claimantSO.ethnicity\\\" \\r\\n                            formControlName = \\\"ethnicity\\\"\\r\\n                            readonly = \\\"readonly\\\"\\r\\n                            disabled>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Edit Claimant Details Button -->\\r\\n            <div class = \\\"col-xs-12 no-padding\\\">\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <button type = \\\"button\\\" \\r\\n                        class = \\\"btn btn-primary\\\" \\r\\n                        (click) = \\\"openEditClaimantDetails(claimantSO)\\\">\\r\\n                            <b>Edit Claimant Details</b>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <br>\\r\\n                <br>\\r\\n            </div>\\r\\n\\r\\n            <!-- Address fields -->\\r\\n            <h4 class = \\\"p-2\\\">\\r\\n                Claimant Address\\r\\n            </h4>\\r\\n\\r\\n            <!-- Address Line 1 -->\\r\\n            <div class = \\\"col-xs-12 no-padding\\\">\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <label class = \\\"col-xs-12 head control-label\\\">\\r\\n                        Address Line 1:\\r\\n                    </label>\\r\\n                    <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n                        <input type = \\\"text\\\" \\r\\n                            class = \\\"field\\\" \\r\\n                            placeholder = {{claimantSO.address[0].addressLine1}} \\r\\n                            [(ngModel)] = \\\"claimantSO.address[0].addressLine1\\\" \\r\\n                            formControlName = \\\"addressLine1\\\"\\r\\n                            readonly = \\\"readonly\\\"\\r\\n                            disabled>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Address Line 2 -->\\r\\n            <div class = \\\"col-xs-12 no-padding\\\">\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <label class = \\\"col-xs-12 head control-label\\\">\\r\\n                        Address Line 2:\\r\\n                    </label>\\r\\n                    <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n                        <input type = \\\"text\\\" \\r\\n                            class = \\\"field\\\" \\r\\n                            placeholder = {{claimantSO.address[0].addressLine2}} \\r\\n                            [(ngModel)] = \\\"claimantSO.address[0].addressLine2\\\" \\r\\n                            formControlName = \\\"addressLine2\\\"\\r\\n                            readonly = \\\"readonly\\\"\\r\\n                            disabled>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- City and State div -->\\r\\n            <div class = \\\"col-xs-12 no-padding\\\">\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <label class = \\\"col-xs-12 head control-label\\\">\\r\\n                        City:\\r\\n                    </label>\\r\\n                    <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n                        <input type = \\\"text\\\" \\r\\n                            class = \\\"field\\\" \\r\\n                            placeholder = {{claimantSO.address[0].city}} \\r\\n                            [(ngModel)] = \\\"claimantSO.address[0].city\\\" \\r\\n                            formControlName = \\\"city\\\"\\r\\n                            readonly = \\\"readonly\\\"\\r\\n                            disabled>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <label class = \\\"col-xs-12 head control-label\\\">\\r\\n                        State:\\r\\n                    </label>\\r\\n                    <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n                        <input type = \\\"text\\\" \\r\\n                            class = \\\"field\\\" \\r\\n                            placeholder = {{claimantSO.address[0].state}} \\r\\n                            [(ngModel)] = \\\"claimantSO.address[0].state\\\" \\r\\n                            formControlName = \\\"state\\\"\\r\\n                            readonly = \\\"readonly\\\"\\r\\n                            disabled>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Zip code and Zip code extension -->\\r\\n            <div class=\\\"col-xs-12 no-padding\\\">\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <label class = \\\"col-xs-12 head control-label\\\">\\r\\n                        Zip Code:\\r\\n                    </label>\\r\\n                    <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n                        <input type = \\\"text\\\" \\r\\n                            class = \\\"field\\\" \\r\\n                            placeholder = {{claimantSO.address[0].zipCode}} \\r\\n                            [(ngModel)] = \\\"claimantSO.address[0].zipCode\\\" \\r\\n                            formControlName = \\\"zipCode\\\"\\r\\n                            readonly = \\\"readonly\\\"\\r\\n                            disabled>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <label class = \\\"col-xs-12 head control-label\\\">\\r\\n                        Zip Code Extension:\\r\\n                    </label>\\r\\n                    <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n                        <input type = \\\"text\\\" \\r\\n                            class = \\\"field\\\" \\r\\n                            placeholder = {{claimantSO.address[0].zipExt}} \\r\\n                            [(ngModel)] = \\\"claimantSO.address[0].zipExt\\\" \\r\\n                            formControlName = \\\"zipExt\\\"\\r\\n                            readonly = \\\"readonly\\\"\\r\\n                            disabled>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Edit Claimant Address Button -->\\r\\n            <div class =\\\"col-xs-12 no-padding\\\">\\r\\n                <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n                    <button type = \\\"button\\\" \\r\\n                        class = \\\"btn btn-primary\\\" \\r\\n                        (click) = \\\"openEditClaimantAddresses(claimantSO.address)\\\">\\r\\n                        <b>Edit Claimant Address</b>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </form>\\r\\n</ng-container>\"","module.exports = \"<h4 class = \\\"p-2\\\">\\r\\n  Claimant Registration\\r\\n</h4>\\r\\n\\r\\n\\r\\n\\r\\n<form [formGroup] = \\\"profileForm\\\">\\r\\n  <div class = \\\"form-group\\\">\\r\\n\\r\\n    <!-- SSN and CONFIRM SSN div -->\\r\\n    <div class = \\\"col-xs-12 no-padding\\\">\\r\\n      <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n        <label class = \\\"col-xs-12 head control-label\\\">\\r\\n          <span class = \\\"text-danger\\\">*</span>SSN:\\r\\n        </label>\\r\\n        <div [class] = \\\"profileForm.controls['ssn'].invalid && profileForm.controls['ssn'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n          <!-- FORM INPUT -->\\r\\n          <input\\r\\n            [class] = \\\"profileForm.controls['ssn'].invalid && profileForm.controls['ssn'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            type = \\\"text\\\"\\r\\n            [placeholder] = \\\"profileForm.controls['ssn'].invalid? '(Required)' : '' \\\"\\r\\n            [(ngModel)] = \\\"userProfileModel.ssn\\\"\\r\\n            formControlName = \\\"ssn\\\"\\r\\n            [hiddenInput] = \\\"true\\\"\\r\\n            mask = \\\"XXX-XX0-000\\\"\\r\\n            [showMaskTyped] = \\\"true\\\">\\r\\n\\r\\n          <!-- ERROR   -->\\r\\n          <span *ngIf = \\\"profileForm.controls['ssn'].invalid && profileForm.controls['ssn'].touched\\\"\\r\\n            class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n            aria-hidden = \\\"true\\\"></span>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n            <val-errors controlName = \\\"ssn\\\"\\r\\n              label = \\\"SSN\\\">\\r\\n\\r\\n              <ng-template valError = \\\"required\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Please enter an SSN.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n\\r\\n              <ng-template valError = \\\"minlength\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Minimum length is 9 digits. Please enter a SSN that is 9-digits in length.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n\\r\\n              <ng-template valError = \\\"maxlength\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Maximum length is 9 digits. Please enter a SSN that is 9-digits in length.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n            </val-errors>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf = \\\"debug==true\\\">\\r\\n          <br>\\r\\n          DEBUG: model.ssn content: {{userProfileModel.ssn}}\\r\\n          <br>\\r\\n          DEBUG: profileForm status: {{profileForm.status}}\\r\\n          <br>\\r\\n          DEBUG: profileForm dirty: {{profileForm.dirty}}\\r\\n          <br>\\r\\n          DEBUG: profileForm touched: {{profileForm.touched}}\\r\\n          <br>\\r\\n          DEBUG: model content: {{ userProfileModel | json }}\\r\\n          <br>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n        <label class = \\\"col-xs-12 head control-label\\\">\\r\\n          <span class = \\\"text-danger\\\">*</span>Confirm SSN:\\r\\n        </label>\\r\\n        <div [class] = \\\"profileForm.controls['confirmSsn'].invalid && profileForm.controls['confirmSsn'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n          <!-- FORM INPUT -->\\r\\n          <input\\r\\n            [class] = \\\"profileForm.controls['confirmSsn'].invalid && profileForm.controls['confirmSsn'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            type = \\\"text\\\"\\r\\n            [placeholder] = \\\"profileForm.controls['confirmSsn'].invalid? '(Required)' : '' \\\"\\r\\n            formControlName = \\\"confirmSsn\\\"\\r\\n            [hiddenInput] = \\\"true\\\"\\r\\n            mask = \\\"XXX-XX0-000\\\"\\r\\n            [showMaskTyped] = \\\"true\\\">\\r\\n\\r\\n          <!-- ERROR   -->\\r\\n          <span *ngIf = \\\"profileForm.controls['confirmSsn'].invalid && profileForm.controls['confirmSsn'].touched\\\"\\r\\n            class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n            aria-hidden = \\\"true\\\">\\r\\n          </span>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n            <val-errors controlName = \\\"confirmSsn\\\" label = \\\"Confirm SSN\\\">\\r\\n              <ng-template valError = \\\"required\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Please confirm your SSN.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n            </val-errors>\\r\\n\\r\\n            <!-- Not possible in ngx-valdemort -->\\r\\n            <p *ngIf = \\\"profileForm.controls['ssn'].value != profileForm.controls['confirmSsn'].value && profileForm.controls['confirmSsn'].touched\\\"\\r\\n              class = \\\"ng-scope\\\">\\r\\n              <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n              Confirm SSN does not match SSN.\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf = \\\"debug==true\\\">\\r\\n          <br>\\r\\n          DEBUG: model.ssn content: {{userProfileModel.ssn}}\\r\\n          <br>\\r\\n          DEBUG: profileForm status: {{profileForm.status}}\\r\\n          <br>\\r\\n          DEBUG: profileForm dirty: {{profileForm.dirty}}\\r\\n          <br>\\r\\n          DEBUG: profileForm touched: {{profileForm.touched}}\\r\\n          <br>\\r\\n          DEBUG: model content: {{ userProfileModel | json }}\\r\\n          <br>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- First Name and Last Name div -->\\r\\n    <div class = \\\"col-xs-12 no-padding\\\">\\r\\n      <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n        <label class = \\\"col-xs-12 head control-label\\\">\\r\\n          <span class = \\\"text-danger\\\">*</span> First Name:\\r\\n        </label>\\r\\n        <div\\r\\n          [class] = \\\"profileForm.controls['firstName'].invalid && profileForm.controls['firstName'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n          <!-- FORM INPUT -->\\r\\n          <input\\r\\n            [class] = \\\"profileForm.controls['firstName'].invalid && profileForm.controls['firstName'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            type = \\\"text\\\"\\r\\n            [placeholder] = \\\"profileForm.controls['firstName'].invalid? '(Required)' : '' \\\"\\r\\n            [(ngModel)] = \\\"userProfileModel.firstName\\\"\\r\\n            formControlName = \\\"firstName\\\" \\r\\n            required>\\r\\n\\r\\n          <!-- ERROR -->\\r\\n          <span *ngIf = \\\"profileForm.controls['firstName'].invalid && profileForm.controls['firstName'].touched\\\"\\r\\n            class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\" \\r\\n            aria-hidden = \\\"true\\\"></span>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n            <val-errors controlName = \\\"firstName\\\"\\r\\n              label = \\\"The first name\\\">\\r\\n              <ng-template valError = \\\"required\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Please enter a valid first name.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n            </val-errors>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf = \\\"debug==true\\\">\\r\\n          <br>\\r\\n          DEBUG: model.firstName content: {{userProfileModel.firstName}}\\r\\n          <br>\\r\\n          DEBUG: profileForm status: {{profileForm.status}}\\r\\n          <br>\\r\\n          DEBUG: profileForm dirty: {{profileForm.dirty}}\\r\\n          <br>\\r\\n          DEBUG: profileForm touched: {{profileForm.touched}}\\r\\n          <br>\\r\\n          DEBUG: model content: {{ userProfileModel | json }}\\r\\n          <br>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n        <label class = \\\"col-xs-12 head control-label\\\">\\r\\n          <span class = \\\"text-danger\\\">*</span> Last Name:\\r\\n        </label>\\r\\n        <div\\r\\n          [class] = \\\"profileForm.controls['lastName'].invalid && profileForm.controls['lastName'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n          <!-- FORM INPUT -->\\r\\n          <input [class] = \\\"profileForm.controls['lastName'].invalid && profileForm.controls['lastName'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            type = \\\"text\\\"\\r\\n            [placeholder] = \\\"profileForm.controls['lastName'].invalid? '(Required)' : '' \\\"\\r\\n            [(ngModel)] = \\\"userProfileModel.lastName\\\"\\r\\n            formControlName = \\\"lastName\\\">\\r\\n\\r\\n\\r\\n          <!-- ERROR -->\\r\\n          <span *ngIf = \\\"profileForm.controls['lastName'].invalid && profileForm.controls['lastName'].touched\\\"\\r\\n            class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n            aria-hidden = \\\"true\\\"></span>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n            <val-errors controlName = \\\"lastName\\\"\\r\\n              label = \\\"The last name\\\">\\r\\n              <ng-template valError = \\\"required\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Please enter a valid last name.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n\\r\\n            </val-errors>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf = \\\"debug==true\\\">\\r\\n          <br>\\r\\n          DEBUG: model.lastName content: {{userProfileModel.lastName}}\\r\\n          <br>\\r\\n          DEBUG: profileForm status: {{profileForm.status}}\\r\\n          <br>\\r\\n          DEBUG: profileForm dirty: {{profileForm.dirty}}\\r\\n          <br>\\r\\n          DEBUG: profileForm touched: {{profileForm.touched}}\\r\\n          <br>\\r\\n          DEBUG: model content: {{ userProfileModel | json }}\\r\\n          <br>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Middle Initial and Date of Birth div -->\\r\\n    <div class = \\\"col-xs-12 no-padding\\\">\\r\\n      <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n        <label class = \\\"col-xs-12 head control-label\\\">\\r\\n          Middle Initial:\\r\\n        </label>\\r\\n        <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n          <!-- FORM INPUT -->\\r\\n          <input class = \\\"edit_field\\\"\\r\\n            type = \\\"text\\\"\\r\\n            [(ngModel)] = \\\"userProfileModel.middleInitial\\\"\\r\\n            formControlName = \\\"middleInitial\\\">\\r\\n\\r\\n          <!-- ERROR -->\\r\\n          <span *ngIf = \\\"profileForm.controls['middleInitial'].invalid && profileForm.controls['middleInitial'].touched\\\"\\r\\n            class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n            aria-hidden = \\\"true\\\"></span>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n            <val-errors controlName = \\\"middleInitial\\\">\\r\\n              <ng-template valError = \\\"maxlength\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Middle Initial can only have a maximum of 1 letter\\r\\n                </p>\\r\\n              </ng-template>\\r\\n\\r\\n              <ng-template valError = \\\"pattern\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Only a letter can be entered as a middle initial\\r\\n                </p>\\r\\n              </ng-template>\\r\\n            </val-errors>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div *ngIf = \\\"debug==true\\\">\\r\\n          <br>\\r\\n          DEBUG: model.middleInitial content: {{userProfileModel.middleInitial}}\\r\\n          <br>\\r\\n          DEBUG: profileForm status: {{profileForm.status}}\\r\\n          <br>\\r\\n          DEBUG: profileForm dirty: {{profileForm.dirty}}\\r\\n          <br>\\r\\n          DEBUG: profileForm touched: {{profileForm.touched}}\\r\\n          <br>\\r\\n          DEBUG: model content: {{ userProfileModel | json }}\\r\\n          <br>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n        <label for = \\\"dateOfBirth\\\"\\r\\n          class = \\\"col-xs-12 head control-label\\\">\\r\\n          <span class = \\\"text-danger\\\">*</span>\\r\\n          Date of Birth:\\r\\n        </label>\\r\\n        <div\\r\\n          [class] = \\\"profileForm.controls['dateOfBirth'].invalid && profileForm.controls['dateOfBirth'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n          <input type = \\\"text\\\"\\r\\n            [class] = \\\"profileForm.controls['dateOfBirth'].invalid && profileForm.controls['dateOfBirth'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            [(ngModel)] = \\\"userProfileModel.dateOfBirth\\\"\\r\\n            formControlName = \\\"dateOfBirth\\\"\\r\\n            ngbDatepicker #d = \\\"ngbDatepicker\\\"\\r\\n            (click) = \\\"d.toggle()\\\">\\r\\n\\r\\n\\r\\n          <!-- ERROR -->\\r\\n          <span *ngIf = \\\"profileForm.controls['dateOfBirth'].invalid && profileForm.controls['dateOfBirth'].touched\\\"\\r\\n            class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n            aria-hidden = \\\"true\\\"></span>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n            <val-errors controlName = \\\"dateOfBirth\\\">\\r\\n              <ng-template valError = \\\"required\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Please enter a valid date of birth.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n            </val-errors>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf = \\\"debug==true\\\">\\r\\n          <br>\\r\\n          DEBUG: model.dateOfBirth content: {{userProfileModel.dateOfBirth | json}}\\r\\n          <br>\\r\\n          DEBUG: profileForm status: {{profileForm.status}}\\r\\n          <br>\\r\\n          DEBUG: profileForm dirty: {{profileForm.dirty}}\\r\\n          <br>\\r\\n          DEBUG: profileForm touched: {{profileForm.touched}}\\r\\n          <br>\\r\\n          DEBUG: model content: {{ userProfileModel | json }}\\r\\n          <br>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Home Phone and Mobile Phone div -->\\r\\n    <div class = \\\"col-xs-12 no-padding\\\">\\r\\n      <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n        <label class = \\\"col-xs-12 head control-label\\\">\\r\\n          <span class = \\\"text-danger\\\">*</span>Home Phone:\\r\\n        </label>\\r\\n        <div [class] = \\\"profileForm.controls['homePhone'].invalid && profileForm.controls['homePhone'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n          <!-- FORM INPUT -->\\r\\n          <input\\r\\n            [class] = \\\"profileForm.controls['homePhone'].invalid && profileForm.controls['homePhone'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            type = \\\"text\\\"\\r\\n            [placeholder] = \\\"profileForm.controls['homePhone'].invalid? '(000) 000-000 (Required)' : '' \\\"\\r\\n            [(ngModel)] = \\\"userProfileModel.homePhone\\\"\\r\\n            formControlName = \\\"homePhone\\\"\\r\\n            mask = \\\"(000) 000-0000\\\">\\r\\n\\r\\n          <!-- ERROR   -->\\r\\n          <span *ngIf = \\\"profileForm.controls['homePhone'].invalid && profileForm.controls['homePhone'].touched\\\"\\r\\n            class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n            aria-hidden = \\\"true\\\"></span>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n            <val-errors controlName = \\\"homePhone\\\">\\r\\n              <ng-template valError = \\\"required\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Please enter a valid home phone.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n\\r\\n              <ng-template valError = \\\"pattern\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Only numbers are allowed to be inputted in this field.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n            </val-errors>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf = \\\"debug==true\\\">\\r\\n          <br>\\r\\n          DEBUG: model.homePhone content: {{userProfileModel.homePhone}}\\r\\n          <br>\\r\\n          DEBUG: profileForm status: {{profileForm.status}}\\r\\n          <br>\\r\\n          DEBUG: profileForm dirty: {{profileForm.dirty}}\\r\\n          <br>\\r\\n          DEBUG: profileForm touched: {{profileForm.touched}}\\r\\n          <br>\\r\\n          DEBUG: model content: {{ userProfileModel | json }}\\r\\n          <br>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n        <label for = \\\"mobilePhone\\\"\\r\\n          class = \\\"col-xs-12 head control-label\\\">Mobile Phone:\\r\\n        </label>\\r\\n        <div class = \\\"col-xs-12 has-feedback\\\">\\r\\n          <input type = \\\"text\\\"\\r\\n            class = \\\"form-control edit_field\\\"\\r\\n            [(ngModel)] = \\\"userProfileModel.mobilePhone\\\"\\r\\n            formControlName = \\\"mobilePhone\\\"\\r\\n            placeholder = \\\"(000) 000-000\\\"\\r\\n            mask = \\\"(000) 000-0000\\\">\\r\\n          <!-- ERROR   -->\\r\\n          <div class = \\\"text-danger\\\">\\r\\n            <val-errors controlName = \\\"mobilePhone\\\">\\r\\n              <ng-template valError = \\\"pattern\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Only numbers are allowed to be inputted in this field.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n            </val-errors>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf = \\\"debug==true\\\">\\r\\n          <br>\\r\\n          DEBUG: model.mobilePhone content: {{userProfileModel.mobilePhone}}\\r\\n          <br>\\r\\n          DEBUG: profileForm status: {{profileForm.status}}\\r\\n          <br>\\r\\n          DEBUG: profileForm dirty: {{profileForm.dirty}}\\r\\n          <br>\\r\\n          DEBUG: profileForm touched: {{profileForm.touched}}\\r\\n          <br>\\r\\n          DEBUG: model content: {{ userProfileModel | json }}\\r\\n          <br>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Preferred Occupation and Language Preference div -->\\r\\n    <div class = \\\"col-xs-12 no-padding\\\">\\r\\n      <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n        <label class = \\\"col-xs-12 head control-label\\\">\\r\\n          <span class = \\\"text-danger\\\">*</span> Preferred Occupation:\\r\\n        </label>\\r\\n        <div [class] = \\\"profileForm.controls['preferredOccupation'].invalid && profileForm.controls['preferredOccupation'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n          <!-- FORM INPUT -->\\r\\n          <input [class] = \\\"profileForm.controls['preferredOccupation'].invalid && profileForm.controls['preferredOccupation'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            type = \\\"text\\\"\\r\\n            [placeholder] = \\\"profileForm.controls['preferredOccupation'].invalid? '(Required)' : '' \\\"\\r\\n            [(ngModel)] = \\\"userProfileModel.preferredOccupation\\\"\\r\\n            formControlName = \\\"preferredOccupation\\\">\\r\\n\\r\\n          <!-- ERROR   -->\\r\\n          <span *ngIf = \\\"profileForm.controls['preferredOccupation'].invalid && profileForm.controls['preferredOccupation'].touched\\\"\\r\\n            class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n            aria-hidden = \\\"true\\\">\\r\\n          </span>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n            <val-errors controlName = \\\"preferredOccupation\\\">\\r\\n              <ng-template valError = \\\"required\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Please enter a valid preferred occupation.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n            </val-errors>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n        <label class = \\\"col-xs-12 head control-label\\\">\\r\\n          <span class = \\\"text-danger\\\">*</span> Language Preference:\\r\\n        </label>\\r\\n        <div [class]=\\\"profileForm.controls['languagePreference'].invalid && profileForm.controls['languagePreference'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n          <!-- FORM INPUT -->\\r\\n          <select [class] = \\\"profileForm.controls['languagePreference'].invalid && profileForm.controls['languagePreference'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            formControlName = \\\"languagePreference\\\"\\r\\n            [compareWith] = \\\"compareFn\\\">\\r\\n            <option value = \\\"\\\"\\r\\n              disabled=true>\\r\\n              (Required)\\r\\n            </option>\\r\\n            <option [value]=\\\"choice\\\"\\r\\n              *ngFor=\\\"let choice of languagePreferenceChoices\\\">\\r\\n              {{choice}}\\r\\n            </option>\\r\\n          </select>\\r\\n\\r\\n          <!-- ERROR   -->\\r\\n          <span *ngIf=\\\"profileForm.controls['languagePreference'].invalid && profileForm.controls['languagePreference'].touched\\\"\\r\\n            class=\\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n            aria-hidden=\\\"true\\\">\\r\\n          </span>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n            <val-errors controlName = \\\"languagePreference\\\">\\r\\n              <ng-template valError = \\\"required\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Please choose a valid language preference.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n            </val-errors>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Gender and education Level div -->\\r\\n    <div class = \\\"col-xs-12 no-padding\\\">\\r\\n      <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n        <label class = \\\"col-xs-12 head control-label\\\">\\r\\n          <span class = \\\"text-danger\\\">*</span> Gender:\\r\\n        </label>\\r\\n        <div [class] = \\\"profileForm.controls['gender'].invalid && profileForm.controls['gender'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n          <!-- FORM INPUT -->\\r\\n          <select\\r\\n            [class] = \\\"profileForm.controls['gender'].invalid && profileForm.controls['gender'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            formControlName = \\\"gender\\\"\\r\\n            [compareWith] = \\\"compareFn\\\">\\r\\n            <option value = \\\"\\\" \\r\\n              disabled = true>\\r\\n              (Required)\\r\\n            </option>\\r\\n            <option [value] = \\\"choice\\\"\\r\\n              *ngFor = \\\"let choice of genderChoices\\\">\\r\\n              {{choice}}\\r\\n            </option>\\r\\n          </select>\\r\\n\\r\\n          <!-- ERROR   -->\\r\\n          <span *ngIf = \\\"profileForm.controls['gender'].invalid && profileForm.controls['gender'].touched\\\"\\r\\n            class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n            aria-hidden = \\\"true\\\">\\r\\n          </span>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n            <val-errors controlName = \\\"gender\\\">\\r\\n              <ng-template valError = \\\"required\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Please choose a valid gender.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n            </val-errors>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n        <label class = \\\"col-xs-12 head control-label\\\">\\r\\n          <span class = \\\"text-danger\\\">*</span> Education Level:\\r\\n        </label>\\r\\n        <div [class] = \\\"profileForm.controls['educationLevel'].invalid && profileForm.controls['educationLevel'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n          <!-- FORM INPUT -->\\r\\n          <select\\r\\n            [class] = \\\"profileForm.controls['educationLevel'].invalid && profileForm.controls['educationLevel'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            formControlName = \\\"educationLevel\\\"\\r\\n            [compareWith] = \\\"compareFn\\\" \\r\\n            required>\\r\\n            <option value = \\\"\\\" \\r\\n              disabled = true>\\r\\n              (Required)\\r\\n            </option>\\r\\n            <option [value] = \\\"choice\\\"\\r\\n              *ngFor = \\\"let choice of educationLevelChoices\\\">\\r\\n              {{choice}}\\r\\n            </option>\\r\\n          </select>\\r\\n          <!-- ERROR   -->\\r\\n          <span *ngIf = \\\"profileForm.controls['educationLevel'].invalid && profileForm.controls['educationLevel'].touched\\\"\\r\\n            class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n            aria-hidden = \\\"true\\\">\\r\\n          </span>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n            <val-errors controlName = \\\"educationLevel\\\">\\r\\n              <ng-template valError = \\\"required\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Please choose a valid Education Level.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n            </val-errors>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Race and Ethnicity div -->\\r\\n    <div class = \\\"col-xs-12 no-padding\\\">\\r\\n      <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n        <label class = \\\"col-xs-12 head control-label\\\">\\r\\n          <span class = \\\"text-danger\\\">*</span> Race:\\r\\n        </label>\\r\\n        <div [class] = \\\"profileForm.controls['race'].invalid && profileForm.controls['race'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n          <!-- FORM INPUT -->\\r\\n          <select\\r\\n            [class] = \\\"profileForm.controls['race'].invalid && profileForm.controls['race'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            formControlName = \\\"race\\\"\\r\\n            [compareWith] = \\\"compareFn\\\">\\r\\n            <option value = \\\"\\\"\\r\\n              disabled = true>\\r\\n              (Required)\\r\\n            </option>\\r\\n            <option [value] = \\\"choice\\\"\\r\\n              *ngFor = \\\"let choice of raceChoices\\\">\\r\\n              {{choice}}\\r\\n            </option>\\r\\n          </select>\\r\\n\\r\\n          <!-- ERROR   -->\\r\\n          <span *ngIf = \\\"profileForm.controls['race'].invalid && profileForm.controls['race'].touched\\\"\\r\\n            class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n            aria-hidden = \\\"true\\\">\\r\\n          </span>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n            <val-errors controlName = \\\"race\\\">\\r\\n              <ng-template valError = \\\"required\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Please choose a valid Race.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n            </val-errors>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n        <label class = \\\"col-xs-12 head control-label\\\">\\r\\n          <span class = \\\"text-danger\\\">*</span> Ethnicity:\\r\\n        </label>\\r\\n        <div [class] = \\\"profileForm.controls['ethnicity'].invalid && profileForm.controls['ethnicity'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n          <!-- FORM INPUT -->\\r\\n          <select [class] = \\\"profileForm.controls['ethnicity'].invalid && profileForm.controls['ethnicity'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            formControlName = \\\"ethnicity\\\"\\r\\n            [compareWith] = \\\"compareFn\\\">\\r\\n            <option value = \\\"\\\"\\r\\n              disabled = true>\\r\\n              (Required)\\r\\n            </option>\\r\\n            <option [value] = \\\"choice\\\"\\r\\n              *ngFor = \\\"let choice of ethnicityChoices\\\">\\r\\n              {{choice}}\\r\\n            </option>\\r\\n          </select>\\r\\n\\r\\n          <!-- ERROR   -->\\r\\n          <span *ngIf = \\\"profileForm.controls['ethnicity'].invalid && profileForm.controls['ethnicity'].touched\\\"\\r\\n            class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n            aria-hidden = \\\"true\\\">\\r\\n          </span>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n            <val-errors controlName = \\\"ethnicity\\\">\\r\\n              <ng-template valError = \\\"required\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Please choose a valid Ethnicity.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n            </val-errors>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <!-- Address fields -->\\r\\n    <h4 class = \\\"p-2\\\">\\r\\n      Claimant Address\\r\\n    </h4>\\r\\n\\r\\n    <!-- Address Line 1 -->\\r\\n    <div class = \\\"col-xs-12 col-md-12\\\">\\r\\n      <label class = \\\"col-xs-12 head control-label\\\">\\r\\n        <span class = \\\"text-danger\\\">*</span> Address Line 1:\\r\\n      </label>\\r\\n      <div [class] = \\\"profileForm.controls['addressLine1'].invalid && profileForm.controls['addressLine1'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n        <!-- FORM INPUT -->\\r\\n        <input\\r\\n          [class] = \\\"profileForm.controls['addressLine1'].invalid && profileForm.controls['addressLine1'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n          type = \\\"text\\\"\\r\\n          [placeholder] = \\\"profileForm.controls['addressLine1'].invalid? '(Required)' : '' \\\"\\r\\n          [(ngModel)] = \\\"userProfileModel.address[0].addressLine1\\\"\\r\\n          formControlName = \\\"addressLine1\\\">\\r\\n\\r\\n        <!-- ERROR   -->\\r\\n        <span *ngIf = \\\"profileForm.controls['addressLine1'].invalid && profileForm.controls['addressLine1'].touched\\\"\\r\\n          class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n          aria-hidden = \\\"true\\\">\\r\\n        </span>\\r\\n\\r\\n        <div class = \\\"text-danger\\\">\\r\\n          <val-errors controlName = \\\"addressLine1\\\">\\r\\n            <ng-template valError = \\\"required\\\">\\r\\n              <p class = \\\"ng-scope\\\">\\r\\n                <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                Please enter a valid Address Line 1.\\r\\n              </p>\\r\\n            </ng-template>\\r\\n          </val-errors>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Address Line 2 -->\\r\\n    <div class = \\\"col-xs-12 col-md-12\\\">\\r\\n      <label class = \\\"col-xs-12 head control-label\\\">\\r\\n        <span class = \\\"text-danger\\\">*</span> Address Line 2:\\r\\n      </label>\\r\\n      <div [class] = \\\"profileForm.controls['addressLine2'].invalid && profileForm.controls['addressLine2'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n        <!-- FORM INPUT -->\\r\\n        <input [class] = \\\"profileForm.controls['addressLine2'].invalid && profileForm.controls['addressLine2'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n          type = \\\"text\\\"\\r\\n          [placeholder] = \\\"profileForm.controls['addressLine2'].invalid? '(Required)' : '' \\\"\\r\\n          [(ngModel)] = \\\"userProfileModel.address[0].addressLine2\\\"\\r\\n          formControlName = \\\"addressLine2\\\">\\r\\n        <!-- ERROR   -->\\r\\n        <span *ngIf = \\\"profileForm.controls['addressLine2'].invalid && profileForm.controls['addressLine2'].touched\\\"\\r\\n          class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n          aria-hidden = \\\"true\\\">\\r\\n        </span>\\r\\n\\r\\n        <div class = \\\"text-danger\\\">\\r\\n          <val-errors controlName = \\\"addressLine2\\\">\\r\\n            <ng-template valError = \\\"required\\\">\\r\\n              <p class = \\\"ng-scope\\\">\\r\\n                <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                Please enter a valid Address Line 2.\\r\\n              </p>\\r\\n            </ng-template>\\r\\n          </val-errors>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- City and State div -->\\r\\n    <div class = \\\"col-xs-12 no-padding\\\">\\r\\n      <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n        <label class = \\\"col-xs-12 head control-label\\\">\\r\\n          <span class = \\\"text-danger\\\">*</span> City:\\r\\n        </label>\\r\\n        <div [class] = \\\"profileForm.controls['city'].invalid && profileForm.controls['city'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n          <!-- FORM INPUT -->\\r\\n          <input [class] = \\\"profileForm.controls['city'].invalid && profileForm.controls['city'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            type = \\\"text\\\"\\r\\n            [placeholder] = \\\"profileForm.controls['city'].invalid? '(Required)' : '' \\\"\\r\\n            [(ngModel)] = \\\"userProfileModel.address[0].city\\\" \\r\\n            formControlName = \\\"city\\\">\\r\\n\\r\\n          <!-- ERROR   -->\\r\\n          <span *ngIf = \\\"profileForm.controls['city'].invalid && profileForm.controls['city'].touched\\\"\\r\\n            class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n            aria-hidden = \\\"true\\\"></span>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n            <val-errors controlName = \\\"city\\\">\\r\\n              <ng-template valError = \\\"required\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Please enter a valid City.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n            </val-errors>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n        <label class = \\\"col-xs-12 head control-label\\\">\\r\\n          <span class = \\\"text-danger\\\">*</span> State:\\r\\n        </label>\\r\\n        <div [class] = \\\"profileForm.controls['state'].invalid && profileForm.controls['state'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n          <!-- FORM INPUT -->\\r\\n          <select [class] = \\\"profileForm.controls['state'].invalid && profileForm.controls['state'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            formControlName = \\\"state\\\"\\r\\n            [compareWith] = \\\"compareFn\\\">\\r\\n            <option value = \\\"\\\"\\r\\n              disabled = true>\\r\\n              (Required)\\r\\n            </option>\\r\\n            <option [value] = \\\"choice\\\"\\r\\n              *ngFor = \\\"let choice of stateChoices\\\">\\r\\n              {{choice}}\\r\\n            </option>\\r\\n          </select>\\r\\n\\r\\n          <!-- ERROR   -->\\r\\n          <span *ngIf = \\\"profileForm.controls['state'].invalid && profileForm.controls['state'].touched\\\"\\r\\n            class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n            aria-hidden = \\\"true\\\">\\r\\n          </span>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n            <val-errors controlName = \\\"state\\\">\\r\\n              <ng-template valError = \\\"required\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Please choose a valid state.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n            </val-errors>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Zip code and Zip code extension -->\\r\\n    <div class = \\\"col-xs-12 no-padding\\\">\\r\\n      <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n        <label class = \\\"col-xs-12 head control-label\\\">\\r\\n          <span class = \\\"text-danger\\\">*</span> Zip Code:\\r\\n        </label>\\r\\n        <div [class] = \\\"profileForm.controls['zipCode'].invalid && profileForm.controls['zipCode'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n          <!-- FORM INPUT -->\\r\\n          <input [class] = \\\"profileForm.controls['zipCode'].invalid && profileForm.controls['zipCode'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            type = \\\"text\\\"\\r\\n            [placeholder] = \\\"profileForm.controls['zipCode'].invalid? '(Required)' : '' \\\"\\r\\n            [(ngModel)] = \\\"userProfileModel.address[0].zipCode\\\"\\r\\n            formControlName = \\\"zipCode\\\">\\r\\n\\r\\n          <!-- ERROR   -->\\r\\n          <span *ngIf = \\\"profileForm.controls['zipCode'].invalid && profileForm.controls['zipCode'].touched\\\"\\r\\n            class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n            aria-hidden = \\\"true\\\"></span>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n            <val-errors controlName = \\\"zipCode\\\">\\r\\n              <ng-template valError = \\\"required\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Please enter a valid Zip Code.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n            </val-errors>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class = \\\"col-xs-12 col-md-6\\\">\\r\\n        <label class = \\\"col-xs-12 head control-label\\\">\\r\\n          <span class = \\\"text-danger\\\">*</span> Zip Code Extension:\\r\\n        </label>\\r\\n        <div [class] = \\\"profileForm.controls['zipExt'].invalid && profileForm.controls['zipExt'].touched ? 'col-xs-12 has-error has-feedback': 'col-xs-12 has-feedback'\\\">\\r\\n          <!-- FORM INPUT -->\\r\\n          <input [class] = \\\"profileForm.controls['zipExt'].invalid && profileForm.controls['zipExt'].touched ? 'edit_field error': 'edit_field'\\\"\\r\\n            type = \\\"text\\\"\\r\\n            [placeholder] = \\\"profileForm.controls['zipExt'].invalid? '(Required)' : '' \\\"\\r\\n            [(ngModel)] = \\\"userProfileModel.address[0].zipExt\\\"\\r\\n            formControlName = \\\"zipExt\\\">\\r\\n\\r\\n          <!-- ERROR   -->\\r\\n          <span *ngIf = \\\"profileForm.controls['zipExt'].invalid && profileForm.controls['zipExt'].touched\\\"\\r\\n            class = \\\"glyphicon glyphicon-exclamation-sign form-control-feedback\\\"\\r\\n            aria-hidden = \\\"true\\\">\\r\\n          </span>\\r\\n\\r\\n          <div class = \\\"text-danger\\\">\\r\\n            <val-errors controlName = \\\"zipExt\\\">\\r\\n              <ng-template valError = \\\"required\\\">\\r\\n                <p class = \\\"ng-scope\\\">\\r\\n                  <span class = \\\"glyphicon glyphicon-exclamation-sign\\\"></span>\\r\\n                  Please enter a valid Zip Code Extension.\\r\\n                </p>\\r\\n              </ng-template>\\r\\n            </val-errors>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div class = \\\"col-xs-12 col-md-12\\\">\\r\\n      <button type = \\\"submit\\\"\\r\\n        class = \\\"btn btn-success\\\"\\r\\n        (click) = \\\"verifyBeforeSubmit()\\\">\\r\\n        Submit\\r\\n      </button>\\r\\n      <br>\\r\\n      <button class = \\\"btn btn-success\\\"\\r\\n        (click) = \\\"FillForm()\\\">\\r\\n        Fill Up & Submit\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</form>\"","module.exports = \"<ng-container *ngIf=\\\"claimantSO\\\">\\r\\n  <ng-container *ngIf=\\\"claimantSO.length == 0; else showTable\\\">\\r\\n  </ng-container>\\r\\n  <ng-template #showTable>\\r\\n    <mat-table [dataSource]=\\\"claimantSO\\\">\\r\\n        <ng-container matColumnDef=\\\"ssn\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>SSN</th>\\r\\n          <td mat-cell *matCellDef=\\\"let ClaimantSO\\\" >\\r\\n            <a class=\\\"parent\\\" style=\\\"display: block; color:blue;\\\" routerLink=\\\"/main/claimant-overview/{{ClaimantSO.claimantId}}\\\">\\r\\n            {{ClaimantSO.ssn | optSsnPipe}}\\r\\n            </a>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <ng-container matColumnDef=\\\"name\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Name</th>\\r\\n          <td class=\\\"\\\"mat-cell *matCellDef=\\\"let ClaimantSO\\\">{{ClaimantSO.firstName}} {{ClaimantSO.lastName}}</td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <!-- <ng-container matColumnDef=\\\"dateOfBirth\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Date of Birth</th>\\r\\n          <td mat-cell *matCellDef=\\\"let ClaimantSO\\\">{{ClaimantSO.dateOfBirth | optDatePipe}}</td>\\r\\n        </ng-container> -->\\r\\n      \\r\\n        <ng-container matColumnDef=\\\"homePhone\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Home Phone</th>\\r\\n          <td mat-cell *matCellDef=\\\"let ClaimantSO\\\">{{ClaimantSO.homePhone | optPhonePipe}}</td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <ng-container matColumnDef=\\\"mobilePhone\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Mobile Phone</th>\\r\\n          <td mat-cell *matCellDef=\\\"let ClaimantSO\\\">{{ClaimantSO.mobilePhone | optPhonePipe}}</td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <ng-container matColumnDef=\\\"claimantAddresses\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Address</th>\\r\\n          <td mat-cell *matCellDef=\\\"let ClaimantSO\\\">{{ClaimantSO.claimantAddresses | optAddressPipe}}</td>\\r\\n        </ng-container>\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let myRowData; columns: columnsToDisplay\\\"></tr>\\r\\n    </mat-table>\\r\\n  </ng-template>\\r\\n</ng-container>\\r\\n<button (click)=\\\"refreshToken()\\\">Refresh</button>\"","module.exports = \"\\r\\n<!-- <p>\\r\\n  this is the 11:33 pm version\\r\\n</p> -->\\r\\n<!-- <button (click)=\\\"this.getToken()\\\">Press this to get the userid</button>\\r\\n\\r\\n<p> id to get: </p><input type=\\\"text\\\" [(ngModel)]=\\\"this.userid\\\">\\r\\n<br>\\r\\n<button (click)=\\\"this.getAgencyButton()\\\">Press this to see what the agency service returns</button> -->\\r\\n\\r\\n\\r\\n<!-- <app-jsquery-test></app-jsquery-test> -->\\r\\n\"","module.exports = \"<div class=\\\"nav-wrapper\\\">\\r\\n    <app-side-nav-bar></app-side-nav-bar>\\r\\n    <div id = \\\"main-toastr\\\" toastContainer></div>\\r\\n  <div id=\\\"content\\\" class=\\\"container\\\">\\r\\n    <app-top-nav-bar></app-top-nav-bar>\\r\\n   <router-outlet>\\r\\n   </router-outlet>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","module.exports = \"<p>\\r\\n  not-authorized works!\\r\\n</p>\\r\\n\"","module.exports = \"<!--Side Nav Bar Section-->\\r\\n<div class=\\\"bg-primary\\\">\\r\\n  <nav id=\\\"sidebar\\\" aria-label=\\\"Side Nav Bar\\\" ng-controller=\\\"SideNavBarCtrl as sideNavBar\\\">\\r\\n    <div ng-if=\\\"!sideNavBar.portalService.getIsNavBarMinimized()\\\">\\r\\n      <a ui-sref=\\\"agency-portal.home\\\"> <img alt=\\\"logo\\\" class=\\\"logo logo-width logo-style mob_hide\\\" src=\\\"https://agency-portal.opt-dev.optimumui.com/agency-portal/optimum-ui-customizations/image/state_logo.png\\\"> </a>\\r\\n    </div>\\r\\n    <div class=\\\"sidebar-header\\\">\\r\\n          <div class=\\\"text-center rounded-section\\\">\\r\\n              <h3>Agency Portal</h3>\\r\\n              <strong>AP</strong>\\r\\n          </div>\\r\\n      </div>\\r\\n    <ul side-navigation id=\\\"side-menu\\\" class=\\\"list-unstyled components\\\">\\r\\n      <li ui-sref-active=\\\"active\\\" ng-click=\\\"sideNavBar.collapse($event)\\\">\\r\\n        <a [routerLink] = \\\"['home']\\\" ui-sref=\\\"portal.main\\\" uib-tooltip=\\\"Home\\\" tooltip-placement=\\\"right\\\" tooltip-enable=\\\"sideNavBar.toolTipFlag && sideNavBar.portalService.getIsNavBarMinimized()\\\">\\r\\n          <div>\\r\\n            <i class=\\\"glyphicon glyphicon-home\\\"></i><span class=\\\"sideNavText\\\">Home</span>\\r\\n          </div>\\r\\n        </a>\\r\\n        <!-- <a [routerLink] = \\\"['optimum-form']\\\" ui-sref=\\\"portal.main\\\" uib-tooltip=\\\"Optimum Form\\\" tooltip-placement=\\\"right\\\" tooltip-enable=\\\"sideNavBar.toolTipFlag && sideNavBar.portalService.getIsNavBarMinimized()\\\">\\r\\n          <div>\\r\\n            <i class=\\\"glyphicon glyphicon-home\\\"></i><span class=\\\"sideNavText\\\">Optimum Form</span>\\r\\n          </div>\\r\\n        </a> -->\\r\\n      </li>\\r\\n    </ul>\\r\\n  </nav>\\r\\n</div>\\r\\n  <!--End Side Nav Bar-->\"","module.exports = \"  <!--Top Nav Bar Section-->\\r\\n  <nav class=\\\"navbar navbar-default\\\" aria-label=\\\"Top Nav Bar\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-7 col-sm-push-5 margin-bot-sm\\\">\\r\\n           <div class=\\\"row pull-right\\\">\\r\\n            <span class=\\\"hidden-xs\\\">\\r\\n              <span class=\\\"icon margin-right custom-welcome\\\">Welcome User {{this.portalService.firstName}}</span>\\r\\n            </span>\\r\\n            <a class=\\\"view icon p-2 custom-m-1\\\" ui-sref=\\\"sign-out({ manualSignout:true })\\\" (click) = \\\"doLogout()\\\">Logout</a>\\r\\n            <span ng-if=\\\"searchBar.displayLanguageTranslator\\\" ></span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-5 col-sm-pull-7\\\">\\r\\n          <button type=\\\"button\\\" id=\\\"sidebarCollapse\\\" class=\\\"pull-left icon btn btn-primary\\\" title=\\\"Menu\\\" aria-label=\\\"Menu\\\">\\r\\n            <i class=\\\"fa fa-bars\\\"></i>\\r\\n          </button>\\r\\n          <form role=\\\"search\\\" class=\\\"navbar-form-custom searchbar-custom search-bar-width\\\" >\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <input type=\\\"text\\\" placeholder=\\\"Search\\\" class=\\\"form-control\\\" id=\\\"searchText\\\">\\r\\n              <span class=\\\"input-group-addon\\\">\\r\\n               <button class=\\\"fa fa-search\\\" (click)=\\\"searchClaimant()\\\"></button>\\r\\n              </span>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\"","export const STATECHOICES = [\r\n    \"Alaska\",\r\n    \"Alabama\",\r\n    \"Arkansas\",\r\n    \"American Samoa\",\r\n    \"Arizona\",\r\n    \"California\",\r\n    \"Colorado\",\r\n    \"Connecticut\",\r\n    \"District of Columbia\",\r\n    \"Delaware\",\r\n    \"Florida\",\r\n    \"Georgia\",\r\n    \"Guam\",\r\n    \"Hawaii\",\r\n    \"Iowa\",\r\n    \"Idaho\",\r\n    \"Illinois\",\r\n    \"Indiana\",\r\n    \"Kansas\",\r\n    \"Kentucky\",\r\n    \"Louisiana\",\r\n    \"Massachusetts\",\r\n    \"Maryland\",\r\n    \"Maine\",\r\n    \"Michigan\",\r\n    \"Minnesota\",\r\n    \"Missouri\",\r\n    \"Mississippi\",\r\n    \"Montana\",\r\n    \"North Carolina\",\r\n    \" North Dakota\",\r\n    \"Nebraska\",\r\n    \"New Hampshire\",\r\n    \"New Jersey\",\r\n    \"New Mexico\",\r\n    \"Nevada\",\r\n    \"New York\",\r\n    \"Ohio\",\r\n    \"Oklahoma\",\r\n    \"Oregon\",\r\n    \"Pennsylvania\",\r\n    \"Puerto Rico\",\r\n    \"Rhode Island\",\r\n    \"South Carolina\",\r\n    \"South Dakota\",\r\n    \"Tennessee\",\r\n    \"Texas\",\r\n    \"Utah\",\r\n    \"Virginia\",\r\n    \"Virgin Islands\",\r\n    \"Vermont\",\r\n    \"Washington\",\r\n    \"Wisconsin\",\r\n    \"West Virginia\",\r\n    \"Wyoming\"\r\n];\r\n\r\nexport const GENDERCHOICES = ['Male', 'Female', 'I prefer not to answer',];\r\n\r\nexport const RACECHOICES = [\r\n    'White',\r\n    'Black or African American', \r\n    'American Indian or Alaska Native', \r\n    'Native Hawaiian or other Pacific Islander', \r\n    'Asian', \r\n    'I prefer not to answer'\r\n];\r\nexport const LANGUAGEPREFERENCECHOICES = ['English', 'Spanish'];\r\n\r\nexport const ETHNICITYCHOICES = ['Hispanic or Latino', 'Not Hispanic or Latino', 'I prefer not to answer'];\r\n\r\nexport const EDUCATIONLEVELCHOICES = [\r\n    'Completed 1st Grade', \r\n    'Completed 2nd Grade', \r\n    'Completed 3rd Grade', \r\n    'Completed 4th Grade', \r\n    'Completed 5th Grade', \r\n    'Completed 6th Grade', \r\n    'Completed 7th Grade', \r\n    'Completed 8th Grade', \r\n    'Completed 9th Grade', \r\n    'Completed 10th Grade', \r\n    'Completed 11th Grade', \r\n    'High School Degree', \r\n    'GED or High School Equivalency Diploma',\r\n    'Some Vocational or Technical School (No Certificate)',\r\n    'Some College (No Degree)',\r\n    'Associate\\'s Degree',\r\n    'Bachelor\\'s Degree',\r\n    'Master\\'s Degree',\r\n    'Doctoral Degree',\r\n    'Post-Doctorate Studies'\r\n];","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { Address } from 'projects/opt-library/src/service-objects/address';\r\n\r\n@Pipe({name: 'optAddressPipe'})\r\nexport class OptAddressPipe implements PipeTransform {\r\n    transform(address: Address[]): string {\r\n        let newAddress: string = \"\";\r\n\r\n        if(address[0] != null){\r\n            newAddress += address[0].addressLine1;\r\n\r\n            if(address[0].addressLine2 != null) {\r\n                newAddress += \", \";\r\n                newAddress += address[0].addressLine2;\r\n            }\r\n\r\n            newAddress = newAddress + \", \" + \"\\n\" + address[0].city + \", \" + address[0].state + \", \" + address[0].zipCode;\r\n    \r\n            if(address[0].zipExt != null) {\r\n                newAddress += \"-\";\r\n                newAddress += address[0].zipExt;\r\n            }\r\n\r\n            return newAddress;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Pipe({name: 'optDatePipe'})\r\nexport class OptDatePipe implements PipeTransform {\r\n\r\n    constructor(private datePipe: DatePipe) {}\r\n\r\n    transform(date: string): string {\r\n        let newDate: string=\"\";\r\n        newDate = this.datePipe.transform(date, 'MM/dd/yyyy');\r\n        return newDate;\r\n    }\r\n}","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { MaskPipe } from 'ngx-mask';\r\n\r\n@Pipe({name: 'optPhonePipe'})\r\nexport class OptPhonePipe implements PipeTransform {\r\n\r\n    constructor(private maskPipe: MaskPipe) {}\r\n\r\n    transform(mobilePhone: string): string {\r\n        let newMobilePhone: string = \"\";\r\n\r\n        if(mobilePhone == null || mobilePhone == \"\"){\r\n            return null;\r\n        } else if(mobilePhone.length == 10){\r\n            newMobilePhone = this.maskPipe.transform(mobilePhone, '(000) 000-0000');\r\n            return newMobilePhone;\r\n        } else if(mobilePhone.length == 11){\r\n            newMobilePhone = this.maskPipe.transform(mobilePhone, '+0 (000) 000-0000');\r\n            return newMobilePhone;\r\n        } else {\r\n            newMobilePhone = mobilePhone;\r\n            return newMobilePhone;\r\n        }\r\n    }\r\n}","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({name: 'optSsnPipe'})\r\nexport class OptSsnPipe implements PipeTransform {\r\n    transform(ssn: string): string {\r\n        let newSSN: string = \"\";\r\n        if(ssn.length == 9) {\r\n            for(var count = 0; count < ssn.length; count++){\r\n                if((count == 3) || (count == 5)){\r\n                    newSSN += \"-\"\r\n                }\r\n\r\n                if((count >= 0) && (count <= 4)) {\r\n                    newSSN += \"X\"\r\n                } else {\r\n                    newSSN += ssn.charAt(count);\r\n                }\r\n            }\r\n            return newSSN;\r\n        } else if(ssn.length == 4) {\r\n            for(var count = 0; count < 9; count++) {\r\n                if((count == 3) || (count == 5)){\r\n                    newSSN += \"-\"\r\n                }\r\n\r\n                if((count >= 0) && (count <= 4)) {\r\n                    newSSN += \"X\"\r\n                } else {\r\n                    newSSN += ssn.charAt(count - 5);\r\n                }\r\n            }\r\n            return newSSN;\r\n        } else {\r\n            return ssn;\r\n        }\r\n    }\r\n}","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { STATECHOICES } from '../../choices/choices';\r\nimport { Address } from '../../service-objects/address';\r\nimport { ClaimantSO } from '../../service-objects/claimant-so';\r\nimport { UpdateClaimantSO } from '../../service-objects/update-claimant-so';\r\nimport { ClaimantService } from '../../portal-services/claimant.service';\r\nimport { PortalService } from '../../portal-services/portal.service';\r\n\r\n@Component({\r\n  selector: 'opt-edit-claimant-address',\r\n  templateUrl: './edit-claimant-address.component.html',\r\n  styles: []\r\n})\r\nexport class EditClaimantAddressComponent implements OnInit {\r\n  @Input() address;\r\n\r\n  id: number;\r\n  addressId: number;\r\n  updateClaimant = new UpdateClaimantSO();\r\n  claimantProfileCopy = new ClaimantSO();\r\n  updateClaimantAddress = new Address();\r\n  stateChoices = STATECHOICES;\r\n  profileForm: FormGroup;\r\n  debug = false;\r\n\r\n  constructor(public activeModal: NgbActiveModal, private claimantService: ClaimantService, private portalService: PortalService, private fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.updateClaimantAddress = {\r\n      addressLine1: this.portalService.claimantSO.address[0].addressLine1,\r\n      addressLine2: this.portalService.claimantSO.address[0].addressLine2,\r\n      city: this.portalService.claimantSO.address[0].city,\r\n      state: this.portalService.claimantSO.address[0].state,\r\n      zipCode: this.portalService.claimantSO.address[0].zipCode,\r\n      zipExt: this.portalService.claimantSO.address[0].zipExt,\r\n      id: this.portalService.claimantSO.address[0].id,\r\n      lastInsertUpdateBy: this.portalService.claimantSO.address[0].lastInsertUpdateBy,\r\n      lastInsertUpdateTS: this.portalService.claimantSO.address[0].lastInsertUpdateTS\r\n    };\r\n\r\n    this.updateClaimant = {\r\n      middleInitial: null,\r\n      homePhone: null,\r\n      mobilePhone: null,\r\n      languagePreference: null,\r\n      educationLevel: null,\r\n      gender: null,\r\n      race: null,\r\n      ethnicity: null,\r\n      ivrPin: null,\r\n      documentDeliveryPreference: null,\r\n      lastInsertUpdateTS: null,\r\n      lastInsertUpdateBy: null,\r\n      address: [this.updateClaimantAddress],\r\n    };\r\n\r\n    this.profileForm = this.fb.group({\r\n        addressLine1: [null, Validators.required],\r\n        addressLine2: [null,  Validators.required],\r\n        city: [null,  Validators.required],\r\n        state: [null,  Validators.required],\r\n        zipCode: [null,  Validators.required],\r\n        zipExt: [null],\r\n      }\r\n    );\r\n  }\r\n\r\n  close() {\r\n    this.activeModal.close('Close click');\r\n  }\r\n\r\n  updateClaimantDetails() {\r\n    console.log(this.updateClaimant);\r\n    console.log(this.updateClaimantAddress);\r\n\r\n    this.updateClaimant = {\r\n      middleInitial: null,\r\n      homePhone: null,\r\n      mobilePhone: null,\r\n      languagePreference: null,\r\n      educationLevel: null,\r\n      gender: null,\r\n      race: null,\r\n      ethnicity: null,\r\n      ivrPin: null,\r\n      documentDeliveryPreference: null,\r\n      lastInsertUpdateTS: null,\r\n      lastInsertUpdateBy: null,\r\n      address: [this.updateClaimantAddress],\r\n    };\r\n\r\n    this.id = this.portalService.claimantSO.claimantId;\r\n    this.claimantService.updateClaimant(this.id, this.updateClaimant)\r\n      .subscribe(updateClaimant => { this.updateClaimant = updateClaimant });\r\n    this.close();\r\n  }\r\n\r\n  compareFn(c1: any, c2: any): boolean {\r\n    return c1 && c2 ? c1.id === c2.id : c1 === c2;\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { GENDERCHOICES, RACECHOICES, ETHNICITYCHOICES, EDUCATIONLEVELCHOICES, LANGUAGEPREFERENCECHOICES } from '../../choices/choices';\r\nimport { UpdateClaimantSO } from '../../service-objects/update-claimant-so';\r\nimport { ClaimantSO } from '../../service-objects/claimant-so';\r\nimport { ClaimantService } from '../../portal-services/claimant.service';\r\nimport { PortalService } from '../../portal-services/portal.service';\r\n\r\n@Component({\r\n  selector: 'opt-edit-claimant-details',\r\n  templateUrl: './edit-claimant-details.component.html',\r\n  styles: []\r\n})\r\nexport class EditClaimantDetailsComponent implements OnInit {\r\n  @Input() input;\r\n  id: number;\r\n  updateClaimant = new UpdateClaimantSO();\r\n  claimantProfileCopy =  new ClaimantSO();\r\n  claimantProfileEdit =  new ClaimantSO();\r\n  profileForm: FormGroup;\r\n  genderChoices = GENDERCHOICES;\r\n  raceChoices = RACECHOICES;\r\n  ethnicityChoices = ETHNICITYCHOICES;\r\n  educationLevelChoices = EDUCATIONLEVELCHOICES;\r\n  languagePreferenceChoices = LANGUAGEPREFERENCECHOICES;\r\n  debug = false;\r\n  newProfileForm: FormGroup;\r\n\r\n  constructor(public activeModal: NgbActiveModal, private claimantService: ClaimantService, private portalService: PortalService, private fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.claimantProfileCopy = {\r\n      claimantId: this.portalService.claimantSO.claimantId,\r\n      ssn: this.portalService.claimantSO.ssn,\r\n      dateOfBirth: this.portalService.claimantSO.dateOfBirth,\r\n      firstName: this.portalService.claimantSO.firstName,\r\n      middleInitial: this.portalService.claimantSO.middleInitial,\r\n      lastName: this.portalService.claimantSO.lastName,\r\n      homePhone: this.portalService.claimantSO.homePhone,\r\n      mobilePhone: this.portalService.claimantSO.mobilePhone,\r\n      languagePreference: this.portalService.claimantSO.languagePreference,\r\n      educationLevel: this.portalService.claimantSO.educationLevel,\r\n      gender: this.portalService.claimantSO.gender,\r\n      race: this.portalService.claimantSO.race,\r\n      ethnicity: this.portalService.claimantSO.ethnicity,\r\n      lastInsertUpdateTS: this.portalService.claimantSO.lastInsertUpdateTS,\r\n      lastInsertUpdateBy: this.portalService.claimantSO.lastInsertUpdateBy,\r\n      ivrPin: this.portalService.claimantSO.ivrPin,\r\n      documentDeliveryPreference: this.portalService.claimantSO.documentDeliveryPreference,\r\n      address: this.portalService.claimantSO.address,\r\n      email: this.portalService.claimantSO.email,\r\n      preferredOccupation: this.portalService.claimantSO.preferredOccupation,\r\n      alternateClaimantId: this.portalService.claimantSO.alternateClaimantId\r\n    }\r\n\r\n\r\n    this.updateClaimant = {\r\n      middleInitial: null,\r\n      homePhone: null,\r\n      mobilePhone: null,\r\n      languagePreference: null,\r\n      educationLevel: null,\r\n      gender: null,\r\n      race: null,\r\n      ethnicity: null,\r\n      ivrPin: null,\r\n      documentDeliveryPreference: null,\r\n      lastInsertUpdateTS: null,\r\n      lastInsertUpdateBy: null,\r\n      address: null,\r\n    };\r\n\r\n    this.profileForm = this.fb.group({\r\n        ssn: [null],\r\n        alternateClaimantId: [null],    \r\n        firstName: [null,Validators.minLength(1)],\r\n        lastName: [null,Validators.minLength(1)],      \r\n        middleInitial: [\r\n          null,\r\n          Validators.compose([\r\n            Validators.minLength(1),\r\n            Validators.maxLength(1),\r\n            Validators.required,\r\n            Validators.pattern(\"[a-zA-z]*\")\r\n          ])\r\n        ],\r\n        homePhone: [\r\n          null,\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.maxLength(10),\r\n            Validators.pattern(\"[0-9]*\")\r\n          ])\r\n        ],\r\n        mobilePhone: [\r\n          null,\r\n          Validators.compose([\r\n            Validators.maxLength(10),\r\n            Validators.pattern(\"[0-9]*\")\r\n          ])\r\n        ],\r\n\r\n        //There is no way they can choose null, so no validations are needed\r\n        languagePreference: [null],\r\n        gender: [null],\r\n        educationLevel: [null],\r\n        race: [null],\r\n        ethnicity: [null],\r\n      }\r\n    );\r\n  }\r\n\r\n  close() {\r\n    this.activeModal.close('Close click');\r\n  }\r\n\r\n  updateClaimantDetails() {\r\n    this.updateClaimant = {\r\n      middleInitial: this.claimantProfileCopy.middleInitial,\r\n      homePhone: this.claimantProfileCopy.homePhone,\r\n      mobilePhone: this.claimantProfileCopy.mobilePhone,\r\n      languagePreference: this.claimantProfileCopy.languagePreference,\r\n      gender: this.claimantProfileCopy.gender,\r\n      educationLevel: this.claimantProfileCopy.educationLevel,\r\n      race: this.claimantProfileCopy.race,\r\n      ethnicity: this.claimantProfileCopy.ethnicity,\r\n      ivrPin: null,\r\n      documentDeliveryPreference: null,\r\n      lastInsertUpdateTS: null,\r\n      lastInsertUpdateBy: null,\r\n      address: null,\r\n    }\r\n\r\n\r\n\r\n    this.id = this.portalService.claimantSO.claimantId;\r\n    this.close();\r\n    return this.claimantService.updateClaimant(this.id, this.updateClaimant)\r\n    .subscribe(updateClaimant => {\r\n      this.updateClaimant = updateClaimant;\r\n      console.log(this.claimantProfileCopy);\r\n      this.portalService.claimantSO = this.claimantProfileCopy;\r\n      console.log(this.portalService.claimantSO);\r\n    });\r\n  }\r\n\r\n  compareFn(c1: any, c2: any): boolean {\r\n    return c1 && c2 ? c1.id === c2.id : c1 === c2;\r\n  }\r\n  \r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'opt-opt-library',\n  template: `\n    <p>\n      opt-library works!\n    </p>\n  `,\n  styles: []\n})\nexport class OptLibraryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { ValdemortModule } from 'ngx-valdemort';\r\nimport { NgbModule } from '../../../../node_modules/@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\n\r\nimport { OptLibraryComponent } from './opt-library.component';\r\nimport { EditClaimantAddressComponent } from './edit-claimant-address/edit-claimant-address.component';\r\nimport { EditClaimantDetailsComponent } from './edit-claimant-details/edit-claimant-details.component';\r\nimport { MaskPipe } from 'ngx-mask';\r\nimport { OptSsnPipe } from '../custom-pipes/opt-ssn.pipe';\r\nimport { OptPhonePipe } from '../custom-pipes/opt-phone.pipe';\r\nimport { OptAddressPipe } from '../custom-pipes/opt-address.pipe';\r\nimport { OptDatePipe } from '../custom-pipes/opt-date.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    OptLibraryComponent,\r\n    EditClaimantDetailsComponent, \r\n    EditClaimantAddressComponent,\r\n    OptSsnPipe,\r\n    OptPhonePipe,\r\n    OptAddressPipe,\r\n    OptDatePipe,\r\n  ],\r\n  imports: [\r\n    NgbModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    ValdemortModule\r\n  ],\r\n  exports: [\r\n    OptLibraryComponent,\r\n    EditClaimantAddressComponent,\r\n    EditClaimantDetailsComponent,\r\n    OptSsnPipe,\r\n    OptPhonePipe,\r\n    OptAddressPipe,\r\n    OptDatePipe,\r\n  ],\r\n  entryComponents: [EditClaimantDetailsComponent, EditClaimantAddressComponent],\r\n  providers: [DatePipe, MaskPipe]\r\n})\r\nexport class OptLibraryModule { }\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OptLibraryService {\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport { SwalObject } from '../service-objects/swal-object';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertService {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  success(title: string, text: string) {\r\n    Swal.fire({\r\n      type: 'success',\r\n      title: title,\r\n      text: text\r\n    })\r\n  }\r\n\r\n  error(title: string, text: string) {\r\n    Swal.fire({\r\n      type: 'error',\r\n      title: title,\r\n      text: text\r\n    })\r\n  }\r\n\r\n  info(title: string, text: string) {\r\n    Swal.fire({\r\n      type: 'info',\r\n      title: title,\r\n      text: text\r\n    })\r\n  }\r\n\r\n  warning(title: string, text: string) {\r\n    Swal.fire({\r\n      type: 'warning',\r\n      title: title,\r\n      text: text\r\n    })\r\n  }\r\n\r\n  custom(swalObject: any){\r\n    return Swal.fire(swalObject);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, EMPTY, BehaviorSubject } from 'rxjs';\r\nimport { ToasterService } from './toaster.service';\r\nimport { catchError } from 'rxjs/operators'\r\nimport { ClaimantSO } from 'projects/opt-library/src/service-objects/claimant-so';\r\nimport { UpdateClaimantSO } from 'projects/opt-library/src/service-objects/update-claimant-so';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClaimantService {\r\n\r\n  // url = \"http://localhost:8080/claimantService/api/claimant\";\r\n  url = \"http://localhost:8082/api/claimant\";\r\n\r\n\r\n\r\n  constructor(private http: HttpClient, private toasterService: ToasterService) { }\r\n  public getClaimantById(claimantId: number): Observable<ClaimantSO> {\r\n    const claimantUrl = `${this.url}/getClaimantById/${claimantId}`;\r\n    return this.http.get<ClaimantSO>(claimantUrl)\r\n  }\r\n\r\n  public getAllClaimants(): Observable<ClaimantSO[]> { //Observable<ClaimantSO[]> {\r\n    const claimantUrl = `${this.url}/getAllClaimants`;\r\n    return this.http.get<ClaimantSO[]>(claimantUrl).pipe(catchError((err: any) => {\r\n      this.toasterService.danger(\"ERROR\", \"The port you are trying to access cannot be reached.\");\r\n      return EMPTY;\r\n    }));\r\n  }\r\n\r\n  public searchClaimant(claimantInfo: string): Observable<ClaimantSO[]> {\r\n    const claimantUrl = `${this.url}/searchClaimant/${claimantInfo}`;\r\n    return this.http.get<ClaimantSO[]>(claimantUrl).pipe(catchError((err: any) => {\r\n      this.toasterService.danger(\"ERROR\", \"The port you are trying to access cannot be reached.\");\r\n      return EMPTY;\r\n    }));\r\n  }\r\n\r\n\r\n\r\n  public registerClaimant(claimantSO: ClaimantSO): Observable<number>   {\r\n    console.log(\"Inside register claimant api\");\r\n    const claimantUrl = `${this.url}/registerClaimant`;\r\n    return this.http.post<number>(claimantUrl, claimantSO);\r\n  }\r\n\r\n\r\n  updateClaimant(id: number, updateClaimantSO: UpdateClaimantSO): Observable<UpdateClaimantSO> {\r\n    const claimantUrl = `${this.url}/updateClaimant/${id}`;\r\n    return this.http.put<UpdateClaimantSO>(claimantUrl, updateClaimantSO).pipe(catchError((err: any) => {\r\n      this.toasterService.danger(\"ERROR\", \"Cannot update profile.\");\r\n      return EMPTY;\r\n    }));\r\n  }\r\n}\r\n","import { Injectable, Component, Input } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalService {\r\n  constructor(public modalService: NgbModal) {\r\n  }\r\n\r\n  open(classToRender: any, content: any) {\r\n    const modalReference = this.modalService.open(classToRender);\r\n    if (modalReference.componentInstance) {\r\n      modalReference.componentInstance.input = content;\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.modalService.dismissAll();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ClaimantSO } from '../service-objects/claimant-so';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PortalService {\r\n  claimantSO: ClaimantSO;\r\n  firstName: string;\r\n  \r\n  constructor() { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Survey } from '../service-objects/survey';\r\nimport { SurveyResponseSO } from '../service-objects/survey-response-so';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SurveyService {\r\n\r\n  url = \"http://localhost:8080/surveyService/api/\";\r\n  // url = \"http://localhost:8081/api/\";\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public createSurvey(survey: Survey): any {\r\n    const claimantUrl = `${this.url}survey/addUpdateSurvey`;\r\n    return this.httpClient.post(claimantUrl, survey);\r\n  }\r\n\r\n  public getAllSurveys(): Observable<Survey[]> {\r\n    const claimantUrl = `${this.url}survey/getAllSurveys`;\r\n    return this.httpClient.get<Survey[]>(claimantUrl);\r\n  }\r\n\r\n  public getSurveyById(surveyId: number): Observable<Survey> {\r\n    const claimantUrl = `${this.url}survey/getSurveyById/${surveyId}`;\r\n    return this.httpClient.get<Survey>(claimantUrl);\r\n  }\r\n\r\n  public createSurveyResponse(survey: SurveyResponseSO): any {\r\n    console.log(\"POSTING\", survey);\r\n    const claimantUrl = `${this.url}surveyResponse/addResponse`;\r\n    return this.httpClient.post(claimantUrl, survey);\r\n  }\r\n\r\n  public getSurvey(surveyName: string, claimantId: number): Observable<SurveyResponseSO> {\r\n    const claimantUrl = `${this.url}survey/getSurvey/${surveyName}/${claimantId}/`;\r\n    return this.httpClient.get<SurveyResponseSO>(claimantUrl);\r\n  }\r\n\r\n  public deleteResponse(claimantId : number): any {\r\n    const claimantUrl = `${this.url}surveyResponse/deleteResponse/${claimantId}`;\r\n    return this.httpClient.delete<SurveyResponseSO[]>(claimantUrl).subscribe(() => console.log(\"Old responses deleted\"));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastrService, ToastContainerDirective } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToasterService {\r\n  overlayContainer: ToastContainerDirective;\r\n\r\n  constructor(private toastr: ToastrService) { \r\n    this.toastr = toastr;\r\n  }\r\n\r\n  success(title: string, text: string){\r\n    this.toastr.success(text, title);\r\n  }\r\n\r\n  info(title: string, text:string){\r\n     this.toastr.info(text, title)\r\n  }\r\n\r\n warning(title: string, text:string){\r\n    this.toastr.warning(text, title)\r\n }\r\n\r\n danger(title: string, text:string){\r\n  this.toastr.error(text, title);\r\n }\r\n\r\n\r\n}","/*\n * Public API Surface of opt-library\n */\n\nexport * from './lib/opt-library.service';\nexport * from './lib/opt-library.component';\nexport * from './lib/opt-library.module';\n","export class Address {\r\n    id: number;\r\n    addressLine1: string;\r\n    addressLine2: string;\r\n    state: string;\r\n    city: string;\r\n    zipCode: string;\r\n    zipExt: string;\r\n    lastInsertUpdateTS: Date;\r\n    lastInsertUpdateBy: string;\r\n}","import { Address } from './address';\r\n\r\nexport class ClaimantSO {\r\n    public claimantId: number;\r\n    public ssn: string;\r\n    public dateOfBirth: Date;\r\n    public firstName: string;\r\n    public middleInitial: string;\r\n    public lastName: string;\r\n    public homePhone: string;\r\n    public mobilePhone: string;\r\n    public languagePreference: string;\r\n    public educationLevel: string;\r\n    public gender: string;\r\n    public race: string;\r\n    public ethnicity: string;\r\n    public lastInsertUpdateTS: Date;\r\n    public lastInsertUpdateBy: string;\r\n    public ivrPin: string;\r\n    public documentDeliveryPreference: string;\r\n    public address: Address[];\r\n    public email: string;\r\n    public preferredOccupation: string;\r\n    public alternateClaimantId: string;\r\n}","import { Address } from './address';\r\n\r\nexport class UpdateClaimantSO {\r\n    middleInitial: string;\r\n    homePhone: string;\r\n    mobilePhone: string;\r\n    languagePreference: string;\r\n    educationLevel: string;\r\n    gender: string;\r\n    race: string;\r\n    ethnicity: string;\r\n    ivrPin: string;\r\n    documentDeliveryPreference: string;\r\n    lastInsertUpdateTS: Date;\r\n    lastInsertUpdateBy: string;\r\n    address: Address[];\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ToasterService } from 'projects/opt-library/src/portal-services/toaster.service';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgencyServiceService {\r\n\r\n  url = \"http://localhost:8080/agencyService\";\r\n\r\n  constructor(private http: HttpClient, private toasterService: ToasterService) {  }\r\n    public getAgencyStaff(agencyStaffId:string): Observable<any> {\r\n      // const agencyUrl = `${this.url}/api/agency/${agencyStaffId}`;\r\n      const agencyUrl = `${this.url}/api/agency/getAgencyByUserId/${agencyStaffId}`;\r\n\r\n      return this.http.get<any>(agencyUrl)\r\n    }\r\n \r\n\r\n}\r\n","    \r\nimport { KeycloakService } from 'keycloak-angular';\r\n\r\nimport { environment } from '../environments/environment';\r\n\r\nexport function initializer(keycloak: KeycloakService): () => Promise<any> {\r\n  return (): Promise<any> => {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        await keycloak.init({\r\n          config: environment.keycloak,\r\n          initOptions: {\r\n            onLoad: 'check-sso',\r\n            checkLoginIframe: false\r\n          },\r\n          enableBearerInterceptor: true,\r\n          bearerExcludedUrls: ['/login']\r\n        });\r\n        resolve();\r\n      } catch (error) {\r\n        reject(error);\r\n        keycloak.clearToken();\r\n      }\r\n    });\r\n  };\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, Router, ActivatedRoute} from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { HomeComponent } from './main/home/home.component';\r\nimport { ClaimantSearchComponent } from './main/claimant-search/claimant-search.component';\r\nimport { ClaimantOverviewComponent } from './main/claimant-overview/claimant-overview.component';\r\nimport { ClaimantProfileComponent } from './main/claimant-profile/claimant-profile.component';\r\nimport { ClaimantRegistrationComponent } from './main/claimant-registration/claimant-registration.component';\r\nimport { ClaimComponent } from './main/claim/claim.component';\r\nimport { AppAuthGuard } from './app.authguard';\r\nimport { NotAuthorizedComponent } from './not-authorized/not-authorized.component';\r\n\r\nconst routes: Routes = [  \r\n  {  \r\n     path:'',\r\n     redirectTo:'login',\r\n     pathMatch:'full'\r\n  },\r\n  {  \r\n     path:'login',\r\n     component:LoginComponent\r\n  },\r\n  {  \r\n     path:'main',\r\n     component:MainComponent,\r\n     children:[\r\n        {\r\n          path:'home',\r\n          component:HomeComponent,\r\n          canActivate: [AppAuthGuard]\r\n        },\r\n        {\r\n          path:'claimant-overview/:claimantId',\r\n          component:ClaimantOverviewComponent\r\n        },\r\n        {\r\n          path:'claimant-profile',\r\n          component:ClaimantProfileComponent\r\n        },\r\n        {\r\n          path:'claimant-registration',\r\n          component:ClaimantRegistrationComponent\r\n        },\r\n        {\r\n          path:'claimant-search/:claimantInfo',\r\n          component:ClaimantSearchComponent\r\n        },\r\n        {\r\n          path:'claim/:claimantId',\r\n          component: ClaimComponent\r\n        },\r\n        {  \r\n           path:'**',\r\n           redirectTo:'home'\r\n        }\r\n     ],\r\n     runGuardsAndResolvers: 'always'\r\n  },\r\n  {\r\n    path:'not-authorized',\r\n    component:NotAuthorizedComponent,\r\n  },\r\n  {  \r\n     path:'**',\r\n     redirectTo:'login',\r\n     pathMatch:'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\r\n  exports: [RouterModule],\r\n  providers: [AppAuthGuard]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, ActivatedRoute } from '@angular/router';\r\nimport { KeycloakAuthGuard, KeycloakService } from 'keycloak-angular';\r\nimport { AlertService } from 'projects/opt-library/src/portal-services/alert.service';\r\n \r\n@Injectable()\r\nexport class AppAuthGuard extends KeycloakAuthGuard {\r\n  constructor(protected router: Router, protected keycloakAngular: KeycloakService, private alert: AlertService, private activatedRoute: ActivatedRoute) {\r\n    super(router, keycloakAngular);\r\n  }\r\n \r\n  isAccessAllowed(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      if (!this.authenticated) {\r\n        this.keycloakAngular.login();\r\n        return;\r\n      }\r\n \r\n      const requiredRoles = route.data.roles;\r\n      const sample = this.activatedRoute.data;\r\n      console.log(sample);\r\n      if (!requiredRoles || requiredRoles.length === 0) {\r\n        return resolve(true);\r\n      } else {\r\n        if (!this.roles || this.roles.length === 0) {\r\n          this.router.navigate(['/not-authorized']);\r\n          this.alert.error(\"Error\",\"You are not allowed to visit this page\");\r\n          return resolve(true);\r\n        }\r\n        let granted: boolean = false;\r\n        for (const requiredRole of requiredRoles) {\r\n          if (this.roles.indexOf(requiredRole) > -1) {\r\n            granted = true;\r\n            return resolve(true);\r\n          }\r\n        }\r\n        if(granted == false) {\r\n          this.router.navigate(['/not-authorized']);\r\n          this.alert.error(\"Error\",\"You are not allowed to visit this page\");\r\n          return resolve(true);\r\n        }\r\n      }\r\n    });\r\n  }\r\n}","import { Component } from '@angular/core';\r\nimport { NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbDateFRParserFormatter } from \"../../src/app/parser/ngb-date-fr-parser-formatter\";\r\nimport { KeycloakService } from '../../node_modules/keycloak-angular';\r\nimport { KeycloakProfile } from '../../node_modules/keycloak-js';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  providers: [{provide: NgbDateParserFormatter, useClass: NgbDateFRParserFormatter}]\r\n})\r\nexport class AppComponent {\r\n  userDetails: KeycloakProfile;\r\n  title = 'Agency Portal';\r\n\r\n  constructor(private keycloakService: KeycloakService) {\r\n  }\r\n\r\n  async ngOnInit() {\r\n    if (await this.keycloakService.isLoggedIn()) {\r\n      this.userDetails = await this.keycloakService.loadUserProfile();\r\n    }\r\n  }\r\n}\r\n","//import angular modules\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, APP_INITIALIZER, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatTableModule } from '@angular/material';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\n//import external modules\r\nimport { NgbModule, NgbModalModule } from '@ng-bootstrap/ng-bootstrap'\r\nimport { ValdemortModule } from 'ngx-valdemort';\r\nimport { ToastrModule, ToastContainerModule } from 'ngx-toastr';\r\nimport { NgxMaskModule, MaskPipe } from 'ngx-mask';\r\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2'\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { NgIdleKeepaliveModule } from '@ng-idle/keepalive';\r\nimport { MomentModule } from 'angular2-moment';\r\n\r\n//import user made modules\r\nimport { OptLibraryModule } from 'projects/opt-library/src/public-api';\r\n\r\n//import components\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { SideNavBarComponent } from './side-nav-bar/side-nav-bar.component';\r\nimport { TopNavBarComponent } from './top-nav-bar/top-nav-bar.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { HomeComponent } from './main/home/home.component';\r\nimport { ClaimantSearchComponent } from './main/claimant-search/claimant-search.component';\r\nimport { ClaimantOverviewComponent } from './main/claimant-overview/claimant-overview.component';\r\nimport { ClaimantProfileComponent } from './main/claimant-profile/claimant-profile.component';\r\nimport { ClaimantRegistrationComponent } from './main/claimant-registration/claimant-registration.component';\r\nimport { ClaimComponent } from './main/claim/claim.component';\r\nimport { KeycloakAngularModule, KeycloakService } from 'keycloak-angular';\r\nimport { initializer } from './app-init';\r\nimport { JsqueryTestComponent } from './jsquery-test/jsquery-test.component';\r\nimport { NotAuthorizedComponent } from './not-authorized/not-authorized.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    MainComponent,\r\n    SideNavBarComponent,\r\n    TopNavBarComponent,\r\n    FooterComponent,\r\n    HomeComponent,\r\n    ClaimantSearchComponent,\r\n    ClaimantOverviewComponent,\r\n    ClaimantProfileComponent,\r\n    ClaimantRegistrationComponent,\r\n    ClaimComponent,\r\n    JsqueryTestComponent,\r\n    NotAuthorizedComponent,\r\n  ],\r\n  imports: [\r\n    OptLibraryModule,\r\n    ValdemortModule,\r\n    NgbModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot({\r\n      positionClass: \"toast-top-full-width\",\r\n      closeButton: true,\r\n      disableTimeOut: true,\r\n      maxOpened: 1,\r\n    }),\r\n    ToastContainerModule,\r\n    HttpClientModule,\r\n    KeycloakAngularModule,\r\n    MatTableModule,\r\n    FormsModule,\r\n    NgxMaskModule.forRoot(),\r\n    ReactiveFormsModule,\r\n    MatDatepickerModule,\r\n    NgbModule.forRoot(),\r\n    SweetAlert2Module.forRoot({\r\n      buttonsStyling: false,\r\n      customClass: 'modal-content',\r\n      confirmButtonClass: 'btn btn-primary',\r\n      cancelButtonClass: 'btn btn-info',\r\n    }),\r\n    NgIdleKeepaliveModule.forRoot(),\r\n    MomentModule\r\n  ],\r\n  entryComponents: [],\r\n  providers: [\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: initializer,\r\n      multi: true,\r\n      deps: [KeycloakService]\r\n    },\r\n    DatePipe, \r\n    MaskPipe\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\r\n})\r\nexport class AppModule { }\r\n","export const STATECHOICES = [\r\n    \"Alaska\",\r\n    \"Alabama\",\r\n    \"Arkansas\",\r\n    \"American Samoa\",\r\n    \"Arizona\",\r\n    \"California\",\r\n    \"Colorado\",\r\n    \"Connecticut\",\r\n    \"District of Columbia\",\r\n    \"Delaware\",\r\n    \"Florida\",\r\n    \"Georgia\",\r\n    \"Guam\",\r\n    \"Hawaii\",\r\n    \"Iowa\",\r\n    \"Idaho\",\r\n    \"Illinois\",\r\n    \"Indiana\",\r\n    \"Kansas\",\r\n    \"Kentucky\",\r\n    \"Louisiana\",\r\n    \"Massachusetts\",\r\n    \"Maryland\",\r\n    \"Maine\",\r\n    \"Michigan\",\r\n    \"Minnesota\",\r\n    \"Missouri\",\r\n    \"Mississippi\",\r\n    \"Montana\",\r\n    \"North Carolina\",\r\n    \" North Dakota\",\r\n    \"Nebraska\",\r\n    \"New Hampshire\",\r\n    \"New Jersey\",\r\n    \"New Mexico\",\r\n    \"Nevada\",\r\n    \"New York\",\r\n    \"Ohio\",\r\n    \"Oklahoma\",\r\n    \"Oregon\",\r\n    \"Pennsylvania\",\r\n    \"Puerto Rico\",\r\n    \"Rhode Island\",\r\n    \"South Carolina\",\r\n    \"South Dakota\",\r\n    \"Tennessee\",\r\n    \"Texas\",\r\n    \"Utah\",\r\n    \"Virginia\",\r\n    \"Virgin Islands\",\r\n    \"Vermont\",\r\n    \"Washington\",\r\n    \"Wisconsin\",\r\n    \"West Virginia\",\r\n    \"Wyoming\"\r\n];\r\n\r\nexport const GENDERCHOICES = ['Male', 'Female', 'I prefer not to answer',];\r\n\r\nexport const RACECHOICES = [\r\n    'White',\r\n    'Black or African American', \r\n    'American Indian or Alaska Native', \r\n    'Native Hawaiian or other Pacific Islander', \r\n    'Asian', \r\n    'I prefer not to answer'\r\n];\r\nexport const LANGUAGEPREFERENCECHOICES = ['English', 'Spanish'];\r\n\r\nexport const ETHNICITYCHOICES = ['Hispanic or Latino', 'Not Hispanic or Latino', 'I prefer not to answer'];\r\n\r\nexport const EDUCATIONLEVELCHOICES = [\r\n    'Completed 1st Grade', \r\n    'Completed 2nd Grade', \r\n    'Completed 3rd Grade', \r\n    'Completed 4th Grade', \r\n    'Completed 5th Grade', \r\n    'Completed 6th Grade', \r\n    'Completed 7th Grade', \r\n    'Completed 8th Grade', \r\n    'Completed 9th Grade', \r\n    'Completed 10th Grade', \r\n    'Completed 11th Grade', \r\n    'High School Degree', \r\n    'GED or High School Equivalency Diploma',\r\n    'Some Vocational or Technical School (No Certificate)',\r\n    'Some College (No Degree)',\r\n    'Associate\\'s Degree',\r\n    'Bachelor\\'s Degree',\r\n    'Master\\'s Degree',\r\n    'Doctoral Degree',\r\n    'Post-Doctorate Studies'\r\n];","export const SURVEY_TITLE = \"UNEMPLOYMENT INSURANCE QUALITY CONTROL CLAIMANT QUESTIONNAIRE\";\r\nexport const SURVEY_DEFINITION = \"{\\\"title\\\":\\\"UNEMPLOYMENT INSURANCE QUALITY CONTROL CLAIMANT QUESTIONNAIRE\\\",\\\"pages\\\":[{\\\"name\\\":\\\"Introduction\\\",\\\"elements\\\":[{\\\"type\\\":\\\"radiogroup\\\",\\\"name\\\":\\\"question2\\\",\\\"title\\\":\\\"Are you a citizen of the United States?\\\",\\\"isRequired\\\":true,\\\"choices\\\":[{\\\"value\\\":\\\"item1\\\",\\\"text\\\":\\\"Yes\\\"},{\\\"value\\\":\\\"item2\\\",\\\"text\\\":\\\"No\\\"}]},{\\\"type\\\":\\\"radiogroup\\\",\\\"name\\\":\\\"question3\\\",\\\"visibleIf\\\":\\\"{question2} = \\\\\\\"item2\\\\\\\"\\\",\\\"title\\\":\\\" When you were working in the U.S., were you issued an Alien Registration Receipt Card, Form I-151, commonly called a \\\\\\\"green card\\\\\\\"? \\\",\\\"isRequired\\\":true,\\\"choices\\\":[{\\\"value\\\":\\\"item1\\\",\\\"text\\\":\\\"Yes\\\"},{\\\"value\\\":\\\"item2\\\",\\\"text\\\":\\\"No\\\"}]},{\\\"type\\\":\\\"text\\\",\\\"name\\\":\\\"question4\\\",\\\"visibleIf\\\":\\\"{question3} = \\\\\\\"item2\\\\\\\"\\\",\\\"title\\\":\\\"When you were working in the U.S., what document or form number were you issued?\\\",\\\"isRequired\\\":true}],\\\"title\\\":\\\"Preliminaries\\\",\\\"description\\\":\\\"Please answer the following questions as accurately as possible.\\\\nIf you do not know the answer, leave it blank. The interviewer\\\\nwill discuss it with you later. If you need help, please ask.\\\\nPlease print or write clearly.\\\\n\\\\nYour answers will be used to determine if your unemployment\\\\ninsurance benefits were paid properly. The information you give\\\\nus will be verified. The law provides penalties for false\\\\nstatements to obtain benefits.\\\"},{\\\"name\\\":\\\"Educational Background\\\",\\\"elements\\\":[{\\\"type\\\":\\\"radiogroup\\\",\\\"name\\\":\\\"question5\\\",\\\"title\\\":\\\"What is the highest level of academic schooling you completed? (A high school equivalency diploma or GED is equal to 12 years of school.)\\\",\\\"isRequired\\\":true,\\\"choices\\\":[{\\\"value\\\":\\\"item1\\\",\\\"text\\\":\\\"Grade School\\\"},{\\\"value\\\":\\\"item2\\\",\\\"text\\\":\\\"High School\\\"},{\\\"value\\\":\\\"item3\\\",\\\"text\\\":\\\"College\\\"}]},{\\\"type\\\":\\\"radiogroup\\\",\\\"name\\\":\\\"question6\\\",\\\"visibleIf\\\":\\\"{question5} = \\\\\\\"item1\\\\\\\"\\\",\\\"title\\\":\\\"What grade level have you finished in grade school?\\\",\\\"isRequired\\\":true,\\\"choices\\\":[{\\\"value\\\":\\\"item1\\\",\\\"text\\\":\\\"1st Grade\\\"},{\\\"value\\\":\\\"item2\\\",\\\"text\\\":\\\"2nd Grade\\\"},{\\\"value\\\":\\\"item3\\\",\\\"text\\\":\\\"3rd Grade\\\"},{\\\"value\\\":\\\"item4\\\",\\\"text\\\":\\\"4th Grade\\\"},{\\\"value\\\":\\\"item5\\\",\\\"text\\\":\\\"5th Grade\\\"},{\\\"value\\\":\\\"item6\\\",\\\"text\\\":\\\"6th Grade\\\"},{\\\"value\\\":\\\"item7\\\",\\\"text\\\":\\\"7th Grade\\\"},{\\\"value\\\":\\\"item8\\\",\\\"text\\\":\\\"8th Grade\\\"}]},{\\\"type\\\":\\\"radiogroup\\\",\\\"name\\\":\\\"question7\\\",\\\"visibleIf\\\":\\\"{question5} = \\\\\\\"item2\\\\\\\"\\\",\\\"title\\\":\\\"What grade level have you finished in high school?\\\",\\\"isRequired\\\":true,\\\"choices\\\":[{\\\"value\\\":\\\"item1\\\",\\\"text\\\":\\\"9th Grade\\\"},{\\\"value\\\":\\\"item2\\\",\\\"text\\\":\\\"10th Grade\\\"},{\\\"value\\\":\\\"item3\\\",\\\"text\\\":\\\"11th Grade\\\"},{\\\"value\\\":\\\"item4\\\",\\\"text\\\":\\\"12th Grade\\\"}]},{\\\"type\\\":\\\"radiogroup\\\",\\\"name\\\":\\\"question8\\\",\\\"visibleIf\\\":\\\"{question5} = \\\\\\\"item3\\\\\\\"\\\",\\\"title\\\":\\\"What degree did you get in College?\\\",\\\"isRequired\\\":true,\\\"choices\\\":[{\\\"value\\\":\\\"item1\\\",\\\"text\\\":\\\"Undergraduate Degree\\\"},{\\\"value\\\":\\\"item2\\\",\\\"text\\\":\\\"Associate Degree\\\"},{\\\"value\\\":\\\"item3\\\",\\\"text\\\":\\\"Graduate Degree\\\"}]},{\\\"type\\\":\\\"text\\\",\\\"name\\\":\\\"question15\\\",\\\"visibleIf\\\":\\\"{question5} = \\\\\\\"item3\\\\\\\"\\\",\\\"title\\\":\\\"What was/were your major area(s) of study?\\\",\\\"isRequired\\\":true},{\\\"type\\\":\\\"datepicker\\\",\\\"name\\\":\\\"question9\\\",\\\"title\\\":\\\"When did you last attend school?\\\",\\\"isRequired\\\":true},{\\\"type\\\":\\\"text\\\",\\\"name\\\":\\\"question10\\\",\\\"title\\\":\\\"Name of School you last attended\\\",\\\"isRequired\\\":true},{\\\"type\\\":\\\"multipletext\\\",\\\"name\\\":\\\"question12\\\",\\\"title\\\":\\\"Location of last school you attended\\\",\\\"isRequired\\\":true,\\\"items\\\":[{\\\"name\\\":\\\"text1\\\",\\\"title\\\":\\\"City\\\"},{\\\"name\\\":\\\"text2\\\",\\\"title\\\":\\\"State\\\"}]},{\\\"type\\\":\\\"radiogroup\\\",\\\"name\\\":\\\"question16\\\",\\\"title\\\":\\\"Have you ever had vocational or technical school training? \\\",\\\"isRequired\\\":true,\\\"choices\\\":[{\\\"value\\\":\\\"item1\\\",\\\"text\\\":\\\"Yes\\\"},{\\\"value\\\":\\\"item2\\\",\\\"text\\\":\\\"No\\\"}]},{\\\"type\\\":\\\"text\\\",\\\"name\\\":\\\"question17\\\",\\\"visibleIf\\\":\\\"{question16} = \\\\\\\"item1\\\\\\\"\\\",\\\"title\\\":\\\"What kind of certificate do you have?\\\",\\\"isRequired\\\":true}],\\\"title\\\":\\\"Educational Background\\\"},{\\\"name\\\":\\\"Employment History\\\",\\\"elements\\\":[{\\\"type\\\":\\\"matrixdropdown\\\",\\\"name\\\":\\\"question1\\\",\\\"title\\\":\\\"Please provide the following information about your jobs prior to filing your most recent claim for unemployment. (BEGIN WITH YOUR MOST RECENT EMPLOYER AND WORK BACK):\\\",\\\"isRequired\\\":true,\\\"columns\\\":[{\\\"name\\\":\\\"Most Recent Employer\\\"},{\\\"name\\\":\\\"2nd Most Recent Employer\\\"},{\\\"name\\\":\\\"3rd Most Recent Employer\\\"},{\\\"name\\\":\\\"4th Most Recent Employer\\\"}],\\\"choices\\\":[1,2,3,4,5],\\\"cellType\\\":\\\"text\\\",\\\"rows\\\":[\\\" Employer name and address\\\",\\\"Name of supervisor\\\",\\\"Address/location of job site\\\",\\\"Phone number of employer\\\",\\\"Type of Business\\\",\\\"Last Day Worked\\\",\\\"Job Title\\\",\\\"Usual Wage\\\",\\\"Reason for Separation\\\"]},{\\\"type\\\":\\\"checkbox\\\",\\\"name\\\":\\\"question11\\\",\\\"title\\\":\\\"Which days of the week did you usually work on your most recent job.\\\",\\\"isRequired\\\":true,\\\"choices\\\":[\\\"Sunday\\\",\\\"Monday\\\",\\\"Tuesday\\\",\\\"Wednesday\\\",\\\"Thursday\\\",\\\"Friday\\\",\\\"Saturday\\\"]},{\\\"type\\\":\\\"radiogroup\\\",\\\"name\\\":\\\"question13\\\",\\\"title\\\":\\\"What shift did you usually work on your most recent job? \\\",\\\"isRequired\\\":true,\\\"choices\\\":[\\\"1st Shift - Day\\\",\\\"2nd Shift - Swing\\\",\\\"3rd Shift - Night\\\",\\\"Other Shift - Including Rotation\\\"]},{\\\"type\\\":\\\"comment\\\",\\\"name\\\":\\\"question14\\\",\\\"title\\\":\\\"What were your main duties while at your most recent job? \\\",\\\"isRequired\\\":true},{\\\"type\\\":\\\"radiogroup\\\",\\\"name\\\":\\\"Is this the kind of work you usually do? \\\",\\\"isRequired\\\":true,\\\"choices\\\":[\\\"Yes\\\",\\\"No\\\"]},{\\\"type\\\":\\\"comment\\\",\\\"name\\\":\\\"What kind of work do you usually do?\\\",\\\"visibleIf\\\":\\\"{Is this the kind of work you usually do? } = \\\\\\\"No\\\\\\\"\\\",\\\"isRequired\\\":true},{\\\"type\\\":\\\"text\\\",\\\"name\\\":\\\"question18\\\",\\\"title\\\":\\\"What is your normal wage for the work you usually do?  (per month)\\\",\\\"isRequired\\\":true},{\\\"type\\\":\\\"radiogroup\\\",\\\"name\\\":\\\"question19\\\",\\\"title\\\":\\\"Do you expect to be called back to work by any past employer? \\\",\\\"isRequired\\\":true,\\\"choices\\\":[{\\\"value\\\":\\\"item1\\\",\\\"text\\\":\\\"Yes\\\"},{\\\"value\\\":\\\"item2\\\",\\\"text\\\":\\\"No\\\"}]},{\\\"type\\\":\\\"radiogroup\\\",\\\"name\\\":\\\"question20\\\",\\\"title\\\":\\\"Do you have or have you received a recall notice? \\\",\\\"choices\\\":[{\\\"value\\\":\\\"item1\\\",\\\"text\\\":\\\"Yes\\\"},{\\\"value\\\":\\\"item2\\\",\\\"text\\\":\\\"No\\\"}]},{\\\"type\\\":\\\"datepicker\\\",\\\"name\\\":\\\"question21\\\",\\\"visibleIf\\\":\\\"{question20} = \\\\\\\"item1\\\\\\\"\\\",\\\"title\\\":\\\"When were you told you would be recalled?\\\",\\\"isRequired\\\":true},{\\\"type\\\":\\\"text\\\",\\\"name\\\":\\\"question22\\\",\\\"visibleIf\\\":\\\"{question20} = \\\\\\\"item1\\\\\\\"\\\",\\\"title\\\":\\\"Who notified you about the recall? \\\",\\\"isRequired\\\":true},{\\\"type\\\":\\\"datepicker\\\",\\\"name\\\":\\\"question23\\\",\\\"visibleIf\\\":\\\"{question20} = \\\\\\\"item1\\\\\\\"\\\",\\\"title\\\":\\\"When will you report back to work?\\\",\\\"isRequired\\\":true},{\\\"type\\\":\\\"text\\\",\\\"name\\\":\\\"question24\\\",\\\"visibleIf\\\":\\\"{question20} = \\\\\\\"item1\\\\\\\"\\\",\\\"title\\\":\\\"Name of employer\\\",\\\"isRequired\\\":true},{\\\"type\\\":\\\"multipletext\\\",\\\"name\\\":\\\"question25\\\",\\\"visibleIf\\\":\\\"{question20} = \\\\\\\"item1\\\\\\\"\\\",\\\"title\\\":\\\"Address of employer \\\",\\\"isRequired\\\":true,\\\"items\\\":[{\\\"name\\\":\\\"Street\\\"},{\\\"name\\\":\\\"City\\\"},{\\\"name\\\":\\\"State\\\"},{\\\"name\\\":\\\"Zip Code\\\"}]}],\\\"title\\\":\\\"Employment History\\\"},{\\\"name\\\":\\\"Work Search\\\",\\\"elements\\\":[{\\\"type\\\":\\\"text\\\",\\\"name\\\":\\\"question26\\\",\\\"title\\\":\\\"How many miles are you willing to travel one-way daily to a job?\\\",\\\"isRequired\\\":true},{\\\"type\\\":\\\"text\\\",\\\"name\\\":\\\"question27\\\",\\\"title\\\":\\\"How many minutes are you willing to travel one-way daily to a job? \\\",\\\"isRequired\\\":true},{\\\"type\\\":\\\"radiogroup\\\",\\\"name\\\":\\\"question28\\\",\\\"title\\\":\\\"Do you have a valid driver's license? \\\",\\\"isRequired\\\":true,\\\"choices\\\":[{\\\"value\\\":\\\"item1\\\",\\\"text\\\":\\\"Yes\\\"},{\\\"value\\\":\\\"item2\\\",\\\"text\\\":\\\"No\\\"}]},{\\\"type\\\":\\\"checkbox\\\",\\\"name\\\":\\\"question29\\\",\\\"title\\\":\\\"By what means do you normally travel to look for work? \\\",\\\"hasOther\\\":true,\\\"choices\\\":[{\\\"value\\\":\\\"item1\\\",\\\"text\\\":\\\"Personally owned vehicle\\\"},{\\\"value\\\":\\\"item2\\\",\\\"text\\\":\\\"Borrow a vehicle\\\"},{\\\"value\\\":\\\"item3\\\",\\\"text\\\":\\\"Ride with friends or relatives\\\"},{\\\"value\\\":\\\"item4\\\",\\\"text\\\":\\\"Public Transportation\\\"}]},{\\\"type\\\":\\\"text\\\",\\\"name\\\":\\\"question30\\\",\\\"title\\\":\\\"In what location(s) do you plan to look for work?\\\"},{\\\"type\\\":\\\"text\\\",\\\"name\\\":\\\"question31\\\",\\\"title\\\":\\\"In what location(s) have you looked for work? \\\"},{\\\"type\\\":\\\"radiogroup\\\",\\\"name\\\":\\\"question32\\\",\\\"title\\\":\\\"Would a job have to last a certain period of time before you  would accept it? \\\",\\\"choices\\\":[{\\\"value\\\":\\\"item1\\\",\\\"text\\\":\\\"Yes\\\"},{\\\"value\\\":\\\"item2\\\",\\\"text\\\":\\\"No\\\"}]},{\\\"type\\\":\\\"matrixdropdown\\\",\\\"name\\\":\\\"question33\\\",\\\"title\\\":\\\"What is the type of work you are looking for and what is the length and type of experience you have in this occupation? \\\",\\\"isRequired\\\":true,\\\"columns\\\":[{\\\"name\\\":\\\"Type of Work\\\"},{\\\"name\\\":\\\"Length of Experience\\\"}],\\\"choices\\\":[1,2,3,4,5],\\\"cellType\\\":\\\"text\\\",\\\"rows\\\":[{\\\"value\\\":\\\"item1\\\",\\\"text\\\":\\\"a\\\"},{\\\"value\\\":\\\"item2\\\",\\\"text\\\":\\\"b\\\"},{\\\"value\\\":\\\"item3\\\",\\\"text\\\":\\\"c\\\"},{\\\"value\\\":\\\"item4\\\",\\\"text\\\":\\\"d\\\"}]},{\\\"type\\\":\\\"text\\\",\\\"name\\\":\\\"question34\\\",\\\"title\\\":\\\"What is the lowest rate of pay you will accept for a job?\\\"},{\\\"type\\\":\\\"checkbox\\\",\\\"name\\\":\\\"question35\\\",\\\"title\\\":\\\"Which shifts are you willing and able to work on a job?\\\",\\\"choices\\\":[{\\\"value\\\":\\\"item1\\\",\\\"text\\\":\\\"1st Shift - Day\\\"},{\\\"value\\\":\\\"item2\\\",\\\"text\\\":\\\"2nd Shift - Swing\\\"},{\\\"value\\\":\\\"item3\\\",\\\"text\\\":\\\"3rd Shift - Night\\\"},{\\\"value\\\":\\\"item4\\\",\\\"text\\\":\\\"Other Shift - Including Rotation\\\"}]},{\\\"type\\\":\\\"checkbox\\\",\\\"name\\\":\\\"question36\\\",\\\"title\\\":\\\"Which days of the week are you willing and able to work\\\",\\\"choices\\\":[{\\\"value\\\":\\\"item1\\\",\\\"text\\\":\\\"Sunday\\\"},{\\\"value\\\":\\\"item2\\\",\\\"text\\\":\\\"Monday\\\"},{\\\"value\\\":\\\"item3\\\",\\\"text\\\":\\\"Tuesday\\\"},{\\\"value\\\":\\\"item4\\\",\\\"text\\\":\\\"Wednesday\\\"},{\\\"value\\\":\\\"item5\\\",\\\"text\\\":\\\"Thursday\\\"},{\\\"value\\\":\\\"item6\\\",\\\"text\\\":\\\"Friday\\\"},{\\\"value\\\":\\\"item7\\\",\\\"text\\\":\\\"Saturday\\\"}]}],\\\"title\\\":\\\"Work Search\\\",\\\"description\\\":\\\"The next group of questions ask about your efforts to find work. Some\\\\nof these questions will refer to a specific week, called \\\\\\\" THE WEEK.\\\\\\\"\\\\n\\\\\\\"THE WEEK\\\\\\\" is the week that began on <placeholder date> and ended on\\\\n<placeholder date>. Please keep these dates in mind when\\\\nanswering the questions about \\\\\\\"THE WEEK.\\\\\\\" \\\"}]}\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styles: []\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as $ from 'jquery';\r\n\r\n\r\ndeclare global {\r\n  interface JQuery {\r\n    footable(): JQuery;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-jsquery-test',\r\n  templateUrl: './jsquery-test.component.html',\r\n  styles: []\r\n})\r\nexport class JsqueryTestComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    \r\n    // (<any>('.table')).footable();\r\n    // $(\"button\").click(\r\n    //   function() {\r\n    //     $(\".test\").hide();\r\n    //     alert(\"hello werld\");\r\n    //   }\r\n    // );\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { KeycloakService } from 'keycloak-angular';\r\nimport { Router } from '../../../node_modules/@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(private keycloakService: KeycloakService, private router: Router) { }\r\n\r\n  async ngOnInit() {\r\n    console.log(this.keycloakService);\r\n    if(await this.keycloakService.isLoggedIn()){\r\n      this.router.navigate([`/main`]);\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vY2xhaW0vY2xhaW0uY29tcG9uZW50LmNzcyJ9 */\"","//-------------------- BIG FILE LAYOUT HAS THESE --------------------------\r\n// a suggestion for coding standards\r\n// if the team is advanced, you can make a parser to automate documentation\r\n\r\n//---------------------------- IMPORT -------------------------------------\r\n\r\n//import angular modules\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n//import external modules\r\nimport * as SurveyEditor from 'surveyjs-editor';\r\nimport * as Survey from 'survey-angular';\r\n\r\n//import user made modules\r\n//import components\r\n\r\n//import services\r\nimport { ToasterService } from 'projects/opt-library/src/portal-services/toaster.service';\r\nimport { AlertService } from 'projects/opt-library/src/portal-services/alert.service';\r\n\r\n//import models or constants\r\nimport { SURVEY_TITLE, SURVEY_DEFINITION } from '../../choices/surveyQuestions';\r\nimport { SurveyService } from 'projects/opt-library/src/portal-services/survey.service';\r\nimport { SurveyResponseSO } from 'projects/opt-library/src/service-objects/survey-response-so';\r\nimport { delay } from 'rxjs/internal/operators/delay';\r\n\r\n  //---------------------------- COMPONENT -------------------------------------\r\n\r\n@Component({\r\n  selector: 'app-claim',\r\n  templateUrl: './claim.component.html',\r\n  styleUrls: ['./claim.component.css']\r\n})\r\nexport class ClaimComponent implements OnInit {\r\n\r\n  //------------------- INPUT OUTPUT VARIABLES INITIALIZATION --------------------\r\n\r\n  @Input() claimantId: number;\r\n\r\n  //------------------------ VARIABLES INITIALIZATION ---------------------------\r\n  surveyObject: any;\r\n  surveyResponses: any;\r\n  surveyDefinition: any;\r\n  surveyResponseSO: SurveyResponseSO;\r\n  surveyTitle: string;\r\n  confirmReset: object;\r\n\r\n  debug: boolean;\r\n  completeLastPage: boolean;\r\n  editor: SurveyEditor.SurveyEditor;\r\n\r\n//-------------------------------- CONSTRUCTOR ---------------------------------\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private surveyService: SurveyService,\r\n    private toasterService: ToasterService,\r\n    private alert: AlertService,\r\n    private router: Router) {\r\n\r\n  }\r\n\r\n//--------------------------------- NG ON INIT ----------------------------------\r\n\r\n  ngOnInit() {\r\n    //set sweetAlert\r\n    this.confirmReset = {\r\n      type: 'info',\r\n      title: \"Info\",\r\n      text: \"Are you sure you want to reset the survey data\",\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Reset the survey data',\r\n      cancelButtonText: 'Cancel',\r\n      confirmButtonClass: 'btn btn-primary',\r\n      cancelButtonClass: 'btn btn-info',\r\n    }\r\n\r\n\r\n    //get claimantId from routes\r\n    this.claimantId = Number(this.route\r\n      .snapshot\r\n      .paramMap\r\n      .get('claimantId')\r\n    );\r\n    this.debug = false;\r\n\r\n    //check if claimant id was inputted\r\n    console.log(\"Claimant Id value is \", this.claimantId);\r\n\r\n\r\n    //get initial survey_title and survey_definition from a file\r\n    this.surveyTitle = SURVEY_TITLE;\r\n    this.surveyDefinition = SURVEY_DEFINITION,\r\n\r\n\r\n      //Set the completeLastPage to false\r\n      this.completeLastPage = false;\r\n\r\n\r\n    //gets the survey from the database\r\n    this.getSurvey(SURVEY_TITLE, this.claimantId);\r\n  }\r\n\r\n//-------------------------------- SURVEY FUNCTIONS  ---------------------------------\r\n\r\n\r\n  getSurvey(surveyName: string, claimantId: number) {\r\n    return this.surveyService\r\n      .getSurvey(surveyName, claimantId)\r\n\r\n      //subscribe waits for the getSurvey query to the database\r\n      .subscribe(\r\n        survey => {\r\n          console.log(survey);\r\n\r\n\r\n          //Saves the title of the survey\r\n          this.surveyTitle = survey.surveyName;\r\n\r\n          // ERROR CHECKING AND VALIDATION\r\n          if (survey.surveyResponse != null) {\r\n            //if doesnt return anything saves the responses and parse\r\n            this.surveyResponses = JSON.parse(survey.surveyResponse);\r\n          }\r\n          else {\r\n            console.log(\"Survey Error\",\"no previous survey response\");\r\n          }\r\n\r\n        //surveyDefinition saves the surveyDefinition from the survey\r\n\r\n          if (survey.surveyDefinition != null) {\r\n            this.surveyDefinition = JSON.parse(survey.surveyDefinition);\r\n          }\r\n          else {\r\n            console.log(\"Survey Error\",\"No previous survey definition\");\r\n          }\r\n\r\n          //now the surveyDefinition is loaded, we can now show the survey\r\n          this.showSurveyWithResponses(this.surveyDefinition);\r\n\r\n          //we now can try to hide the original buttons\r\n          this.hideOriginalButtons();\r\n\r\n        }\r\n      );\r\n\r\n  }\r\n\r\n  //RENDER A SURVEY\r\n  showSurveyWithResponses(surveyDefinition: any) {\r\n    this.surveyObject = new Survey.ReactSurveyModel(surveyDefinition);  \r\n    //ERROR CHECKING\r\n    if(this.surveyObject != null){\r\n      this.surveyObject.data = this.surveyResponses;\r\n      Survey.SurveyNG.render('surveyContainer', { model: this.surveyObject });\r\n    }\r\n    else{\r\n      console.log(\"Survey Error\", \"survey cannot be rendered\");\r\n    }\r\n\r\n    //updates backend and restes all values there\r\n    this.surveyService.deleteResponse(this.claimantId);\r\n  }\r\n\r\n\r\n  //SEND RESPONSES TO BACKEND\r\n  sendResponses() {\r\n    this.saveSurveyToSO(this.claimantId);\r\n    this.postSurvey(this.surveyResponseSO);\r\n    console.log(\"here in send responses\");\r\n  }\r\n\r\n\r\n  //STORE RESPONSES AND CALL SEND\r\n  storeResponseAndSend(surveyData: any) {\r\n    this.surveyResponses = surveyData.data;\r\n    this.sendResponses();\r\n    console.log(\"RESPONSES\", this.surveyResponses);\r\n    this.toasterService.success(\"Success\", \"Survey has been saved!\");\r\n  }\r\n\r\n  //PUT THE VALUES TO A SERVICE-OBJECT\r\n  saveSurveyToSO(claimantId: number) {\r\n    this.surveyResponseSO = {\r\n      claimantId: claimantId,\r\n      responseId: null,\r\n      surveyName: this.surveyTitle,\r\n      surveyDefinition: JSON.stringify(this.surveyDefinition),\r\n      surveyResponse: JSON.stringify(this.surveyResponses),\r\n    }\r\n\r\n    if(this.surveyResponseSO == null){\r\n      console.log(\"Survey Error\",\"Survey cannot be saved to a service object\");\r\n\r\n    }\r\n\r\n  }\r\n\r\n  //DELETE SURVEY RESPONSES\r\n  //used to keep the database only have one response per claimant\r\n  deleteAllSurveyResponses() {\r\n    this.surveyService.deleteResponse(this.claimantId);\r\n  }\r\n\r\n  //SENDS THE RESPONSES AS AN HTTP POST\r\n  postSurvey(surveyResponseSO: SurveyResponseSO) {\r\n    this.surveyService.createSurveyResponse(surveyResponseSO).subscribe();\r\n  }\r\n\r\n\r\n\r\n//RESETS SURVEY VALUES LOCALLY AND TO THE DB\r\n  resetSurveyValues() {\r\n    //this only resets local survey values, doesnt update backend\r\n    this.surveyResponses = null;\r\n    this.surveyObject.clear();\r\n\r\n    //updates backend and resets all values there\r\n    this.surveyService.deleteResponse(this.claimantId);\r\n\r\n  }\r\n\r\n\r\n\r\n  //-------------------------------- BUTTON FUNCTIONS ---------------------------------\r\n\r\n  //ALERT MODULE FUNCTION\r\n  confirmToReset() {\r\n    this.resetSurveyValues();\r\n    this.toasterService.danger(\"Warning\", \"Your answers have been reset\");\r\n    this.router.navigate([`/main/claimant-overview/${this.claimantId}`]);\r\n  }\r\n\r\n\r\n  // A SPECIAL FUNCTION NEEDS TO BE CALLED TO SET THE ORIGINAL NAV BUTTONS TO HIDE\r\n  hideOriginalButtons() {\r\n    this.surveyObject.showNavigationButtons = false;\r\n    this.surveyObject.render();\r\n  }\r\n\r\n  resetButton() {\r\n    this.alert\r\n      .custom(this.confirmReset)\r\n      .then((result) => {\r\n        if (result.value) {\r\n          this.confirmToReset();\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n  nextButton() {\r\n    this.surveyObject.nextPage();\r\n    this.surveyObject.render();\r\n  }\r\n\r\n  prevButton() {\r\n    this.surveyObject.prevPage();\r\n    this.surveyObject.render();\r\n  }\r\n\r\n  completeButton() {\r\n    //inside a subscribe because it has to wait for delete to happen before posting\r\n    this.surveyObject.completeText = \"Complete Page\"\r\n    this.surveyObject.render();\r\n\r\n    //\r\n    this.storeResponseAndSend(this.surveyObject);\r\n    this.completeLastPage = this.surveyObject.completeLastPage();\r\n\r\n    //redirect on survey submission\r\n    this.router.navigate([`/main/claimant-overview/${this.claimantId}`]);\r\n\r\n    //show toaster on success\r\n    this.toasterService.success(\"Success\", \"Survey has been submitted to the server\");\r\n\r\n    //Delete the responses\r\n    this.surveyService.deleteResponse(this.claimantId);\r\n\r\n  }\r\n\r\n  saveAndExitButton() {\r\n    this.storeResponseAndSend(this.surveyObject);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vY2xhaW1hbnQtb3ZlcnZpZXcvY2xhaW1hbnQtb3ZlcnZpZXcuY29tcG9uZW50LmNzcyJ9 */\"","//import angular modules\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n//import external modules\r\n//import user made modules\r\n\r\n//import components\r\nimport { ClaimComponent } from '../claim/claim.component';\r\n\r\n//import services\r\nimport { ClaimantService } from 'projects/opt-library/src/portal-services/claimant.service';\r\nimport { PortalService } from 'projects/opt-library/src/portal-services/portal.service';\r\n\r\n//import models or constants\r\nimport { ClaimantSO } from 'projects/opt-library/src/service-objects/claimant-so';\r\n\r\n\r\n@Component({\r\n  selector: 'app-claimant-overview',\r\n  templateUrl: './claimant-overview.component.html',\r\n  styleUrls: ['./claimant-overview.component.css']\r\n})\r\nexport class ClaimantOverviewComponent implements OnInit {\r\n  @Input() claimantId: number\r\n\r\n  claimantSO: ClaimantSO\r\n\r\n  constructor(private route: ActivatedRoute, \r\n    private claimantService: ClaimantService,\r\n    private claimantUsed: PortalService) { }\r\n\r\n  ngOnInit() {\r\n    this.claimantId = Number(this.route\r\n      .snapshot\r\n      .paramMap\r\n      .get('claimantId')\r\n    );\r\n    this.claimantOverview(this.claimantId)\r\n  }\r\n\r\n  claimantOverview(claimantId: number){\r\n    this.claimantService.\r\n    getClaimantById(claimantId)\r\n    .subscribe(claimantSO => { \r\n      this.claimantSO = claimantSO; \r\n      this.claimantUsed.claimantSO = this.claimantSO;\r\n     });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vY2xhaW1hbnQtcHJvZmlsZS9jbGFpbWFudC1wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\"","//import angular modules\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router, NavigationEnd } from '@angular/router';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\n//import external modules\r\n//import user made modules\r\n\r\n//import components\r\nimport { EditClaimantDetailsComponent } from 'projects/opt-library/src/lib/edit-claimant-details/edit-claimant-details.component';\r\nimport { EditClaimantAddressComponent } from 'projects/opt-library/src/lib/edit-claimant-address/edit-claimant-address.component';\r\nimport { ClaimComponent } from '../claim/claim.component';\r\n\r\n//import services\r\nimport { ModalService } from 'projects/opt-library/src/portal-services/modal.service';\r\nimport { PortalService } from 'projects/opt-library/src/portal-services/portal.service';\r\n\r\n//import models or constants\r\nimport { ClaimantSO } from 'projects/opt-library/src/service-objects/claimant-so';\r\n\r\n@Component({\r\n  selector: 'app-claimant-profile',\r\n  templateUrl: './claimant-profile.component.html',\r\n  styleUrls: ['./claimant-profile.component.css']\r\n})\r\n\r\nexport class ClaimantProfileComponent implements OnInit {\r\n  claimantSO: ClaimantSO;\r\n  profileForm: any;\r\n  claimantSOCopy: ClaimantSO;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private modalService: ModalService,\r\n    private claimantUsed: PortalService, \r\n    private formBuilder: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.claimantSO = this.claimantUsed.claimantSO;\r\n\r\n    console.log(this.claimantSO)\r\n\r\n    this.profileForm = this.formBuilder.group({\r\n      ssn: [''],\r\n      alternateClaimantId: [''],\r\n      firstName: [''],\r\n      lastName: [''],\r\n      middleInitial: [''],\r\n      dateOfBirth: [new Date(2019, 1, 1)],\r\n      homePhone: [''],\r\n      mobilePhone: [''],\r\n      preferredOccupation: [''],\r\n      languagePreference: [''],\r\n      gender: [''],\r\n      educationLevel: [''],\r\n      race: [''],\r\n      ethnicity: [''],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      city: [''],\r\n      state: [''],\r\n      zipCode: [''],\r\n      zipExt: [''],\r\n    });\r\n  }\r\n\r\n  //makes the editclaimant detail modal\r\n  openEditClaimantDetails(object: any){\r\n    this.modalService.open(EditClaimantDetailsComponent, object);\r\n  }\r\n\r\n   //makes the editclaimant address modal\r\n  openEditClaimantAddresses(object: any){\r\n    this.modalService.open(EditClaimantAddressComponent, object);\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vY2xhaW1hbnQtcmVnaXN0cmF0aW9uL2NsYWltYW50LXJlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","//import angular modules\r\nimport { Component, OnInit, AfterViewChecked } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n//import external modules\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatInputModule } from '@angular/material';\r\nimport { delay } from 'rxjs/internal/operators/delay';\r\n\r\n//import user made modules\r\n//import components\r\n//import services\r\nimport { ClaimantService } from 'projects/opt-library/src/portal-services/claimant.service';\r\nimport { ToasterService } from 'projects/opt-library/src/portal-services/toaster.service';\r\n\r\n//import models or constants\r\nimport { ClaimantSO } from 'projects/opt-library/src/service-objects/claimant-so';\r\nimport { Address } from 'projects/opt-library/src/service-objects/address';\r\nimport { STATECHOICES, GENDERCHOICES, RACECHOICES, ETHNICITYCHOICES, EDUCATIONLEVELCHOICES, LANGUAGEPREFERENCECHOICES } from '../../choices/choices'\r\nimport { Observable } from 'rxjs/internal/Observable';\r\n\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-claimant-registration',\r\n  templateUrl: './claimant-registration.component.html',\r\n  styleUrls: ['./claimant-registration.component.css']\r\n})\r\nexport class ClaimantRegistrationComponent implements OnInit {\r\n  userProfileModel = new ClaimantSO();\r\n  addressInitial = new Address();\r\n  claimantId: number;\r\n  claimantIdObservable$: Observable<number>;\r\n  stateChoices = STATECHOICES;\r\n  genderChoices = GENDERCHOICES;\r\n  raceChoices = RACECHOICES;\r\n  ethnicityChoices = ETHNICITYCHOICES;\r\n  educationLevelChoices = EDUCATIONLEVELCHOICES;\r\n  languagePreferenceChoices = LANGUAGEPREFERENCECHOICES;\r\n\r\n\r\n\r\n  profileForm = this.fb.group({\r\n    ssn: [\r\n      '',\r\n      Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(9),\r\n        Validators.maxLength(9),\r\n        Validators.pattern(\"[0-9]{9}\")\r\n      ])\r\n    ],\r\n    confirmSsn: [\r\n      '',\r\n      Validators.compose([Validators.required])\r\n    ],\r\n    firstName: [\r\n      '',\r\n      Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(2)\r\n      ])\r\n    ],\r\n    lastName: [\r\n      '',\r\n      Validators.required\r\n    ],\r\n    middleInitial: [\r\n      '',\r\n      Validators.compose([\r\n        Validators.maxLength(1),\r\n        Validators.pattern(\"[a-zA-z]*\")\r\n      ])\r\n    ],\r\n    dateOfBirth: [\r\n      new Date(2019, 1, 1),\r\n      Validators.required\r\n    ],\r\n    homePhone: [\r\n      '',\r\n      Validators.compose([\r\n        Validators.required,\r\n        Validators.maxLength(10),\r\n        Validators.pattern(\"[0-9]*\")\r\n      ])\r\n    ],\r\n    mobilePhone: [\r\n      '',\r\n      Validators.compose([\r\n        Validators.maxLength(10),\r\n        Validators.pattern(\"[0-9]*\")\r\n      ])\r\n    ],\r\n    preferredOccupation: [\r\n      '',\r\n      Validators.required\r\n    ],\r\n    languagePreference: [\r\n      '',\r\n      Validators.required\r\n    ],\r\n    gender: [\r\n      '',\r\n      Validators.required\r\n    ],\r\n    educationLevel: [\r\n      '',\r\n      Validators.required\r\n    ],\r\n    race: [\r\n      '',\r\n      Validators.required\r\n    ],\r\n    ethnicity: [\r\n      '',\r\n      Validators.required\r\n    ],\r\n    addressLine1: [\r\n      '',\r\n      Validators.required\r\n    ],\r\n    addressLine2: [\r\n      '',\r\n      Validators.required\r\n    ],\r\n    city: [\r\n      '',\r\n      Validators.required\r\n    ],\r\n    state: [\r\n      '',\r\n      Validators.required\r\n    ],\r\n    zipCode: [\r\n      '',\r\n      Validators.required\r\n    ],\r\n    zipExt: [\r\n      '',\r\n      Validators.required\r\n    ],\r\n  });\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private claimantService: ClaimantService,\r\n    private toasterService: ToasterService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.claimantId = 0;\r\n    this.addressInitial = {\r\n      id: null,\r\n      addressLine1: '',\r\n      addressLine2: '',\r\n      state: '',\r\n      city: '',\r\n      zipCode: '',\r\n      zipExt: '',\r\n      lastInsertUpdateTS: null,\r\n      lastInsertUpdateBy: '',\r\n    },\r\n\r\n      this.userProfileModel = {\r\n        claimantId: null,\r\n        ssn: '',\r\n        dateOfBirth: null,\r\n        firstName: '',\r\n        middleInitial: '',\r\n        lastName: '',\r\n        homePhone: '',\r\n        mobilePhone: '',\r\n        languagePreference: '',\r\n        educationLevel: '',\r\n        gender: '',\r\n        race: '',\r\n        ethnicity: '',\r\n        lastInsertUpdateTS: null,\r\n        lastInsertUpdateBy: '',\r\n        ivrPin: '',\r\n        documentDeliveryPreference: '',\r\n        address: [this.addressInitial],\r\n        email: '',\r\n        preferredOccupation: '',\r\n        alternateClaimantId: '',\r\n      };\r\n  }\r\n\r\n  debug = false;\r\n  submitted = false;\r\n\r\n  convertDateType() {\r\n    //date in form type is different from JSON's date\r\n    let ngbDate = this.profileForm.controls['dateOfBirth'].value;\r\n    let myDate = new Date(ngbDate.year, ngbDate.month - 1, ngbDate.day);\r\n    this.userProfileModel.dateOfBirth = myDate;\r\n\r\n  }\r\n\r\n\r\n  verifyBeforeSubmit() {\r\n    if (this.profileForm.valid) {\r\n\r\n      this.convertDateType();\r\n      this.onSubmit();\r\n    }\r\n    else {\r\n      this.profileForm.markAllAsTouched();\r\n      console.log(this.profileForm.value);\r\n\r\n      console.log(\"Error in submitting form\");\r\n      this.toasterService.danger(\"Error\", \"Some forms are not yet filled\");\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  //once register claimant service is modified, can use this to return a claimantId and reroute\r\n  onSubmit() {\r\n    this.claimantService\r\n      .registerClaimant(this.userProfileModel).subscribe(\r\n        data => {\r\n          this.claimantId = data;\r\n          console.log(\"claimant id in registration is now\", this.claimantId);\r\n          console.log(\"Submitted form\");\r\n          this.toasterService.success(\"Success\", \"Form was submitted\");\r\n\r\n          // redirect after\r\n          this.router.navigate([`/main/claimant-overview/${this.claimantId}`]);\r\n        }\r\n      );\r\n  }\r\n\r\n\r\n  compareFn(c1: any, c2: any): boolean {\r\n    return c1 && c2 ? c1.id === c2.id : c1 === c2;\r\n  }\r\n\r\n  //FILLER FUNCTIONS should be moved to a separate ts file\r\n\r\n  FillForm() {\r\n    this.addressInitial = {\r\n      id: null,\r\n      addressLine1: 'Old town',\r\n      addressLine2: 'road',\r\n      state: this.stateChoices[this.randomInteger(this.stateChoices.length - 1)],\r\n      city: 'Owl',\r\n      zipCode: Math\r\n        .random()\r\n        .toString(10)\r\n        .substr(2, 7),\r\n      zipExt: Math\r\n        .random()\r\n        .toString(10)\r\n        .substr(2, 7),\r\n      lastInsertUpdateTS: null,\r\n      lastInsertUpdateBy: '',\r\n    },\r\n\r\n      this.userProfileModel = {\r\n        claimantId: null,\r\n        ssn: Math.random().toString(10).substr(2, 9),\r\n        dateOfBirth: new Date(this.year(), this.month(), this.day()),\r\n        firstName: 'J' + this.vowel() + 'y' + this.vowel() + 'm',\r\n        middleInitial: this.vowel().toUpperCase(),\r\n        lastName: this.vowel().toUpperCase() + 'b' + this.vowel() + 'rd' + this.vowel() + 'l' + this.vowel() + 'z' + this.vowel(),\r\n        homePhone: Math.random().toString(10).substr(2, 10),\r\n        mobilePhone: Math.random().toString(10).substr(2, 10),\r\n        languagePreference: this.languagePreferenceChoices[this.randomInteger(this.languagePreferenceChoices.length - 1)],\r\n        educationLevel: this.educationLevelChoices[this.randomInteger(this.educationLevelChoices.length - 1)],\r\n        gender: this.genderChoices[this.randomInteger(this.genderChoices.length - 1)],\r\n        race: this.raceChoices[this.randomInteger(this.raceChoices.length - 1)],\r\n        ethnicity: this.ethnicityChoices[this.randomInteger(this.ethnicityChoices.length - 1)],\r\n        lastInsertUpdateTS: null,\r\n        lastInsertUpdateBy: '',\r\n        ivrPin: '',\r\n        documentDeliveryPreference: '',\r\n        address: [this.addressInitial],\r\n        email: '',\r\n        preferredOccupation: 'Student',\r\n        alternateClaimantId: '',\r\n      };\r\n\r\n    //after filling it up, it calls submit\r\n    this.onSubmit();\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  vowel(): string {\r\n    return Math.random().toString(5).replace('0.', '').substr(0, 1).replace('1', 'a').replace('0', 'e').replace('2', 'i').replace('3', 'o').replace('4', 'u')\r\n  }\r\n\r\n  day(): number {\r\n    return Math.floor(Math.random() * 30)\r\n  }\r\n\r\n  month(): number {\r\n    return Math.floor(Math.random() * 12)\r\n  }\r\n\r\n  year(): number {\r\n    return 1990 + Math.floor(Math.random() * 29)\r\n  }\r\n\r\n  randomInteger(max: number): number {\r\n    return Math.floor(Math.random() * max)\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from '../../../../node_modules/rxjs';\r\nimport { catchError } from 'rxjs/operators'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClaimantSearchService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // url = environment.apis.claimantSearch;\r\n  url = 'http://localhost:8080/claimant-search';\r\n\r\n  public searchClaimant(claimantInfo: string): Observable<any> {\r\n    var claimant: any = {\r\n      \"maximumResultCount\": 100,\r\n      \"searchString\": claimantInfo\r\n    }\r\n    return this.http.post<any>(this.url, claimant);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vY2xhaW1hbnQtc2VhcmNoL2NsYWltYW50LXNlYXJjaC5jb21wb25lbnQuY3NzIn0= */\"","//import angular modules\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n//import external modules\r\nimport { Subscription } from 'rxjs';\r\n\r\n//import user made modules\r\n//import components\r\n\r\n//import services\r\nimport { ClaimantService } from 'projects/opt-library/src/portal-services/claimant.service';\r\nimport { ToasterService } from 'projects/opt-library/src/portal-services/toaster.service';\r\nimport { AlertService } from 'projects/opt-library/src/portal-services/alert.service';\r\n//import models or constants\r\nimport { ClaimantSO } from 'projects/opt-library/src/service-objects/claimant-so';\r\nimport { KeycloakService } from 'keycloak-angular';\r\nimport { ClaimantSearchService } from '../claimant-search-service/claimant-search.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-claimant-search',\r\n  templateUrl: './claimant-search.component.html',\r\n  styleUrls: ['./claimant-search.component.css']\r\n})\r\nexport class ClaimantSearchComponent implements OnInit {\r\n  public claimantInfo: string;\r\n  claimantSO: ClaimantSO[];\r\n  previousUrl: any;\r\n  subscription: Subscription;\r\n  columnsToDisplay: string[];\r\n  noSearchResultObject: object;\r\n  \r\n  constructor(private claimantService: ClaimantService, \r\n    private route: ActivatedRoute, \r\n    private toasterService: ToasterService, \r\n    private alert: AlertService, \r\n    private router: Router,\r\n    protected keycloakService: KeycloakService,\r\n    private searchService: ClaimantSearchService\r\n  ) { \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n      this.claimantInfo = this.route.snapshot.paramMap.get('claimantInfo');\r\n      this.searchClaimant(this.claimantInfo);\r\n      // this.columnsToDisplay = ['ssn', 'name', 'dateOfBirth', 'homePhone', 'mobilePhone', 'address'];\r\n      this.columnsToDisplay = ['ssn', 'name', 'homePhone', 'mobilePhone', 'claimantAddresses'];\r\n\r\n      //for the sweet alert\r\n      this.noSearchResultObject = {\r\n        type: 'info',\r\n        title: \"Info\",\r\n        text: \"Sorry, there are no results for the given string\",\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Go to Claimant Registration',\r\n        cancelButtonText: 'Cancel',\r\n        confirmButtonClass: 'btn btn-primary',\r\n        cancelButtonClass: 'btn btn-info',\r\n      }\r\n  }\r\n\r\n  getClaimantSO(): void {\r\n    this.claimantService\r\n      .getAllClaimants()\r\n      .subscribe(claimantSO => this.claimantSO = claimantSO);\r\n  }\r\n\r\n  searchClaimant(claimantInfo: string) {\r\n    // this.claimantService\r\n    // .searchClaimant(claimantInfo)\r\n    // .subscribe(claimantSO => {this.claimantSO = claimantSO;\r\n    //   if(claimantSO.length > 1) {\r\n    //     this.toasterService.success(\r\n    //       \"Success\", \r\n    //       \"There are \" + String(claimantSO.length) + \" results for your query.\"\r\n    //     );\r\n    //   } else if(claimantSO.length == 1) {\r\n    //     this.toasterService.success(\r\n    //       \"Success\", \r\n    //       \"There is \" + String(claimantSO.length) + \" result for your query.\");\r\n    //   } else if(claimantSO.length == 0) {\r\n    //     this.alert\r\n    //     .custom(this.noSearchResultObject)\r\n    //     .then((result) => {\r\n    //       if(result.value) {\r\n    //         this.noSearchResult();\r\n    //       }\r\n    //     })\r\n    //   }\r\n    // });\r\n\r\n    this.searchService\r\n    .searchClaimant(claimantInfo)\r\n    .subscribe(claimantSO => {\r\n      console.log(claimantSO);\r\n      console.log(123);\r\n      this.claimantSO = claimantSO;\r\n      if(claimantSO.length > 1) {\r\n        this.toasterService.success(\r\n          \"Success\", \r\n          \"There are \" + String(claimantSO.length) + \" results for your query.\"\r\n        );\r\n      } else if(claimantSO.length == 1) {\r\n        this.toasterService.success(\r\n          \"Success\", \r\n          \"There is \" + String(claimantSO.length) + \" result for your query.\");\r\n      } else if(claimantSO.length == 0) {\r\n        this.alert\r\n        .custom(this.noSearchResultObject)\r\n        .then((result) => {\r\n          if(result.value) {\r\n            this.noSearchResult();\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  noSearchResult() {\r\n    this.router.navigate([`main/claimant-registration`]);\r\n  }\r\n\r\n  refreshToken() {\r\n    console.log(this.keycloakService.getKeycloakInstance());\r\n    this.keycloakService.getKeycloakInstance().updateToken(10).success(event => console.log(event));\r\n    console.log(this.keycloakService.getKeycloakInstance());\r\n  }\r\n}\r\n","\r\n//import angular modules\r\nimport { Component, OnInit, ViewChild, APP_INITIALIZER, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\n\r\n//import external modules\r\nimport { ToastContainerDirective } from 'ngx-toastr';\r\n\r\n//import user made modules\r\n//import components\r\nimport { JsqueryTestComponent } from './../../jsquery-test/jsquery-test.component'\r\n\r\n//import services\r\nimport { ToasterService } from 'projects/opt-library/src/portal-services/toaster.service';\r\nimport { KeycloakService } from 'keycloak-angular';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { AgencyServiceService } from 'src/app/agency-service.service';\r\nimport { PortalService } from 'projects/opt-library/src/portal-services/portal.service';\r\n\r\n//import models or constants\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styles: []\r\n\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n\r\n  userid: any;\r\n  @ViewChild(ToastContainerDirective, { static: false }) toastContainer: ToastContainerDirective;\r\n\r\n  constructor(private toasterService: ToasterService, protected keycloakService: KeycloakService, private agencyService: AgencyServiceService, private portalService: PortalService) { }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.toasterService.overlayContainer = this.toastContainer;\r\n    let userDetails = this.keycloakService.getKeycloakInstance();\r\n    console.log(userDetails);\r\n    console.log(userDetails.tokenParsed[\"exp\"]);\r\n    // console.log(userDetails.realmAccess[\"roles\"]);\r\n    // console.log(userDetails.profile[\"email\"]);\r\n\r\n    this.keycloakService.getToken().then(\r\n      data => {\r\n        console.log(\"this is the tokenParsed\", this.keycloakService.getKeycloakInstance().tokenParsed);\r\n        console.log(\"getting the token\");\r\n        this.userid = this.keycloakService.getKeycloakInstance().tokenParsed.sub;\r\n        console.log(\"token is\", this.userid);\r\n        console.log(\"inside the getToken()\");\r\n        this.agencyService.getAgencyStaff(this.userid).subscribe(\r\n          dataNew => {\r\n            console.log(\"inside the getAgencyService\", dataNew);\r\n            console.log(\"setting the first name to\",dataNew.firstName)\r\n            this.portalService.firstName=dataNew.firstName;\r\n\r\n          }\r\n\r\n        )\r\n      }\r\n\r\n    );\r\n\r\n  }\r\n\r\n  success() {\r\n    this.toasterService.success(\"Success!\", \"Welcome to Home\");\r\n  }\r\n\r\n  getToken() {\r\n    this.keycloakService.getToken().then(\r\n      data => {\r\n        console.log(\"we are inside the get token function\");\r\n        console.log(\"this is the tokenParsed\", this.keycloakService.getKeycloakInstance().tokenParsed);\r\n        console.log(\"this is the idTokenParsed\", this.keycloakService.getKeycloakInstance().idTokenParsed);\r\n        console.log(\"this might be the token \", this.keycloakService.getKeycloakInstance().tokenParsed.sub);\r\n        this.userid = this.keycloakService.getKeycloakInstance().tokenParsed.sub;\r\n      }\r\n    );\r\n  }\r\n\r\n  getAgencyButton() {\r\n    this.keycloakService.getToken().then(\r\n      data => {\r\n        console.log(\"getting the token\");\r\n        this.userid = this.keycloakService.getKeycloakInstance().tokenParsed.sub;\r\n        console.log(\"inside the getToken()\");\r\n        this.agencyService.getAgencyStaff(this.userid).subscribe(\r\n          dataNew => {\r\n            console.log(\"inside the getAgencyService\", dataNew);\r\n            this.portalService.firstName=\"jane eyre\";\r\n\r\n          }\r\n\r\n        )\r\n      }\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport { ToastContainerDirective } from 'ngx-toastr';\r\nimport { Router, NavigationEnd, ActivatedRoute} from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { ToasterService } from 'projects/opt-library/src/portal-services/toaster.service';\r\nimport { ModalService } from 'projects/opt-library/src/portal-services/modal.service';\r\nimport { KeycloakService } from 'keycloak-angular';\r\nimport { AlertService } from 'projects/opt-library/src/portal-services/alert.service';\r\nimport {Idle, DEFAULT_INTERRUPTSOURCES} from '@ng-idle/core';\r\nimport {Keepalive} from '@ng-idle/keepalive';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html'\r\n})\r\nexport class MainComponent implements OnInit {\r\n  idleState = 'Not started.';\r\n  timedOut = false;\r\n  lastPing?: Date = null;\r\n  subscriptionStart: Subscription\r\n  subscriptionEnd: Subscription\r\n  previousUrl: any\r\n  accessPermission = false;\r\n\r\n  @ViewChild(ToastContainerDirective, {static: false}) toastContainer: ToastContainerDirective;\r\n\r\n  constructor(private toasterService: ToasterService,\r\n    private modalService: ModalService,\r\n    private router: Router,\r\n    private keycloakService: KeycloakService,\r\n    private idle: Idle,\r\n    private keepalive: Keepalive\r\n  ) {\r\n    router.events.forEach(event => {\r\n      if(event instanceof NavigationEnd) {\r\n        modalService.close();\r\n      }\r\n    });\r\n\r\n    // sets an idle timeout of 5 seconds, for testing purposes.\r\n    idle.setIdle(5000);\r\n    // sets a timeout period of 5 seconds. after 10 seconds of inactivity, the user will be considered timed out.\r\n    idle.setTimeout(1000);\r\n    // sets the default interrupts, in this case, things like clicks, scrolls, touches to the document\r\n    idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\r\n    \r\n    idle.onIdleEnd.subscribe(() => this.idleState = 'No longer idle.');\r\n    idle.onTimeout.subscribe(() => {\r\n      this.idleState = 'Timed out!';\r\n      this.timedOut = true;\r\n      this.doLogout();\r\n    });\r\n    idle.onIdleStart.subscribe(() => this.idleState = 'You\\'ve gone idle!');\r\n    idle.onTimeoutWarning.subscribe((countdown) => this.idleState = 'You will time out in ' + countdown + ' seconds!');\r\n    \r\n    // sets the ping interval to 15 seconds\r\n    keepalive.interval(15);\r\n    \r\n    keepalive.onPing.subscribe(() => this.lastPing = new Date());\r\n    \r\n    this.reset();\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.toasterService.overlayContainer = this.toastContainer;\r\n  }\r\n\r\n  async doLogout() {\r\n    await this.keycloakService.logout();\r\n  }\r\n\r\n  reset() {\r\n    this.idle.watch();\r\n    this.idleState = 'Started.';\r\n    this.timedOut = false;\r\n  }\r\n}\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdC1hdXRob3JpemVkL25vdC1hdXRob3JpemVkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-authorized',\r\n  templateUrl: './not-authorized.component.html',\r\n  styleUrls: ['./not-authorized.component.css']\r\n})\r\nexport class NotAuthorizedComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { NgbDateParserFormatter, NgbDateStruct } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\nfunction padNumber(value: number) {\r\n    if (isNumber(value)) {\r\n        return `0${value}`.slice(-2);\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nfunction isNumber(value: any): boolean {\r\n    return !isNaN(toInteger(value));\r\n}\r\n\r\nfunction toInteger(value: any): number {\r\n    return parseInt(`${value}`, 10);\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class NgbDateFRParserFormatter extends NgbDateParserFormatter {\r\n    parse(value: string): NgbDateStruct {\r\n        if (value) {\r\n            const dateParts = value.trim().split('/');\r\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\r\n                return {year: toInteger(dateParts[0]), month: null, day: null};\r\n            } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\r\n                return {year: toInteger(dateParts[1]), month: toInteger(dateParts[0]), day: null};\r\n            } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\r\n                return {year: toInteger(dateParts[2]), month: toInteger(dateParts[1]), day: toInteger(dateParts[0])};\r\n            }\r\n        }   \r\n        return null;\r\n    }\r\n\r\n    format(date: NgbDateStruct): string {\r\n        let stringDate: string = \"\"; \r\n        if(date) {\r\n            stringDate += isNumber(date.month) ? padNumber(date.month) + \"/\" : \"\";\r\n            stringDate += isNumber(date.day) ? padNumber(date.day) + \"/\" : \"\";\r\n            stringDate += date.year;\r\n        }\r\n        return stringDate;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-side-nav-bar',\r\n  templateUrl: './side-nav-bar.component.html',\r\n  styles: []\r\n})\r\nexport class SideNavBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationEnd } from \"@angular/router\"\r\nimport { KeycloakService } from 'keycloak-angular';\r\nimport { PortalService } from 'projects/opt-library/src/portal-services/portal.service';\r\n\r\n@Component({\r\n  selector: 'app-top-nav-bar',\r\n  templateUrl: './top-nav-bar.component.html',\r\n  styles: []\r\n})\r\nexport class TopNavBarComponent implements OnInit {\r\n  firstName: string;\r\n  constructor(private router: Router, private keycloakService: KeycloakService, public portalService: PortalService) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = function(){\r\n      return false;\r\n   }\r\n\r\n   this.router.events.subscribe((evt) => {\r\n      if (evt instanceof NavigationEnd) {\r\n         this.router.navigated = false;\r\n         window.scrollTo(0, 0);\r\n      }\r\n    });\r\n\r\n\r\n    this.portalService = portalService;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.firstName = this.portalService.firstName;\r\n  }\r\n\r\n  searchClaimant(){\r\n    var claimantInfo = (<HTMLInputElement>document.getElementById('searchText')).value;\r\n    this.router.navigate([`main/claimant-search/${claimantInfo}`])\r\n  }\r\n\r\n  async doLogout() {\r\n    await this.keycloakService.logout();\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\nimport { KeycloakConfig } from 'keycloak-angular';\r\n\r\nlet keycloakConfig: KeycloakConfig = {\r\n  url: 'https://auth.opt-dev.optimumui.com/auth',\r\n  realm: 'agencyusers',\r\n  clientId: 'agency'\r\n  // url: 'http://localhost:8080/auth',\r\n  // realm: 'Master',\r\n  // clientId: 'agency-portal'\r\n};\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apis: {claimantSearch: 'https://api.opt-dev.optimumui.com/search-service/api/search/claimant'},\r\n  keycloak: keycloakConfig\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}